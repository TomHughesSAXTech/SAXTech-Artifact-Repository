import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/**
 * Defines values for AcquireStorageAccountLock. \
 * {@link KnownAcquireStorageAccountLock} can be used interchangeably with AcquireStorageAccountLock,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Acquire** \
 * **NotAcquire**
 */
export declare type AcquireStorageAccountLock = string;

/** Azure backup goal feature specific request. */
export declare interface AzureBackupGoalFeatureSupportRequest extends FeatureSupportRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    featureType: "AzureBackupGoals";
}

/** AzureBackupServer (DPMVenus) workload-specific protection container. */
export declare interface AzureBackupServerContainer extends DpmContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "AzureBackupServerContainer";
}

/** Backup engine type when Azure Backup Server is used to manage the backups. */
export declare interface AzureBackupServerEngine extends BackupEngineBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupEngineType: "AzureBackupServerEngine";
}

/** AzureFileShare workload-specific backup request. */
export declare interface AzureFileShareBackupRequest extends BackupRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureFileShareBackupRequest";
    /** Backup copy will expire after the time specified (UTC). */
    recoveryPointExpiryTimeInUTC?: Date;
}

/** Protectable item for Azure Fileshare workloads. */
export declare interface AzureFileShareProtectableItem extends WorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "AzureFileShare";
    /** Full Fabric ID of container to which this protectable item belongs. For example, ARM ID. */
    parentContainerFabricId?: string;
    /** Friendly name of container to which this protectable item belongs. */
    parentContainerFriendlyName?: string;
    /** File Share type XSync or XSMB. */
    azureFileShareType?: AzureFileShareType;
}

/** Azure File Share workload-specific backup item. */
export declare interface AzureFileshareProtectedItem extends ProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "AzureFileShareProtectedItem";
    /** Friendly name of the fileshare represented by this backup item. */
    friendlyName?: string;
    /** Backup status of this backup item. */
    protectionStatus?: string;
    /** Backup state of this backup item. */
    protectionState?: ProtectionState;
    /** Last backup operation status. Possible values: Healthy, Unhealthy. */
    lastBackupStatus?: string;
    /** Timestamp of the last backup operation on this backup item. */
    lastBackupTime?: Date;
    /** Health details of different KPIs */
    kpisHealths?: {
        [propertyName: string]: KPIResourceHealthDetails;
    };
    /** Additional information with this backup item. */
    extendedInfo?: AzureFileshareProtectedItemExtendedInfo;
}

/** Additional information about Azure File Share backup item. */
export declare interface AzureFileshareProtectedItemExtendedInfo {
    /** The oldest backup copy available for this item in the service. */
    oldestRecoveryPoint?: Date;
    /** Number of available backup copies associated with this backup item. */
    recoveryPointCount?: number;
    /** Indicates consistency of policy object and policy applied to this backup item. */
    policyState?: string;
    /**
     * Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceState?: string;
    /**
     * The resource state sync time for this backup item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceStateSyncTime?: Date;
}

/** AzureStorage backup policy. */
export declare interface AzureFileShareProtectionPolicy extends ProtectionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupManagementType: "AzureStorage";
    /** Type of workload for the backup management */
    workLoadType?: WorkloadType;
    /** Backup schedule specified as part of backup policy. */
    schedulePolicy?: SchedulePolicyUnion;
    /** Retention policy with the details on backup copy retention ranges. */
    retentionPolicy?: RetentionPolicyUnion;
    /** TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time". */
    timeZone?: string;
}

/** Update snapshot Uri with the correct friendly Name of the source Azure file share. */
export declare interface AzureFileShareProvisionILRRequest extends ILRRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureFileShareProvisionILRRequest";
    /** Recovery point ID. */
    recoveryPointId?: string;
    /** Source Storage account ARM Id */
    sourceResourceId?: string;
}

/** Azure File Share workload specific backup copy. */
export declare interface AzureFileShareRecoveryPoint extends RecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureFileShareRecoveryPoint";
    /** Type of the backup copy. Specifies whether it is a crash consistent backup or app consistent. */
    recoveryPointType?: string;
    /** Time at which this backup copy was created. */
    recoveryPointTime?: Date;
    /** Contains Url to the snapshot of fileshare, if applicable */
    fileShareSnapshotUri?: string;
    /** Contains recovery point size */
    recoveryPointSizeInGB?: number;
    /** Properties of Recovery Point */
    recoveryPointProperties?: RecoveryPointProperties;
}

/** AzureFileShare Restore Request */
export declare interface AzureFileShareRestoreRequest extends RestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureFileShareRestoreRequest";
    /** Type of this recovery. */
    recoveryType?: RecoveryType;
    /** Source storage account ARM Id */
    sourceResourceId?: string;
    /** Options to resolve copy conflicts. */
    copyOptions?: CopyOptions;
    /** Restore Type (FullShareRestore or ItemLevelRestore) */
    restoreRequestType?: RestoreRequestType;
    /** List of Source Files/Folders(which need to recover) and TargetFolderPath details */
    restoreFileSpecs?: RestoreFileSpecs[];
    /** Target File Share Details */
    targetDetails?: TargetAFSRestoreInfo;
}

/**
 * Defines values for AzureFileShareType. \
 * {@link KnownAzureFileShareType} can be used interchangeably with AzureFileShareType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **XSMB** \
 * **XSync**
 */
export declare type AzureFileShareType = string;

/** IaaS VM workload-specific backup item representing a classic virtual machine. */
export declare interface AzureIaaSClassicComputeVMContainer extends IaaSVMContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "Microsoft.ClassicCompute/virtualMachines";
}

/** IaaS VM workload-specific backup item representing the Classic Compute VM. */
export declare interface AzureIaaSClassicComputeVMProtectableItem extends IaaSVMProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "Microsoft.ClassicCompute/virtualMachines";
}

/** IaaS VM workload-specific backup item representing the Classic Compute VM. */
export declare interface AzureIaaSClassicComputeVMProtectedItem extends AzureIaaSVMProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "Microsoft.ClassicCompute/virtualMachines";
}

/** IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine. */
export declare interface AzureIaaSComputeVMContainer extends IaaSVMContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "Microsoft.Compute/virtualMachines";
}

/** IaaS VM workload-specific backup item representing the Azure Resource Manager VM. */
export declare interface AzureIaaSComputeVMProtectableItem extends IaaSVMProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "Microsoft.Compute/virtualMachines";
}

/** IaaS VM workload-specific backup item representing the Azure Resource Manager VM. */
export declare interface AzureIaaSComputeVMProtectedItem extends AzureIaaSVMProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "Microsoft.Compute/virtualMachines";
}

/** Azure IaaS VM workload-specific error information. */
export declare interface AzureIaaSVMErrorInfo {
    /**
     * Error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly errorCode?: number;
    /**
     * Title: Typically, the entity that the error pertains to.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly errorTitle?: string;
    /**
     * Localized error string.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly errorString?: string;
    /**
     * List of localized recommendations for above error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendations?: string[];
}

/** Azure IaaS VM workload-specific Health Details. */
export declare interface AzureIaaSVMHealthDetails extends ResourceHealthDetails {
}

/** Azure IaaS VM workload-specific job object. */
export declare interface AzureIaaSVMJob extends Job {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    jobType: "AzureIaaSVMJob";
    /** Time elapsed during the execution of this job. */
    duration?: string;
    /** Gets or sets the state/actions applicable on this job like cancel/retry. */
    actionsInfo?: JobSupportedAction[];
    /** Error details on execution of this job. */
    errorDetails?: AzureIaaSVMErrorInfo[];
    /** Specifies whether the backup item is a Classic or an Azure Resource Manager VM. */
    virtualMachineVersion?: string;
    /** Additional information for this job. */
    extendedInfo?: AzureIaaSVMJobExtendedInfo;
    /** Container name of the entity on which the current job is executing. */
    containerName?: string;
    /** Indicated that whether the job is adhoc(true) or scheduled(false) */
    isUserTriggered?: boolean;
}

/** Azure IaaS VM workload-specific additional information for job. */
export declare interface AzureIaaSVMJobExtendedInfo {
    /** List of tasks associated with this job. */
    tasksList?: AzureIaaSVMJobTaskDetails[];
    /** Job properties. */
    propertyBag?: {
        [propertyName: string]: string;
    };
    /** Job internal properties. */
    internalPropertyBag?: {
        [propertyName: string]: string;
    };
    /** Indicates progress of the job. Null if it has not started or completed. */
    progressPercentage?: number;
    /** Time remaining for execution of this job. */
    estimatedRemainingDuration?: string;
    /** Non localized error message on job execution. */
    dynamicErrorMessage?: string;
}

/** Azure IaaS VM workload-specific job task details. */
export declare interface AzureIaaSVMJobTaskDetails {
    /** The task display name. */
    taskId?: string;
    /** The start time. */
    startTime?: Date;
    /** The end time. */
    endTime?: Date;
    /** The instanceId. */
    instanceId?: string;
    /** Time elapsed for task. */
    duration?: string;
    /** The status. */
    status?: string;
    /** Progress of the task. */
    progressPercentage?: number;
    /**
     * Details about execution of the task.
     * eg: number of bytes transferred etc
     */
    taskExecutionDetails?: string;
}

/** Azure IaaS VM workload-specific job object. */
export declare interface AzureIaaSVMJobV2 extends Job {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    jobType: "AzureIaaSVMJobV2";
    /** Gets or sets the state/actions applicable on this job like cancel/retry. */
    actionsInfo?: JobSupportedAction[];
    /** Container name of the entity on which the current job is executing. */
    containerName?: string;
    /** Time elapsed during the execution of this job. */
    duration?: string;
    /** Error details on execution of this job. */
    errorDetails?: AzureIaaSVMErrorInfo[];
    /** Specifies whether the backup item is a Classic or an Azure Resource Manager VM. */
    virtualMachineVersion?: string;
    /** Additional information for this job. */
    extendedInfo?: AzureIaaSVMJobExtendedInfo;
}

/** IaaS VM workload-specific backup item. */
export declare interface AzureIaaSVMProtectedItem extends ProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "AzureIaaSVMProtectedItem" | "Microsoft.ClassicCompute/virtualMachines" | "Microsoft.Compute/virtualMachines";
    /**
     * Friendly name of the VM represented by this backup item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly friendlyName?: string;
    /**
     * Fully qualified ARM ID of the virtual machine represented by this item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly virtualMachineId?: string;
    /** Backup status of this backup item. */
    protectionStatus?: string;
    /** Backup state of this backup item. */
    protectionState?: ProtectionState;
    /**
     * Health status of protected item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly healthStatus?: HealthStatus;
    /** Health details on this backup item. */
    healthDetails?: AzureIaaSVMHealthDetails[];
    /** Health details of different KPIs */
    kpisHealths?: {
        [propertyName: string]: KPIResourceHealthDetails;
    };
    /** Last backup operation status. */
    lastBackupStatus?: string;
    /**
     * Timestamp of the last backup operation on this backup item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastBackupTime?: Date;
    /**
     * Data ID of the protected item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly protectedItemDataId?: string;
    /** Additional information for this backup item. */
    extendedInfo?: AzureIaaSVMProtectedItemExtendedInfo;
    /** Extended Properties for Azure IaasVM Backup. */
    extendedProperties?: ExtendedProperties;
}

/** Additional information on Azure IaaS VM specific backup item. */
export declare interface AzureIaaSVMProtectedItemExtendedInfo {
    /** The oldest backup copy available for this backup item across all tiers. */
    oldestRecoveryPoint?: Date;
    /** The oldest backup copy available for this backup item in vault tier */
    oldestRecoveryPointInVault?: Date;
    /** The oldest backup copy available for this backup item in archive tier */
    oldestRecoveryPointInArchive?: Date;
    /** The latest backup copy available for this backup item in archive tier */
    newestRecoveryPointInArchive?: Date;
    /** Number of backup copies available for this backup item. */
    recoveryPointCount?: number;
    /** Specifies if backup policy associated with the backup item is inconsistent. */
    policyInconsistent?: boolean;
}

export declare type AzureIaaSVMProtectedItemUnion = AzureIaaSVMProtectedItem | AzureIaaSClassicComputeVMProtectedItem | AzureIaaSComputeVMProtectedItem;

/** IaaS VM workload-specific backup policy. */
export declare interface AzureIaaSVMProtectionPolicy extends ProtectionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupManagementType: "AzureIaasVM";
    instantRPDetails?: InstantRPAdditionalDetails;
    /** Backup schedule specified as part of backup policy. */
    schedulePolicy?: SchedulePolicyUnion;
    /** Retention policy with the details on backup copy retention ranges. */
    retentionPolicy?: RetentionPolicyUnion;
    /**
     * Tiering policy to automatically move RPs to another tier
     * Key is Target Tier, defined in RecoveryPointTierType enum.
     * Tiering policy specifies the criteria to move RP to the target tier.
     */
    tieringPolicy?: {
        [propertyName: string]: TieringPolicy;
    };
    /** Instant RP retention policy range in days */
    instantRpRetentionRangeInDays?: number;
    /** TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time". */
    timeZone?: string;
    policyType?: IaasvmPolicyType;
}

/** Azure Recovery Services Vault specific protection intent item. */
export declare interface AzureRecoveryServiceVaultProtectionIntent extends ProtectionIntent {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectionIntentItemType: "RecoveryServiceVaultItem" | "AzureWorkloadAutoProtectionIntent" | "AzureWorkloadSQLAutoProtectionIntent";
}

export declare type AzureRecoveryServiceVaultProtectionIntentUnion = AzureRecoveryServiceVaultProtectionIntent | AzureWorkloadAutoProtectionIntentUnion;

/** IaaS VM specific backup protection intent item. */
export declare interface AzureResourceProtectionIntent extends ProtectionIntent {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectionIntentItemType: "AzureResourceItem";
    /** Friendly name of the VM represented by this backup item. */
    friendlyName?: string;
}

/** Container for SQL workloads under SQL Availability Group. */
export declare interface AzureSqlagWorkloadContainerProtectionContainer extends AzureWorkloadContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "SQLAGWorkLoadContainer";
}

/** Azure Sql workload-specific container. */
export declare interface AzureSqlContainer extends ProtectionContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "AzureSqlContainer";
}

/** Azure SQL workload-specific backup item. */
export declare interface AzureSqlProtectedItem extends ProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "Microsoft.Sql/servers/databases";
    /** Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services. */
    protectedItemDataId?: string;
    /** Backup state of the backed up item. */
    protectionState?: ProtectedItemState;
    /** Additional information for this backup item. */
    extendedInfo?: AzureSqlProtectedItemExtendedInfo;
}

/** Additional information on Azure Sql specific protected item. */
export declare interface AzureSqlProtectedItemExtendedInfo {
    /** The oldest backup copy available for this item in the service. */
    oldestRecoveryPoint?: Date;
    /** Number of available backup copies associated with this backup item. */
    recoveryPointCount?: number;
    /** State of the backup policy associated with this backup item. */
    policyState?: string;
}

/** Azure SQL workload-specific backup policy. */
export declare interface AzureSqlProtectionPolicy extends ProtectionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupManagementType: "AzureSql";
    /** Retention policy details. */
    retentionPolicy?: RetentionPolicyUnion;
}

/** Azure Storage Account workload-specific container. */
export declare interface AzureStorageContainer extends ProtectionContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "StorageContainer";
    /** Fully qualified ARM url. */
    sourceResourceId?: string;
    /** Storage account version. */
    storageAccountVersion?: string;
    /** Resource group name of Recovery Services Vault. */
    resourceGroup?: string;
    /** Number of items backed up in this container. */
    protectedItemCount?: number;
    /** Whether storage account lock is to be acquired for this container or not. */
    acquireStorageAccountLock?: AcquireStorageAccountLock;
}

/** Azure storage specific error information */
export declare interface AzureStorageErrorInfo {
    /** Error code. */
    errorCode?: number;
    /** Localized error string. */
    errorString?: string;
    /** List of localized recommendations for above error code. */
    recommendations?: string[];
}

/** Azure storage specific job. */
export declare interface AzureStorageJob extends Job {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    jobType: "AzureStorageJob";
    /** Time elapsed during the execution of this job. */
    duration?: string;
    /** Gets or sets the state/actions applicable on this job like cancel/retry. */
    actionsInfo?: JobSupportedAction[];
    /** Error details on execution of this job. */
    errorDetails?: AzureStorageErrorInfo[];
    /** Specifies friendly name of the storage account. */
    storageAccountName?: string;
    /** Specifies whether the Storage account is a Classic or an Azure Resource Manager Storage account. */
    storageAccountVersion?: string;
    /** Additional information about the job. */
    extendedInfo?: AzureStorageJobExtendedInfo;
    /** Indicated that whether the job is adhoc(true) or scheduled(false) */
    isUserTriggered?: boolean;
}

/** Azure Storage workload-specific additional information for job. */
export declare interface AzureStorageJobExtendedInfo {
    /** List of tasks for this job */
    tasksList?: AzureStorageJobTaskDetails[];
    /** Job properties. */
    propertyBag?: {
        [propertyName: string]: string;
    };
    /** Non localized error message on job execution. */
    dynamicErrorMessage?: string;
}

/** Azure storage workload specific job task details. */
export declare interface AzureStorageJobTaskDetails {
    /** The task display name. */
    taskId?: string;
    /** The status. */
    status?: string;
}

/** Azure Storage-specific protectable containers */
export declare interface AzureStorageProtectableContainer extends ProtectableContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableContainerType: "StorageContainer";
}

/** Azure workload-specific container */
export declare interface AzureVMAppContainerProtectableContainer extends ProtectableContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableContainerType: "VMAppContainer";
}

/** Container for SQL workloads under Azure Virtual Machines. */
export declare interface AzureVMAppContainerProtectionContainer extends AzureWorkloadContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "VMAppContainer";
}

/** AzureResource(IaaS VM) Specific feature support request */
export declare interface AzureVMResourceFeatureSupportRequest extends FeatureSupportRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    featureType: "AzureVMResourceBackup";
    /** Size of the resource: VM size(A/D series etc) in case of IaasVM */
    vmSize?: string;
    /** SKUs (Premium/Managed etc) in case of IaasVM */
    vmSku?: string;
}

/** Response for feature support requests for Azure IaasVm */
export declare interface AzureVMResourceFeatureSupportResponse {
    /** Support status of feature */
    supportStatus?: SupportStatus;
}

/** Azure VM workload-specific workload item. */
export declare interface AzureVmWorkloadItem extends WorkloadItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    workloadItemType: "AzureVmWorkloadItem" | "SAPAseDatabase" | "SAPAseSystem" | "SAPHanaDatabase" | "SAPHanaSystem" | "SQLDataBase" | "SQLInstance";
    /** Name for instance or AG */
    parentName?: string;
    /** Host/Cluster Name for instance or AG */
    serverName?: string;
    /** Indicates if workload item is auto-protectable */
    isAutoProtectable?: boolean;
    /** For instance or AG, indicates number of DB's present */
    subinquireditemcount?: number;
    /** For instance or AG, indicates number of DB's to be protected */
    subWorkloadItemCount?: number;
}

export declare type AzureVmWorkloadItemUnion = AzureVmWorkloadItem | AzureVmWorkloadSAPAseDatabaseWorkloadItem | AzureVmWorkloadSAPAseSystemWorkloadItem | AzureVmWorkloadSAPHanaDatabaseWorkloadItem | AzureVmWorkloadSAPHanaSystemWorkloadItem | AzureVmWorkloadSQLDatabaseWorkloadItem | AzureVmWorkloadSQLInstanceWorkloadItem;

/** Azure VM workload-specific protectable item. */
export declare interface AzureVmWorkloadProtectableItem extends WorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "AzureVmWorkloadProtectableItem" | "SAPAseSystem" | "SAPHanaDatabase" | "SAPHanaSystem" | "SAPHanaDBInstance" | "HanaHSRContainer" | "SQLAvailabilityGroupContainer" | "SQLDataBase" | "SQLInstance";
    /** Name for instance or AG */
    parentName?: string;
    /**
     * Parent Unique Name is added to provide the service formatted URI Name of the Parent
     * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
     */
    parentUniqueName?: string;
    /** Host/Cluster Name for instance or AG */
    serverName?: string;
    /** Indicates if protectable item is auto-protectable */
    isAutoProtectable?: boolean;
    /** Indicates if protectable item is auto-protected */
    isAutoProtected?: boolean;
    /** For instance or AG, indicates number of DB's present */
    subinquireditemcount?: number;
    /** For instance or AG, indicates number of DB's to be protected */
    subprotectableitemcount?: number;
    /** Pre-backup validation for protectable objects */
    prebackupvalidation?: PreBackupValidation;
    /** Indicates if item is protectable */
    isProtectable?: boolean;
}

export declare type AzureVmWorkloadProtectableItemUnion = AzureVmWorkloadProtectableItem | AzureVmWorkloadSAPAseSystemProtectableItem | AzureVmWorkloadSAPHanaDatabaseProtectableItem | AzureVmWorkloadSAPHanaSystemProtectableItem | AzureVmWorkloadSAPHanaDBInstance | AzureVmWorkloadSAPHanaHSRProtectableItem | AzureVmWorkloadSQLAvailabilityGroupProtectableItem | AzureVmWorkloadSQLDatabaseProtectableItem | AzureVmWorkloadSQLInstanceProtectableItem;

/** Azure VM workload-specific protected item. */
export declare interface AzureVmWorkloadProtectedItem extends ProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "AzureVmWorkloadProtectedItem" | "AzureVmWorkloadSAPAseDatabase" | "AzureVmWorkloadSAPHanaDatabase" | "AzureVmWorkloadSAPHanaDBInstance" | "AzureVmWorkloadSQLDatabase";
    /**
     * Friendly name of the DB represented by this backup item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly friendlyName?: string;
    /** Host/Cluster Name for instance or AG */
    serverName?: string;
    /** Parent name of the DB such as Instance or Availability Group. */
    parentName?: string;
    /** Parent type of protected item, example: for a DB, standalone server or distributed */
    parentType?: string;
    /**
     * Backup status of this backup item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly protectionStatus?: string;
    /** Backup state of this backup item. */
    protectionState?: ProtectionState;
    /** Last backup operation status. Possible values: Healthy, Unhealthy. */
    lastBackupStatus?: LastBackupStatus;
    /** Timestamp of the last backup operation on this backup item. */
    lastBackupTime?: Date;
    /** Error details in last backup */
    lastBackupErrorDetail?: ErrorDetail;
    /** Data ID of the protected item. */
    protectedItemDataSourceId?: string;
    /** Health status of the backup item, evaluated based on last heartbeat received */
    protectedItemHealthStatus?: ProtectedItemHealthStatus;
    /** Additional information for this backup item. */
    extendedInfo?: AzureVmWorkloadProtectedItemExtendedInfo;
    /** Health details of different KPIs */
    kpisHealths?: {
        [propertyName: string]: KPIResourceHealthDetails;
    };
    /** List of the nodes in case of distributed container. */
    nodesList?: DistributedNodesInfo[];
}

/** Additional information on Azure Workload for SQL specific backup item. */
export declare interface AzureVmWorkloadProtectedItemExtendedInfo {
    /** The oldest backup copy available for this backup item across all tiers. */
    oldestRecoveryPoint?: Date;
    /** The oldest backup copy available for this backup item in vault tier */
    oldestRecoveryPointInVault?: Date;
    /** The oldest backup copy available for this backup item in archive tier */
    oldestRecoveryPointInArchive?: Date;
    /** The latest backup copy available for this backup item in archive tier */
    newestRecoveryPointInArchive?: Date;
    /** Number of backup copies available for this backup item. */
    recoveryPointCount?: number;
    /** Indicates consistency of policy object and policy applied to this backup item. */
    policyState?: string;
    /** Indicates consistency of policy object and policy applied to this backup item. */
    recoveryModel?: string;
}

export declare type AzureVmWorkloadProtectedItemUnion = AzureVmWorkloadProtectedItem | AzureVmWorkloadSAPAseDatabaseProtectedItem | AzureVmWorkloadSAPHanaDatabaseProtectedItem | AzureVmWorkloadSAPHanaDBInstanceProtectedItem | AzureVmWorkloadSQLDatabaseProtectedItem;

/** Azure VM (Mercury) workload-specific backup policy. */
export declare interface AzureVmWorkloadProtectionPolicy extends ProtectionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupManagementType: "AzureWorkload";
    /** Type of workload for the backup management */
    workLoadType?: WorkloadType;
    /** Common settings for the backup management */
    settings?: Settings;
    /** List of sub-protection policies which includes schedule and retention */
    subProtectionPolicy?: SubProtectionPolicy[];
    /** Fix the policy inconsistency */
    makePolicyConsistent?: boolean;
}

/** Azure VM workload-specific protected item representing SAP ASE Database. */
export declare interface AzureVmWorkloadSAPAseDatabaseProtectedItem extends AzureVmWorkloadProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "AzureVmWorkloadSAPAseDatabase";
}

/** Azure VM workload-specific workload item representing SAP ASE Database. */
export declare interface AzureVmWorkloadSAPAseDatabaseWorkloadItem extends AzureVmWorkloadItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    workloadItemType: "SAPAseDatabase";
}

/** Azure VM workload-specific protectable item representing SAP ASE System. */
export declare interface AzureVmWorkloadSAPAseSystemProtectableItem extends AzureVmWorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "SAPAseSystem";
}

/** Azure VM workload-specific workload item representing SAP ASE System. */
export declare interface AzureVmWorkloadSAPAseSystemWorkloadItem extends AzureVmWorkloadItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    workloadItemType: "SAPAseSystem";
}

/** Azure VM workload-specific protectable item representing SAP HANA Database. */
export declare interface AzureVmWorkloadSAPHanaDatabaseProtectableItem extends AzureVmWorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "SAPHanaDatabase";
}

/** Azure VM workload-specific protected item representing SAP HANA Database. */
export declare interface AzureVmWorkloadSAPHanaDatabaseProtectedItem extends AzureVmWorkloadProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "AzureVmWorkloadSAPHanaDatabase";
}

/** Azure VM workload-specific workload item representing SAP HANA Database. */
export declare interface AzureVmWorkloadSAPHanaDatabaseWorkloadItem extends AzureVmWorkloadItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    workloadItemType: "SAPHanaDatabase";
}

/** Azure VM workload-specific protectable item representing SAP HANA Dbinstance. */
export declare interface AzureVmWorkloadSAPHanaDBInstance extends AzureVmWorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "SAPHanaDBInstance";
}

/** Azure VM workload-specific protected item representing SAP HANA DBInstance. */
export declare interface AzureVmWorkloadSAPHanaDBInstanceProtectedItem extends AzureVmWorkloadProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "AzureVmWorkloadSAPHanaDBInstance";
}

/** Azure VM workload-specific protectable item representing HANA HSR. */
export declare interface AzureVmWorkloadSAPHanaHSRProtectableItem extends AzureVmWorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "HanaHSRContainer";
}

/** Azure VM workload-specific protectable item representing SAP HANA System. */
export declare interface AzureVmWorkloadSAPHanaSystemProtectableItem extends AzureVmWorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "SAPHanaSystem";
}

/** Azure VM workload-specific workload item representing SAP HANA System. */
export declare interface AzureVmWorkloadSAPHanaSystemWorkloadItem extends AzureVmWorkloadItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    workloadItemType: "SAPHanaSystem";
}

/** Azure VM workload-specific protectable item representing SQL Availability Group. */
export declare interface AzureVmWorkloadSQLAvailabilityGroupProtectableItem extends AzureVmWorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "SQLAvailabilityGroupContainer";
    /** List of the nodes in case of distributed container. */
    nodesList?: DistributedNodesInfo[];
}

/** Azure VM workload-specific protectable item representing SQL Database. */
export declare interface AzureVmWorkloadSQLDatabaseProtectableItem extends AzureVmWorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "SQLDataBase";
}

/** Azure VM workload-specific protected item representing SQL Database. */
export declare interface AzureVmWorkloadSQLDatabaseProtectedItem extends AzureVmWorkloadProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "AzureVmWorkloadSQLDatabase";
}

/** Azure VM workload-specific workload item representing SQL Database. */
export declare interface AzureVmWorkloadSQLDatabaseWorkloadItem extends AzureVmWorkloadItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    workloadItemType: "SQLDataBase";
}

/** Azure VM workload-specific protectable item representing SQL Instance. */
export declare interface AzureVmWorkloadSQLInstanceProtectableItem extends AzureVmWorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "SQLInstance";
}

/** Azure VM workload-specific workload item representing SQL Instance. */
export declare interface AzureVmWorkloadSQLInstanceWorkloadItem extends AzureVmWorkloadItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    workloadItemType: "SQLInstance";
    /** Data Directory Paths for default directories */
    dataDirectoryPaths?: SQLDataDirectory[];
}

/** Azure Recovery Services Vault specific protection intent item. */
export declare interface AzureWorkloadAutoProtectionIntent extends AzureRecoveryServiceVaultProtectionIntent {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectionIntentItemType: "AzureWorkloadAutoProtectionIntent" | "AzureWorkloadSQLAutoProtectionIntent";
}

export declare type AzureWorkloadAutoProtectionIntentUnion = AzureWorkloadAutoProtectionIntent | AzureWorkloadSQLAutoProtectionIntent;

/** AzureWorkload workload-specific backup request. */
export declare interface AzureWorkloadBackupRequest extends BackupRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadBackupRequest";
    /** Type of backup, viz. Full, Differential, Log or CopyOnlyFull */
    backupType?: BackupType;
    /** Bool for Compression setting */
    enableCompression?: boolean;
    /** Backup copy will expire after the time specified (UTC). */
    recoveryPointExpiryTimeInUTC?: Date;
}

/** Container for the workloads running inside Azure Compute or Classic Compute. */
export declare interface AzureWorkloadContainer extends ProtectionContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "AzureWorkloadContainer" | "SQLAGWorkLoadContainer" | "VMAppContainer";
    /** ARM ID of the virtual machine represented by this Azure Workload Container */
    sourceResourceId?: string;
    /** Time stamp when this container was updated. */
    lastUpdatedTime?: Date;
    /** Additional details of a workload container. */
    extendedInfo?: AzureWorkloadContainerExtendedInfo;
    /** Workload type for which registration was sent. */
    workloadType?: WorkloadType;
    /** Re-Do Operation */
    operationType?: OperationType;
}

/** Azure workload specific protection intent item. */
export declare interface AzureWorkloadContainerAutoProtectionIntent extends ProtectionIntent {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectionIntentItemType: "AzureWorkloadContainerAutoProtectionIntent";
}

/** Extended information of the container. */
export declare interface AzureWorkloadContainerExtendedInfo {
    /** Host Os Name in case of Stand Alone and Cluster Name in case of distributed container. */
    hostServerName?: string;
    /** Inquiry Status for the container. */
    inquiryInfo?: InquiryInfo;
    /** List of the nodes in case of distributed container. */
    nodesList?: DistributedNodesInfo[];
}

export declare type AzureWorkloadContainerUnion = AzureWorkloadContainer | AzureSqlagWorkloadContainerProtectionContainer | AzureVMAppContainerProtectionContainer;

/** Azure storage specific error information */
export declare interface AzureWorkloadErrorInfo {
    /** Error code. */
    errorCode?: number;
    /** Localized error string. */
    errorString?: string;
    /** Title: Typically, the entity that the error pertains to. */
    errorTitle?: string;
    /** List of localized recommendations for above error code. */
    recommendations?: string[];
    /** Additional details for above error code. */
    additionalDetails?: string;
}

/** Azure storage specific job. */
export declare interface AzureWorkloadJob extends Job {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    jobType: "AzureWorkloadJob";
    /** Workload type of the job */
    workloadType?: string;
    /** Time elapsed during the execution of this job. */
    duration?: string;
    /** Gets or sets the state/actions applicable on this job like cancel/retry. */
    actionsInfo?: JobSupportedAction[];
    /** Error details on execution of this job. */
    errorDetails?: AzureWorkloadErrorInfo[];
    /** Additional information about the job. */
    extendedInfo?: AzureWorkloadJobExtendedInfo;
}

/** Azure VM workload-specific additional information for job. */
export declare interface AzureWorkloadJobExtendedInfo {
    /** List of tasks for this job */
    tasksList?: AzureWorkloadJobTaskDetails[];
    /** Job properties. */
    propertyBag?: {
        [propertyName: string]: string;
    };
    /** Non localized error message on job execution. */
    dynamicErrorMessage?: string;
}

/** Azure VM workload specific job task details. */
export declare interface AzureWorkloadJobTaskDetails {
    /** The task display name. */
    taskId?: string;
    /** The status. */
    status?: string;
}

/** Recovery point specific to PointInTime */
export declare interface AzureWorkloadPointInTimeRecoveryPoint extends AzureWorkloadRecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadPointInTimeRecoveryPoint" | "AzureWorkloadSAPHanaPointInTimeRecoveryPoint";
    /** List of log ranges */
    timeRanges?: PointInTimeRange[];
}

export declare type AzureWorkloadPointInTimeRecoveryPointUnion = AzureWorkloadPointInTimeRecoveryPoint | AzureWorkloadSAPHanaPointInTimeRecoveryPoint;

/** AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore */
export declare interface AzureWorkloadPointInTimeRestoreRequest extends AzureWorkloadRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadPointInTimeRestoreRequest";
    /** PointInTime value */
    pointInTime?: Date;
}

/** Workload specific recovery point, specifically encapsulates full/diff recovery point */
export declare interface AzureWorkloadRecoveryPoint extends RecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadRecoveryPoint" | "AzureWorkloadPointInTimeRecoveryPoint" | "AzureWorkloadSAPHanaPointInTimeRecoveryPoint" | "AzureWorkloadSAPHanaRecoveryPoint" | "AzureWorkloadSQLRecoveryPoint" | "AzureWorkloadSQLPointInTimeRecoveryPoint";
    /** UTC time at which recovery point was created */
    recoveryPointTimeInUTC?: Date;
    /** Type of restore point */
    type?: RestorePointType;
    /** Recovery point tier information. */
    recoveryPointTierDetails?: RecoveryPointTierInformationV2[];
    /** Eligibility of RP to be moved to another tier */
    recoveryPointMoveReadinessInfo?: {
        [propertyName: string]: RecoveryPointMoveReadinessInfo;
    };
    /** Properties of Recovery Point */
    recoveryPointProperties?: RecoveryPointProperties;
}

export declare type AzureWorkloadRecoveryPointUnion = AzureWorkloadRecoveryPoint | AzureWorkloadPointInTimeRecoveryPointUnion | AzureWorkloadSAPHanaRecoveryPoint | AzureWorkloadSQLRecoveryPointUnion;

/** AzureWorkload-specific restore. */
export declare interface AzureWorkloadRestoreRequest extends RestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadRestoreRequest" | "AzureWorkloadPointInTimeRestoreRequest" | "AzureWorkloadSAPHanaRestoreRequest" | "AzureWorkloadSAPHanaPointInTimeRestoreRequest" | "AzureWorkloadSQLRestoreRequest" | "AzureWorkloadSQLPointInTimeRestoreRequest" | "AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest" | "AzureWorkloadSAPHanaRestoreWithRehydrateRequest" | "AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest" | "AzureWorkloadSQLRestoreWithRehydrateRequest";
    /** Type of this recovery. */
    recoveryType?: RecoveryType;
    /** Fully qualified ARM ID of the VM on which workload that was running is being recovered. */
    sourceResourceId?: string;
    /** Workload specific property bag. */
    propertyBag?: {
        [propertyName: string]: string;
    };
    /** Details of target database */
    targetInfo?: TargetRestoreInfo;
    /** Defines whether the current recovery mode is file restore or database restore */
    recoveryMode?: RecoveryMode;
    /**
     * This is the complete ARM Id of the target VM
     * For e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
     */
    targetVirtualMachineId?: string;
}

export declare type AzureWorkloadRestoreRequestUnion = AzureWorkloadRestoreRequest | AzureWorkloadPointInTimeRestoreRequest | AzureWorkloadSAPHanaRestoreRequestUnion | AzureWorkloadSQLRestoreRequestUnion;

/** Recovery point specific to PointInTime in SAPHana */
export declare interface AzureWorkloadSAPHanaPointInTimeRecoveryPoint extends AzureWorkloadPointInTimeRecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSAPHanaPointInTimeRecoveryPoint";
}

/** AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore */
export declare interface AzureWorkloadSAPHanaPointInTimeRestoreRequest extends AzureWorkloadSAPHanaRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSAPHanaPointInTimeRestoreRequest" | "AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest";
    /** PointInTime value */
    pointInTime?: Date;
}

export declare type AzureWorkloadSAPHanaPointInTimeRestoreRequestUnion = AzureWorkloadSAPHanaPointInTimeRestoreRequest | AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest;

/** AzureWorkload SAP Hana-specific restore with integrated rehydration of recovery point. */
export declare interface AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest extends AzureWorkloadSAPHanaPointInTimeRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest";
    /** RP Rehydration Info */
    recoveryPointRehydrationInfo?: RecoveryPointRehydrationInfo;
}

/** SAPHana specific recoverypoint, specifically encapsulates full/diff recoverypoints */
export declare interface AzureWorkloadSAPHanaRecoveryPoint extends AzureWorkloadRecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSAPHanaRecoveryPoint";
}

/** AzureWorkload SAP Hana-specific restore. */
export declare interface AzureWorkloadSAPHanaRestoreRequest extends AzureWorkloadRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSAPHanaRestoreRequest" | "AzureWorkloadSAPHanaPointInTimeRestoreRequest" | "AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest" | "AzureWorkloadSAPHanaRestoreWithRehydrateRequest";
}

export declare type AzureWorkloadSAPHanaRestoreRequestUnion = AzureWorkloadSAPHanaRestoreRequest | AzureWorkloadSAPHanaPointInTimeRestoreRequestUnion | AzureWorkloadSAPHanaRestoreWithRehydrateRequest;

/** AzureWorkload SAP Hana-specific restore with integrated rehydration of recovery point. */
export declare interface AzureWorkloadSAPHanaRestoreWithRehydrateRequest extends AzureWorkloadSAPHanaRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSAPHanaRestoreWithRehydrateRequest";
    /** RP Rehydration Info */
    recoveryPointRehydrationInfo?: RecoveryPointRehydrationInfo;
}

/** Azure Workload SQL Auto Protection intent item. */
export declare interface AzureWorkloadSQLAutoProtectionIntent extends AzureWorkloadAutoProtectionIntent {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectionIntentItemType: "AzureWorkloadSQLAutoProtectionIntent";
    /** Workload item type of the item for which intent is to be set */
    workloadItemType?: WorkloadItemType;
}

/** Recovery point specific to PointInTime */
export declare interface AzureWorkloadSQLPointInTimeRecoveryPoint extends AzureWorkloadSQLRecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSQLPointInTimeRecoveryPoint";
    /** List of log ranges */
    timeRanges?: PointInTimeRange[];
}

/** AzureWorkload SQL -specific restore. Specifically for PointInTime/Log restore */
export declare interface AzureWorkloadSQLPointInTimeRestoreRequest extends AzureWorkloadSQLRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSQLPointInTimeRestoreRequest" | "AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest";
    /** PointInTime value */
    pointInTime?: Date;
}

export declare type AzureWorkloadSQLPointInTimeRestoreRequestUnion = AzureWorkloadSQLPointInTimeRestoreRequest | AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest;

/** AzureWorkload SQL-specific restore with integrated rehydration of recovery point. */
export declare interface AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest extends AzureWorkloadSQLPointInTimeRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest";
    /** RP Rehydration Info */
    recoveryPointRehydrationInfo?: RecoveryPointRehydrationInfo;
}

/** SQL specific recoverypoint, specifically encapsulates full/diff recoverypoint along with extended info */
export declare interface AzureWorkloadSQLRecoveryPoint extends AzureWorkloadRecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSQLRecoveryPoint" | "AzureWorkloadSQLPointInTimeRecoveryPoint";
    /**
     * Extended Info that provides data directory details. Will be populated in two cases:
     * When a specific recovery point is accessed using GetRecoveryPoint
     * Or when ListRecoveryPoints is called for Log RP only with ExtendedInfo query filter
     */
    extendedInfo?: AzureWorkloadSQLRecoveryPointExtendedInfo;
}

/** Extended info class details */
export declare interface AzureWorkloadSQLRecoveryPointExtendedInfo {
    /** UTC time at which data directory info was captured */
    dataDirectoryTimeInUTC?: Date;
    /** List of data directory paths during restore operation. */
    dataDirectoryPaths?: SQLDataDirectory[];
}

export declare type AzureWorkloadSQLRecoveryPointUnion = AzureWorkloadSQLRecoveryPoint | AzureWorkloadSQLPointInTimeRecoveryPoint;

/** AzureWorkload SQL -specific restore. Specifically for full/diff restore */
export declare interface AzureWorkloadSQLRestoreRequest extends AzureWorkloadRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSQLRestoreRequest" | "AzureWorkloadSQLPointInTimeRestoreRequest" | "AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest" | "AzureWorkloadSQLRestoreWithRehydrateRequest";
    /** Default option set to true. If this is set to false, alternate data directory must be provided */
    shouldUseAlternateTargetLocation?: boolean;
    /** SQL specific property where user can chose to set no-recovery when restore operation is tried */
    isNonRecoverable?: boolean;
    /** Data directory details */
    alternateDirectoryPaths?: SQLDataDirectoryMapping[];
}

export declare type AzureWorkloadSQLRestoreRequestUnion = AzureWorkloadSQLRestoreRequest | AzureWorkloadSQLPointInTimeRestoreRequestUnion | AzureWorkloadSQLRestoreWithRehydrateRequest;

/** AzureWorkload SQL-specific restore with integrated rehydration of recovery point */
export declare interface AzureWorkloadSQLRestoreWithRehydrateRequest extends AzureWorkloadSQLRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureWorkloadSQLRestoreWithRehydrateRequest";
    /** RP Rehydration Info */
    recoveryPointRehydrationInfo?: RecoveryPointRehydrationInfo;
}

/** The base backup engine class. All workload specific backup engines derive from this class. */
export declare interface BackupEngineBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupEngineType: "AzureBackupServerEngine" | "DpmBackupEngine";
    /** Friendly name of the backup engine. */
    friendlyName?: string;
    /** Type of backup management for the backup engine. */
    backupManagementType?: BackupManagementType;
    /** Registration status of the backup engine with the Recovery Services Vault. */
    registrationStatus?: string;
    /** Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed} */
    backupEngineState?: string;
    /** Backup status of the backup engine. */
    healthStatus?: string;
    /** Flag indicating if the backup engine be registered, once already registered. */
    canReRegister?: boolean;
    /** ID of the backup engine. */
    backupEngineId?: string;
    /** Backup engine version */
    dpmVersion?: string;
    /** Backup agent version */
    azureBackupAgentVersion?: string;
    /** To check if backup agent upgrade available */
    isAzureBackupAgentUpgradeAvailable?: boolean;
    /** To check if backup engine upgrade available */
    isDpmUpgradeAvailable?: boolean;
    /** Extended info of the backupengine */
    extendedInfo?: BackupEngineExtendedInfo;
}

/** The base backup engine class. All workload specific backup engines derive from this class. */
export declare interface BackupEngineBaseResource extends Resource {
    /** BackupEngineBaseResource properties */
    properties?: BackupEngineBaseUnion;
}

/** List of BackupEngineBase resources */
export declare interface BackupEngineBaseResourceList extends ResourceList {
    /** List of resources. */
    value?: BackupEngineBaseResource[];
}

export declare type BackupEngineBaseUnion = BackupEngineBase | AzureBackupServerEngine | DpmBackupEngine;

/** Additional information on backup engine. */
export declare interface BackupEngineExtendedInfo {
    /** Database name of backup engine. */
    databaseName?: string;
    /** Number of protected items in the backup engine. */
    protectedItemsCount?: number;
    /** Number of protected servers in the backup engine. */
    protectedServersCount?: number;
    /** Number of disks in the backup engine. */
    diskCount?: number;
    /** Disk space used in the backup engine. */
    usedDiskSpace?: number;
    /** Disk space currently available in the backup engine. */
    availableDiskSpace?: number;
    /** Last refresh time in the backup engine. */
    refreshedAt?: Date;
    /** Protected instances in the backup engine. */
    azureProtectedInstances?: number;
}

/** Interface representing a BackupEngines. */
export declare interface BackupEngines {
    /**
     * Backup management servers registered to Recovery Services Vault. Returns a pageable list of servers.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: BackupEnginesListOptionalParams): PagedAsyncIterableIterator<BackupEngineBaseResource>;
    /**
     * Returns backup management server registered to Recovery Services Vault.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param backupEngineName Name of the backup management server.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, backupEngineName: string, options?: BackupEnginesGetOptionalParams): Promise<BackupEnginesGetResponse>;
}

/** Optional parameters. */
export declare interface BackupEnginesGetOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the get operation. */
export declare type BackupEnginesGetResponse = BackupEngineBaseResource;

/** Optional parameters. */
export declare interface BackupEnginesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupEnginesListNextResponse = BackupEngineBaseResourceList;

/** Optional parameters. */
export declare interface BackupEnginesListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type BackupEnginesListResponse = BackupEngineBaseResourceList;

/**
 * Defines values for BackupEngineType. \
 * {@link KnownBackupEngineType} can be used interchangeably with BackupEngineType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **DpmBackupEngine** \
 * **AzureBackupServerEngine**
 */
export declare type BackupEngineType = string;

/**
 * Defines values for BackupItemType. \
 * {@link KnownBackupItemType} can be used interchangeably with BackupItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **VM** \
 * **FileFolder** \
 * **AzureSqlDb** \
 * **SQLDB** \
 * **Exchange** \
 * **Sharepoint** \
 * **VMwareVM** \
 * **SystemState** \
 * **Client** \
 * **GenericDataSource** \
 * **SQLDataBase** \
 * **AzureFileShare** \
 * **SAPHanaDatabase** \
 * **SAPAseDatabase** \
 * **SAPHanaDBInstance**
 */
export declare type BackupItemType = string;

/** Interface representing a BackupJobs. */
export declare interface BackupJobs {
    /**
     * Provides a pageable list of jobs.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: BackupJobsListOptionalParams): PagedAsyncIterableIterator<JobResource>;
}

/** Optional parameters. */
export declare interface BackupJobsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupJobsListNextResponse = JobResourceList;

/** Optional parameters. */
export declare interface BackupJobsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type BackupJobsListResponse = JobResourceList;

/**
 * Defines values for BackupManagementType. \
 * {@link KnownBackupManagementType} can be used interchangeably with BackupManagementType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AzureIaasVM** \
 * **MAB** \
 * **DPM** \
 * **AzureBackupServer** \
 * **AzureSql** \
 * **AzureStorage** \
 * **AzureWorkload** \
 * **DefaultBackup**
 */
export declare type BackupManagementType = string;

/** Backup management usages of a vault. */
export declare interface BackupManagementUsage {
    /** Unit of the usage. */
    unit?: UsagesUnit;
    /** Quota period of usage. */
    quotaPeriod?: string;
    /** Next reset time of usage. */
    nextResetTime?: Date;
    /** Current value of usage. */
    currentValue?: number;
    /** Limit of usage. */
    limit?: number;
    /** Name of usage. */
    name?: NameInfo;
}

/** Backup management usage for vault. */
export declare interface BackupManagementUsageList {
    /** The list of backup management usages for the given vault. */
    value?: BackupManagementUsage[];
}

/** Interface representing a BackupOperationResults. */
export declare interface BackupOperationResults {
    /**
     * Provides the status of the delete operations such as deleting backed up item. Once the operation has
     * started, the
     * status code in the response would be Accepted. It will continue to be in this state till it reaches
     * completion. On
     * successful completion, the status code will be OK. This method expects OperationID as an argument.
     * OperationID is
     * part of the Location header of the operation response.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId OperationID which represents the operation.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: BackupOperationResultsGetOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface BackupOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Interface representing a BackupOperationStatuses. */
export declare interface BackupOperationStatuses {
    /**
     * Fetches the status of an operation such as triggering a backup, restore. The status can be in
     * progress, completed
     * or failed. You can refer to the OperationStatus enum for all the possible states of an operation.
     * Some operations
     * create jobs. This method returns the list of jobs when the operation is complete.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId OperationID which represents the operation.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: BackupOperationStatusesGetOptionalParams): Promise<BackupOperationStatusesGetResponse>;
}

/** Optional parameters. */
export declare interface BackupOperationStatusesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupOperationStatusesGetResponse = OperationStatus;

/** Interface representing a BackupPolicies. */
export declare interface BackupPolicies {
    /**
     * Lists of backup policies associated with Recovery Services Vault. API provides pagination parameters
     * to fetch
     * scoped results.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: BackupPoliciesListOptionalParams): PagedAsyncIterableIterator<ProtectionPolicyResource>;
}

/** Optional parameters. */
export declare interface BackupPoliciesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupPoliciesListNextResponse = ProtectionPolicyResourceList;

/** Optional parameters. */
export declare interface BackupPoliciesListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type BackupPoliciesListResponse = ProtectionPolicyResourceList;

/** Interface representing a BackupProtectableItems. */
export declare interface BackupProtectableItems {
    /**
     * Provides a pageable list of protectable objects within your subscription according to the query
     * filter and the
     * pagination parameters.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: BackupProtectableItemsListOptionalParams): PagedAsyncIterableIterator<WorkloadProtectableItemResource>;
}

/** Optional parameters. */
export declare interface BackupProtectableItemsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupProtectableItemsListNextResponse = WorkloadProtectableItemResourceList;

/** Optional parameters. */
export declare interface BackupProtectableItemsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type BackupProtectableItemsListResponse = WorkloadProtectableItemResourceList;

/** Interface representing a BackupProtectedItems. */
export declare interface BackupProtectedItems {
    /**
     * Provides a pageable list of all items that are backed up within a vault.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: BackupProtectedItemsListOptionalParams): PagedAsyncIterableIterator<ProtectedItemResource>;
}

/** Optional parameters. */
export declare interface BackupProtectedItemsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupProtectedItemsListNextResponse = ProtectedItemResourceList;

/** Optional parameters. */
export declare interface BackupProtectedItemsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type BackupProtectedItemsListResponse = ProtectedItemResourceList;

/** Interface representing a BackupProtectionContainers. */
export declare interface BackupProtectionContainers {
    /**
     * Lists the containers registered to Recovery Services Vault.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: BackupProtectionContainersListOptionalParams): PagedAsyncIterableIterator<ProtectionContainerResource>;
}

/** Optional parameters. */
export declare interface BackupProtectionContainersListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupProtectionContainersListNextResponse = ProtectionContainerResourceList;

/** Optional parameters. */
export declare interface BackupProtectionContainersListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type BackupProtectionContainersListResponse = ProtectionContainerResourceList;

/** Interface representing a BackupProtectionIntent. */
export declare interface BackupProtectionIntent {
    /**
     * Provides a pageable list of all intents that are present within a vault.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: BackupProtectionIntentListOptionalParams): PagedAsyncIterableIterator<ProtectionIntentResource>;
}

/** Optional parameters. */
export declare interface BackupProtectionIntentListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupProtectionIntentListNextResponse = ProtectionIntentResourceList;

/** Optional parameters. */
export declare interface BackupProtectionIntentListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type BackupProtectionIntentListResponse = ProtectionIntentResourceList;

/** Base class for backup request. Workload-specific backup requests are derived from this class. */
export declare interface BackupRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureFileShareBackupRequest" | "AzureWorkloadBackupRequest" | "IaasVMBackupRequest";
}

/** Base class for backup request. Workload-specific backup requests are derived from this class. */
export declare interface BackupRequestResource extends Resource {
    /** BackupRequestResource properties */
    properties?: BackupRequestUnion;
}

export declare type BackupRequestUnion = BackupRequest | AzureFileShareBackupRequest | AzureWorkloadBackupRequest | IaasVMBackupRequest;

/** The resource storage details. */
export declare interface BackupResourceConfig {
    /** Storage type */
    storageModelType?: StorageType;
    /** Storage type. */
    storageType?: StorageType;
    /** Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked. */
    storageTypeState?: StorageTypeState;
    /** Opt in details of Cross Region Restore feature. */
    crossRegionRestoreFlag?: boolean;
    /** Vault Dedup state */
    dedupState?: DedupState;
    /** Vault x-cool state */
    xcoolState?: XcoolState;
}

/** The resource storage details. */
export declare interface BackupResourceConfigResource extends Resource {
    /** BackupResourceConfigResource properties */
    properties?: BackupResourceConfig;
}

export declare interface BackupResourceEncryptionConfig {
    /** Encryption At Rest Type */
    encryptionAtRestType?: EncryptionAtRestType;
    /** Key Vault Key URI */
    keyUri?: string;
    /** Key Vault Subscription Id */
    subscriptionId?: string;
    lastUpdateStatus?: LastUpdateStatus;
    infrastructureEncryptionState?: InfrastructureEncryptionState;
}

export declare interface BackupResourceEncryptionConfigExtended extends BackupResourceEncryptionConfig {
    /** User Assigned Identity Id */
    userAssignedIdentity?: string;
    /** bool to indicate whether to use system Assigned Identity or not */
    useSystemAssignedIdentity?: boolean;
}

export declare interface BackupResourceEncryptionConfigExtendedResource extends Resource {
    /** BackupResourceEncryptionConfigExtendedResource properties */
    properties?: BackupResourceEncryptionConfigExtended;
}

export declare interface BackupResourceEncryptionConfigResource extends Resource {
    /** BackupResourceEncryptionConfigResource properties */
    properties?: BackupResourceEncryptionConfig;
}

/** Interface representing a BackupResourceEncryptionConfigs. */
export declare interface BackupResourceEncryptionConfigs {
    /**
     * Fetches Vault Encryption config.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, options?: BackupResourceEncryptionConfigsGetOptionalParams): Promise<BackupResourceEncryptionConfigsGetResponse>;
    /**
     * Updates Vault encryption config.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters Vault encryption input config request
     * @param options The options parameters.
     */
    update(vaultName: string, resourceGroupName: string, parameters: BackupResourceEncryptionConfigResource, options?: BackupResourceEncryptionConfigsUpdateOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface BackupResourceEncryptionConfigsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupResourceEncryptionConfigsGetResponse = BackupResourceEncryptionConfigExtendedResource;

/** Optional parameters. */
export declare interface BackupResourceEncryptionConfigsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Interface representing a BackupResourceStorageConfigsNonCRR. */
export declare interface BackupResourceStorageConfigsNonCRR {
    /**
     * Fetches resource storage config.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, options?: BackupResourceStorageConfigsNonCRRGetOptionalParams): Promise<BackupResourceStorageConfigsNonCRRGetResponse>;
    /**
     * Updates vault storage model type.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters Vault storage config request
     * @param options The options parameters.
     */
    update(vaultName: string, resourceGroupName: string, parameters: BackupResourceConfigResource, options?: BackupResourceStorageConfigsNonCRRUpdateOptionalParams): Promise<BackupResourceStorageConfigsNonCRRUpdateResponse>;
    /**
     * Updates vault storage model type.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters Vault storage config request
     * @param options The options parameters.
     */
    patch(vaultName: string, resourceGroupName: string, parameters: BackupResourceConfigResource, options?: BackupResourceStorageConfigsNonCRRPatchOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface BackupResourceStorageConfigsNonCRRGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupResourceStorageConfigsNonCRRGetResponse = BackupResourceConfigResource;

/** Optional parameters. */
export declare interface BackupResourceStorageConfigsNonCRRPatchOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface BackupResourceStorageConfigsNonCRRUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type BackupResourceStorageConfigsNonCRRUpdateResponse = BackupResourceConfigResource;

/** Backup resource vault config details. */
export declare interface BackupResourceVaultConfig {
    /** Storage type. */
    storageModelType?: StorageType;
    /** Storage type. */
    storageType?: StorageType;
    /** Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked. */
    storageTypeState?: StorageTypeState;
    /** Enabled or Disabled. */
    enhancedSecurityState?: EnhancedSecurityState;
    /** Soft Delete feature state */
    softDeleteFeatureState?: SoftDeleteFeatureState;
    /** Soft delete retention period in days */
    softDeleteRetentionPeriodInDays?: number;
    /** ResourceGuard Operation Requests */
    resourceGuardOperationRequests?: string[];
    /** This flag is no longer in use. Please use 'softDeleteFeatureState' to set the soft delete state for the vault */
    isSoftDeleteFeatureStateEditable?: boolean;
}

/** Backup resource vault config details. */
export declare interface BackupResourceVaultConfigResource extends Resource {
    /** BackupResourceVaultConfigResource properties */
    properties?: BackupResourceVaultConfig;
}

/** Interface representing a BackupResourceVaultConfigs. */
export declare interface BackupResourceVaultConfigs {
    /**
     * Fetches resource vault config.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, options?: BackupResourceVaultConfigsGetOptionalParams): Promise<BackupResourceVaultConfigsGetResponse>;
    /**
     * Updates vault security config.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters resource config request
     * @param options The options parameters.
     */
    update(vaultName: string, resourceGroupName: string, parameters: BackupResourceVaultConfigResource, options?: BackupResourceVaultConfigsUpdateOptionalParams): Promise<BackupResourceVaultConfigsUpdateResponse>;
    /**
     * Updates vault security config.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters resource config request
     * @param options The options parameters.
     */
    put(vaultName: string, resourceGroupName: string, parameters: BackupResourceVaultConfigResource, options?: BackupResourceVaultConfigsPutOptionalParams): Promise<BackupResourceVaultConfigsPutResponse>;
}

/** Optional parameters. */
export declare interface BackupResourceVaultConfigsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupResourceVaultConfigsGetResponse = BackupResourceVaultConfigResource;

/** Optional parameters. */
export declare interface BackupResourceVaultConfigsPutOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the put operation. */
export declare type BackupResourceVaultConfigsPutResponse = BackupResourceVaultConfigResource;

/** Optional parameters. */
export declare interface BackupResourceVaultConfigsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type BackupResourceVaultConfigsUpdateResponse = BackupResourceVaultConfigResource;

/** Interface representing a Backups. */
export declare interface Backups {
    /**
     * Triggers backup for specified backed up item. This is an asynchronous operation. To know the status
     * of the
     * operation, call GetProtectedItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backup item.
     * @param containerName Container name associated with the backup item.
     * @param protectedItemName Backup item for which backup needs to be triggered.
     * @param parameters resource backup request
     * @param options The options parameters.
     */
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: BackupRequestResource, options?: BackupsTriggerOptionalParams): Promise<void>;
}

/** Interface representing a BackupStatus. */
export declare interface BackupStatus {
    /**
     * Get the container backup status
     * @param azureRegion Azure region to hit Api
     * @param parameters Container Backup Status Request
     * @param options The options parameters.
     */
    get(azureRegion: string, parameters: BackupStatusRequest, options?: BackupStatusGetOptionalParams): Promise<BackupStatusGetResponse>;
}

/** Optional parameters. */
export declare interface BackupStatusGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BackupStatusGetResponse = BackupStatusResponse;

/** BackupStatus request. */
export declare interface BackupStatusRequest {
    /** Container Type - VM, SQLPaaS, DPM, AzureFileShare... */
    resourceType?: DataSourceType;
    /** Entire ARM resource id of the resource */
    resourceId?: string;
    /** Protectable Item Logical Name */
    poLogicalName?: string;
}

/** BackupStatus response. */
export declare interface BackupStatusResponse {
    /** Specifies whether the container is registered or not */
    protectionStatus?: ProtectionStatus;
    /** Specifies the arm resource id of the vault */
    vaultId?: string;
    /** Specifies the fabric name - Azure or AD */
    fabricName?: FabricName;
    /** Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;csname;vmname. */
    containerName?: string;
    /** Specifies the product specific ds name. E.g. vm;iaasvmcontainer;csname;vmname. */
    protectedItemName?: string;
    /** ErrorCode in case of intent failed */
    errorCode?: string;
    /** ErrorMessage in case of intent failed. */
    errorMessage?: string;
    /** Specifies the policy name which is used for protection */
    policyName?: string;
    /** Container registration status */
    registrationStatus?: string;
}

/** Optional parameters. */
export declare interface BackupsTriggerOptionalParams extends coreClient.OperationOptions {
}

/**
 * Defines values for BackupType. \
 * {@link KnownBackupType} can be used interchangeably with BackupType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Full** \
 * **Differential** \
 * **Log** \
 * **CopyOnlyFull** \
 * **Incremental** \
 * **SnapshotFull** \
 * **SnapshotCopyOnlyFull**
 */
export declare type BackupType = string;

/** Interface representing a BackupUsageSummaries. */
export declare interface BackupUsageSummaries {
    /**
     * Fetches the backup management usage summaries of the vault.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: BackupUsageSummariesListOptionalParams): PagedAsyncIterableIterator<BackupManagementUsage>;
}

/** Optional parameters. */
export declare interface BackupUsageSummariesListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type BackupUsageSummariesListResponse = BackupManagementUsageList;

/** Interface representing a BackupWorkloadItems. */
export declare interface BackupWorkloadItems {
    /**
     * Provides a pageable list of workload item of a specific container according to the query filter and
     * the pagination
     * parameters.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the container.
     * @param containerName Name of the container.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: BackupWorkloadItemsListOptionalParams): PagedAsyncIterableIterator<WorkloadItemResource>;
}

/** Optional parameters. */
export declare interface BackupWorkloadItemsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type BackupWorkloadItemsListNextResponse = WorkloadItemResourceList;

/** Optional parameters. */
export declare interface BackupWorkloadItemsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
    /** skipToken Filter. */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type BackupWorkloadItemsListResponse = WorkloadItemResourceList;

/** BEK is bitlocker encryption key. */
export declare interface BEKDetails {
    /** Secret is BEK. */
    secretUrl?: string;
    /** ID of the Key Vault where this Secret is stored. */
    secretVaultId?: string;
    /** BEK data. */
    secretData?: string;
}

/** Query parameters to fetch list of backup engines. */
export declare interface BMSBackupEngineQueryObject {
    /** attribute to add extended info */
    expand?: string;
}

/** Query parameters to fetch list of backup engines. */
export declare interface BMSBackupEnginesQueryObject {
    /** Backup management type for the backup engine. */
    backupManagementType?: BackupManagementType;
    /** Friendly name of the backup engine. */
    friendlyName?: string;
    /** Attribute to add extended info. */
    expand?: string;
}

/** Query parameters to fetch backup summaries. */
export declare interface BMSBackupSummariesQueryObject {
    /** Backup management type for this container. */
    type?: Type;
}

/** The query filters that can be used with the list containers API. */
export declare interface BMSContainerQueryObject {
    /** Backup management type for this container. */
    backupManagementType: BackupManagementType;
    /** Type of container for filter */
    containerType?: ContainerType;
    /** Backup engine name */
    backupEngineName?: string;
    /** Fabric name for filter */
    fabricName?: string;
    /** Status of registration of this container with the Recovery Services Vault. */
    status?: string;
    /** Friendly name of this container. */
    friendlyName?: string;
}

/** The query filters that can be used with the inquire container API. */
export declare interface BMSContainersInquiryQueryObject {
    /** Backup management type for this container. */
    backupManagementType?: BackupManagementType;
    /** Workload type for this container. */
    workloadType?: WorkloadType;
}

/** Filters to list items that can be backed up. */
export declare interface BmspoQueryObject {
    /** Backup management type. */
    backupManagementType?: BackupManagementType;
    /** Workload type */
    workloadType?: WorkloadType;
    /** Full name of the container whose Protectable Objects should be returned. */
    containerName?: string;
    /** Backup status query parameter. */
    status?: string;
    /** Friendly name. */
    friendlyName?: string;
}

/** Interface representing a BMSPrepareDataMoveOperationResult. */
export declare interface BMSPrepareDataMoveOperationResult {
    /**
     * Fetches Operation Result for Prepare Data Move
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: BMSPrepareDataMoveOperationResultGetOptionalParams): Promise<BMSPrepareDataMoveOperationResultGetResponse>;
}

/** Optional parameters. */
export declare interface BMSPrepareDataMoveOperationResultGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type BMSPrepareDataMoveOperationResultGetResponse = VaultStorageConfigOperationResultResponseUnion;

/** Optional parameters. */
export declare interface BMSPrepareDataMoveOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** The query filters that can be used with the refresh container API. */
export declare interface BMSRefreshContainersQueryObject {
    /** Backup management type for this container. */
    backupManagementType?: BackupManagementType;
}

/** Filters to list backup copies. */
export declare interface BmsrpQueryObject {
    /** Backup copies created after this time. */
    startDate?: Date;
    /** Backup copies created before this time. */
    endDate?: Date;
    /** RestorePoint type */
    restorePointQueryType?: RestorePointQueryType;
    /** In Get Recovery Point, it tells whether extended information about recovery point is asked. */
    extendedInfo?: boolean;
    /** Whether the RP can be moved to another tier */
    moveReadyRPOnly?: boolean;
    /** Flag to indicate whether Soft Deleted RPs should be included/excluded from result. */
    includeSoftDeletedRP?: boolean;
}

/** Optional parameters. */
export declare interface BMSTriggerDataMoveOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Filters to list items that can be backed up. */
export declare interface BMSWorkloadItemQueryObject {
    /** Backup management type. */
    backupManagementType?: BackupManagementType;
    /** Workload Item type */
    workloadItemType?: WorkloadItemType;
    /** Workload type */
    workloadType?: WorkloadType;
    /** Backup status query parameter. */
    protectionStatus?: ProtectionStatus;
}

/** Localized display information of an operation. */
export declare interface ClientDiscoveryDisplay {
    /** Name of the provider for display purposes */
    provider?: string;
    /** ResourceType for which this Operation can be performed. */
    resource?: string;
    /** Operations Name itself. */
    operation?: string;
    /** Description of the operation having details of what operation is about. */
    description?: string;
}

/** Class to represent shoebox log specification in json client discovery. */
export declare interface ClientDiscoveryForLogSpecification {
    /** Name for shoebox log specification. */
    name?: string;
    /** Localized display name */
    displayName?: string;
    /** blob duration of shoebox log specification */
    blobDuration?: string;
}

/** Class to represent shoebox properties in json client discovery. */
export declare interface ClientDiscoveryForProperties {
    /** Operation properties. */
    serviceSpecification?: ClientDiscoveryForServiceSpecification;
}

/** Class to represent shoebox service specification in json client discovery. */
export declare interface ClientDiscoveryForServiceSpecification {
    /** List of log specifications of this operation. */
    logSpecifications?: ClientDiscoveryForLogSpecification[];
}

/** Operations List response which contains list of available APIs. */
export declare interface ClientDiscoveryResponse {
    /** List of available operations. */
    value?: ClientDiscoveryValueForSingleApi[];
    /** Link to the next chunk of Response. */
    nextLink?: string;
}

/** Available operation details. */
export declare interface ClientDiscoveryValueForSingleApi {
    /** Name of the Operation. */
    name?: string;
    /** Contains the localized display information for this particular operation */
    display?: ClientDiscoveryDisplay;
    /** The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX */
    origin?: string;
    /** ShoeBox properties for the given operation. */
    properties?: ClientDiscoveryForProperties;
}

/** Client script details for file / folder restore. */
export declare interface ClientScriptForConnect {
    /** File content of the client script for file / folder restore. */
    scriptContent?: string;
    /** File extension of the client script for file / folder restore - .ps1 , .sh , etc. */
    scriptExtension?: string;
    /** OS type - Windows, Linux etc. for which this file / folder restore client script works. */
    osType?: string;
    /** URL of Executable from where to source the content. If this is not null then ScriptContent should not be used */
    url?: string;
    /**
     * Mandatory suffix that should be added to the name of script that is given for download to user.
     * If its null or empty then , ignore it.
     */
    scriptNameSuffix?: string;
}

/** An error response from the Container Instance service. */
export declare interface CloudError {
    /** The error object. */
    error?: CloudErrorBody;
}

/** An error response from the Container Instance service. */
export declare interface CloudErrorBody {
    /**
     * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * A message describing the error, intended to be suitable for display in a user interface.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The target of the particular error. For example, the name of the property in error.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * A list of additional details about the error.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: CloudErrorBody[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Container identity information */
export declare interface ContainerIdentityInfo {
    /** Unique name of the container */
    uniqueName?: string;
    /** Protection container identity - AAD Tenant */
    aadTenantId?: string;
    /** Protection container identity - AAD Service Principal */
    servicePrincipalClientId?: string;
    /** Protection container identity - Audience */
    audience?: string;
}

/**
 * Defines values for ContainerType. \
 * {@link KnownContainerType} can be used interchangeably with ContainerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Unknown** \
 * **IaasVMContainer** \
 * **IaasVMServiceContainer** \
 * **DPMContainer** \
 * **AzureBackupServerContainer** \
 * **MABContainer** \
 * **Cluster** \
 * **AzureSqlContainer** \
 * **Windows** \
 * **VCenter** \
 * **VMAppContainer** \
 * **SQLAGWorkLoadContainer** \
 * **StorageContainer** \
 * **GenericContainer** \
 * **HanaHSRContainer**
 */
export declare type ContainerType = string;

/**
 * Defines values for CopyOptions. \
 * {@link KnownCopyOptions} can be used interchangeably with CopyOptions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **CreateCopy** \
 * **Skip** \
 * **Overwrite** \
 * **FailOnConflict**
 */
export declare type CopyOptions = string;

/**
 * Defines values for CreateMode. \
 * {@link KnownCreateMode} can be used interchangeably with CreateMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Default** \
 * **Recover**
 */
export declare type CreateMode = string;

/** Daily retention format. */
export declare interface DailyRetentionFormat {
    /** List of days of the month. */
    daysOfTheMonth?: Day[];
}

/** Daily retention schedule. */
export declare interface DailyRetentionSchedule {
    /** Retention times of retention policy. */
    retentionTimes?: Date[];
    /** Retention duration of retention Policy. */
    retentionDuration?: RetentionDuration;
}

export declare interface DailySchedule {
    /** List of times of day this schedule has to be run. */
    scheduleRunTimes?: Date[];
}

/**
 * Defines values for DataMoveLevel. \
 * {@link KnownDataMoveLevel} can be used interchangeably with DataMoveLevel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Vault** \
 * **Container**
 */
export declare type DataMoveLevel = string;

/**
 * Defines values for DataSourceType. \
 * {@link KnownDataSourceType} can be used interchangeably with DataSourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **VM** \
 * **FileFolder** \
 * **AzureSqlDb** \
 * **SQLDB** \
 * **Exchange** \
 * **Sharepoint** \
 * **VMwareVM** \
 * **SystemState** \
 * **Client** \
 * **GenericDataSource** \
 * **SQLDataBase** \
 * **AzureFileShare** \
 * **SAPHanaDatabase** \
 * **SAPAseDatabase** \
 * **SAPHanaDBInstance**
 */
export declare type DataSourceType = string;

/** Day of the week. */
export declare interface Day {
    /** Date of the month */
    date?: number;
    /** Whether Date is last date of month */
    isLast?: boolean;
}

/** Defines values for DayOfWeek. */
export declare type DayOfWeek = "Sunday" | "Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday";

/**
 * Defines values for DedupState. \
 * {@link KnownDedupState} can be used interchangeably with DedupState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Enabled** \
 * **Disabled**
 */
export declare type DedupState = string;

/** Interface representing a DeletedProtectionContainers. */
export declare interface DeletedProtectionContainers {
    /**
     * Lists the soft deleted containers registered to Recovery Services Vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param vaultName The name of the recovery services vault.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vaultName: string, options?: DeletedProtectionContainersListOptionalParams): PagedAsyncIterableIterator<ProtectionContainerResource>;
}

/** Optional parameters. */
export declare interface DeletedProtectionContainersListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type DeletedProtectionContainersListNextResponse = ProtectionContainerResourceList;

/** Optional parameters. */
export declare interface DeletedProtectionContainersListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type DeletedProtectionContainersListResponse = ProtectionContainerResourceList;

export declare interface DiskExclusionProperties {
    /** List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection. */
    diskLunList?: number[];
    /** Flag to indicate whether DiskLunList is to be included/ excluded from backup. */
    isInclusionList?: boolean;
}

/** Disk information */
export declare interface DiskInformation {
    lun?: number;
    name?: string;
}

/** This is used to represent the various nodes of the distributed container. */
export declare interface DistributedNodesInfo {
    /** Name of the node under a distributed container. */
    nodeName?: string;
    /**
     * Status of this Node.
     * Failed | Succeeded
     */
    status?: string;
    /** Error Details if the Status is non-success. */
    errorDetail?: ErrorDetail;
    /** ARM resource id of the node */
    sourceResourceId?: string;
}

/** Data Protection Manager (DPM) specific backup engine. */
export declare interface DpmBackupEngine extends BackupEngineBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupEngineType: "DpmBackupEngine";
}

/** DPM workload-specific protection container. */
export declare interface DpmContainer extends ProtectionContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "DPMContainer" | "AzureBackupServerContainer";
    /** Specifies whether the container is re-registrable. */
    canReRegister?: boolean;
    /** ID of container. */
    containerId?: string;
    /** Number of protected items in the BackupEngine */
    protectedItemCount?: number;
    /** Backup engine Agent version */
    dpmAgentVersion?: string;
    /** List of BackupEngines protecting the container */
    dpmServers?: string[];
    /** To check if upgrade available */
    upgradeAvailable?: boolean;
    /** Protection status of the container. */
    protectionStatus?: string;
    /** Extended Info of the container. */
    extendedInfo?: DPMContainerExtendedInfo;
}

/** Additional information of the DPMContainer. */
export declare interface DPMContainerExtendedInfo {
    /** Last refresh time of the DPMContainer. */
    lastRefreshedAt?: Date;
}

export declare type DpmContainerUnion = DpmContainer | AzureBackupServerContainer;

/** DPM workload-specific error information. */
export declare interface DpmErrorInfo {
    /** Localized error string. */
    errorString?: string;
    /** List of localized recommendations for above error code. */
    recommendations?: string[];
}

/** DPM workload-specific job object. */
export declare interface DpmJob extends Job {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    jobType: "DpmJob";
    /** Time elapsed for job. */
    duration?: string;
    /** DPM server name managing the backup item or backup job. */
    dpmServerName?: string;
    /** Name of cluster/server protecting current backup item, if any. */
    containerName?: string;
    /** Type of container. */
    containerType?: string;
    /** Type of backup item. */
    workloadType?: string;
    /** The state/actions applicable on this job like cancel/retry. */
    actionsInfo?: JobSupportedAction[];
    /** The errors. */
    errorDetails?: DpmErrorInfo[];
    /** Additional information for this job. */
    extendedInfo?: DpmJobExtendedInfo;
}

/** Additional information on the DPM workload-specific job. */
export declare interface DpmJobExtendedInfo {
    /** List of tasks associated with this job. */
    tasksList?: DpmJobTaskDetails[];
    /** The job properties. */
    propertyBag?: {
        [propertyName: string]: string;
    };
    /** Non localized error message on job execution. */
    dynamicErrorMessage?: string;
}

/** DPM workload-specific job task details. */
export declare interface DpmJobTaskDetails {
    /** The task display name. */
    taskId?: string;
    /** The start time. */
    startTime?: Date;
    /** The end time. */
    endTime?: Date;
    /** Time elapsed for task. */
    duration?: string;
    /** The status. */
    status?: string;
}

/** Additional information on Backup engine specific backup item. */
export declare interface DPMProtectedItem extends ProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "DPMProtectedItem";
    /** Friendly name of the managed item */
    friendlyName?: string;
    /** Backup Management server protecting this backup item */
    backupEngineName?: string;
    /** Protection state of the backup engine */
    protectionState?: ProtectedItemState;
    /** Extended info of the backup item. */
    extendedInfo?: DPMProtectedItemExtendedInfo;
}

/** Additional information of DPM Protected item. */
export declare interface DPMProtectedItemExtendedInfo {
    /** Attribute to provide information on various DBs. */
    protectableObjectLoadPath?: {
        [propertyName: string]: string;
    };
    /** To check if backup item is disk protected. */
    protected?: boolean;
    /** To check if backup item is cloud protected. */
    isPresentOnCloud?: boolean;
    /** Last backup status information on backup item. */
    lastBackupStatus?: string;
    /** Last refresh time on backup item. */
    lastRefreshedAt?: Date;
    /** Oldest cloud recovery point time. */
    oldestRecoveryPoint?: Date;
    /** cloud recovery point count. */
    recoveryPointCount?: number;
    /** Oldest disk recovery point time. */
    onPremiseOldestRecoveryPoint?: Date;
    /** latest disk recovery point time. */
    onPremiseLatestRecoveryPoint?: Date;
    /** disk recovery point count. */
    onPremiseRecoveryPointCount?: number;
    /** To check if backup item is collocated. */
    isCollocated?: boolean;
    /** Protection group name of the backup item. */
    protectionGroupName?: string;
    /** Used Disk storage in bytes. */
    diskStorageUsedInBytes?: string;
    /** total Disk storage in bytes. */
    totalDiskStorageSizeInBytes?: string;
}

/**
 * Defines values for EncryptionAtRestType. \
 * {@link KnownEncryptionAtRestType} can be used interchangeably with EncryptionAtRestType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **MicrosoftManaged** \
 * **CustomerManaged**
 */
export declare type EncryptionAtRestType = string;

/** Details needed if the VM was encrypted at the time of backup. */
export declare interface EncryptionDetails {
    /** Identifies whether this backup copy represents an encrypted VM at the time of backup. */
    encryptionEnabled?: boolean;
    /** Key Url. */
    kekUrl?: string;
    /** Secret Url. */
    secretKeyUrl?: string;
    /** ID of Key Vault where KEK is stored. */
    kekVaultId?: string;
    /** ID of Key Vault where Secret is stored. */
    secretKeyVaultId?: string;
}

/**
 * Defines values for EnhancedSecurityState. \
 * {@link KnownEnhancedSecurityState} can be used interchangeably with EnhancedSecurityState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Enabled** \
 * **Disabled**
 */
export declare type EnhancedSecurityState = string;

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** Error Detail class which encapsulates Code, Message and Recommendations. */
export declare interface ErrorDetail {
    /**
     * Error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * Error Message related to the Code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * List of recommendation strings.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendations?: string[];
}

/** This class is used to send blob details after exporting jobs. */
export declare interface ExportJobsOperationResultInfo extends OperationResultInfoBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ExportJobsOperationResultInfo";
    /** URL of the blob into which the serialized string of list of jobs is exported. */
    blobUrl?: string;
    /** SAS key to access the blob. It expires in 15 mins. */
    blobSasKey?: string;
    /** URL of the blob into which the ExcelFile is uploaded. */
    excelFileBlobUrl?: string;
    /** SAS key to access the blob. It expires in 15 mins. */
    excelFileBlobSasKey?: string;
}

/** Interface representing a ExportJobsOperationResults. */
export declare interface ExportJobsOperationResults {
    /**
     * Gets the operation result of operation triggered by Export Jobs API. If the operation is successful,
     * then it also
     * contains URL of a Blob and a SAS key to access the same. The blob contains exported jobs in JSON
     * serialized format.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId OperationID which represents the export job.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: ExportJobsOperationResultsGetOptionalParams): Promise<ExportJobsOperationResultsGetResponse>;
}

/** Optional parameters. */
export declare interface ExportJobsOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ExportJobsOperationResultsGetResponse = OperationResultInfoBaseResource;

/** The extended location of Recovery point where VM was present. */
export declare interface ExtendedLocation {
    /** Name of the extended location. */
    name?: string;
    /** Type of the extended location. Possible values include: 'EdgeZone' */
    type?: string;
}

/** Extended Properties for Azure IaasVM Backup. */
export declare interface ExtendedProperties {
    /** Extended Properties for Disk Exclusion. */
    diskExclusionProperties?: DiskExclusionProperties;
    /** Linux VM name */
    linuxVmApplicationName?: string;
}

/**
 * Defines values for FabricName. \
 * {@link KnownFabricName} can be used interchangeably with FabricName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Azure**
 */
export declare type FabricName = string;

/** Interface representing a FeatureSupport. */
export declare interface FeatureSupport {
    /**
     * It will validate if given feature with resource properties is supported in service
     * @param azureRegion Azure region to hit Api
     * @param parameters Feature support request object
     * @param options The options parameters.
     */
    validate(azureRegion: string, parameters: FeatureSupportRequestUnion, options?: FeatureSupportValidateOptionalParams): Promise<FeatureSupportValidateResponse>;
}

/** Base class for feature request */
export declare interface FeatureSupportRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    featureType: "AzureBackupGoals" | "AzureVMResourceBackup";
}

export declare type FeatureSupportRequestUnion = FeatureSupportRequest | AzureBackupGoalFeatureSupportRequest | AzureVMResourceFeatureSupportRequest;

/** Optional parameters. */
export declare interface FeatureSupportValidateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the validate operation. */
export declare type FeatureSupportValidateResponse = AzureVMResourceFeatureSupportResponse;

/** Base class for generic container of backup items */
export declare interface GenericContainer extends ProtectionContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "GenericContainer";
    /** Name of the container's fabric */
    fabricName?: string;
    /** Extended information (not returned in List container API calls) */
    extendedInformation?: GenericContainerExtendedInfo;
}

/** Container extended information */
export declare interface GenericContainerExtendedInfo {
    /** Public key of container cert */
    rawCertData?: string;
    /** Container identity information */
    containerIdentityInfo?: ContainerIdentityInfo;
    /** Azure Backup Service Endpoints for the container */
    serviceEndpoints?: {
        [propertyName: string]: string;
    };
}

/** Base class for backup items. */
export declare interface GenericProtectedItem extends ProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "GenericProtectedItem";
    /** Friendly name of the container. */
    friendlyName?: string;
    /** Indicates consistency of policy object and policy applied to this backup item. */
    policyState?: string;
    /** Backup state of this backup item. */
    protectionState?: ProtectionState;
    /** Data Plane Service ID of the protected item. */
    protectedItemId?: number;
    /** Loosely coupled (type, value) associations (example - parent of a protected item) */
    sourceAssociations?: {
        [propertyName: string]: string;
    };
    /** Name of this backup item's fabric. */
    fabricName?: string;
}

/** Azure VM (Mercury) workload-specific backup policy. */
export declare interface GenericProtectionPolicy extends ProtectionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupManagementType: "GenericProtectionPolicy";
    /** List of sub-protection policies which includes schedule and retention */
    subProtectionPolicy?: SubProtectionPolicy[];
    /** TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time". */
    timeZone?: string;
    /** Name of this policy's fabric. */
    fabricName?: string;
}

/** Generic backup copy. */
export declare interface GenericRecoveryPoint extends RecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "GenericRecoveryPoint";
    /** Friendly name of the backup copy. */
    friendlyName?: string;
    /** Type of the backup copy. */
    recoveryPointType?: string;
    /** Time at which this backup copy was created. */
    recoveryPointTime?: Date;
    /** Additional information associated with this backup copy. */
    recoveryPointAdditionalInfo?: string;
    /** Properties of Recovery Point */
    recoveryPointProperties?: RecoveryPointProperties;
}

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Optional parameters. */
export declare interface GetOperationStatusOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getOperationStatus operation. */
export declare type GetOperationStatusResponse = OperationStatus;

/** Filters to list backup items. */
export declare interface GetProtectedItemQueryObject {
    /** Specifies if the additional information should be provided for this item. */
    expand?: string;
}

/**
 * Defines values for HealthState. \
 * {@link KnownHealthState} can be used interchangeably with HealthState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Passed** \
 * **ActionRequired** \
 * **ActionSuggested** \
 * **Invalid**
 */
export declare type HealthState = string;

/**
 * Defines values for HealthStatus. \
 * {@link KnownHealthStatus} can be used interchangeably with HealthStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Passed** \
 * **ActionRequired** \
 * **ActionSuggested** \
 * **Invalid**
 */
export declare type HealthStatus = string;

export declare interface HourlySchedule {
    /**
     * Interval at which backup needs to be triggered. For hourly the value
     *  can be 4/6/8/12
     */
    interval?: number;
    /** To specify start time of the backup window */
    scheduleWindowStartTime?: Date;
    /** To specify duration of the backup window */
    scheduleWindowDuration?: number;
}

/** Defines values for HttpStatusCode. */
export declare type HttpStatusCode = "Continue" | "SwitchingProtocols" | "OK" | "Created" | "Accepted" | "NonAuthoritativeInformation" | "NoContent" | "ResetContent" | "PartialContent" | "MultipleChoices" | "Ambiguous" | "MovedPermanently" | "Moved" | "Found" | "Redirect" | "SeeOther" | "RedirectMethod" | "NotModified" | "UseProxy" | "Unused" | "TemporaryRedirect" | "RedirectKeepVerb" | "BadRequest" | "Unauthorized" | "PaymentRequired" | "Forbidden" | "NotFound" | "MethodNotAllowed" | "NotAcceptable" | "ProxyAuthenticationRequired" | "RequestTimeout" | "Conflict" | "Gone" | "LengthRequired" | "PreconditionFailed" | "RequestEntityTooLarge" | "RequestUriTooLong" | "UnsupportedMediaType" | "RequestedRangeNotSatisfiable" | "ExpectationFailed" | "UpgradeRequired" | "InternalServerError" | "NotImplemented" | "BadGateway" | "ServiceUnavailable" | "GatewayTimeout" | "HttpVersionNotSupported";

/** IaaS VM workload-specific backup request. */
export declare interface IaasVMBackupRequest extends BackupRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "IaasVMBackupRequest";
    /** Backup copy will expire after the time specified (UTC). */
    recoveryPointExpiryTimeInUTC?: Date;
}

/** IaaS VM workload-specific container. */
export declare interface IaaSVMContainer extends ProtectionContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "IaasVMContainer" | "Microsoft.ClassicCompute/virtualMachines" | "Microsoft.Compute/virtualMachines";
    /** Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container. */
    virtualMachineId?: string;
    /** Specifies whether the container represents a Classic or an Azure Resource Manager VM. */
    virtualMachineVersion?: string;
    /** Resource group name of Recovery Services Vault. */
    resourceGroup?: string;
}

export declare type IaaSVMContainerUnion = IaaSVMContainer | AzureIaaSClassicComputeVMContainer | AzureIaaSComputeVMContainer;

/** Restore files/folders from a backup copy of IaaS VM. */
export declare interface IaasVmilrRegistrationRequest extends ILRRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "IaasVMILRRegistrationRequest";
    /** ID of the IaaS VM backup copy from where the files/folders have to be restored. */
    recoveryPointId?: string;
    /** Fully qualified ARM ID of the virtual machine whose the files / folders have to be restored. */
    virtualMachineId?: string;
    /** iSCSI initiator name. */
    initiatorName?: string;
    /** Whether to renew existing registration with the iSCSI server. */
    renewExistingRegistration?: boolean;
}

/**
 * Defines values for IaasvmPolicyType. \
 * {@link KnownIaasvmPolicyType} can be used interchangeably with IaasvmPolicyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **V1** \
 * **V2**
 */
export declare type IaasvmPolicyType = string;

/** IaaS VM workload-specific backup item. */
export declare interface IaaSVMProtectableItem extends WorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "IaaSVMProtectableItem" | "Microsoft.ClassicCompute/virtualMachines" | "Microsoft.Compute/virtualMachines";
    /** Fully qualified ARM ID of the virtual machine. */
    virtualMachineId?: string;
    /** Specifies whether the container represents a Classic or an Azure Resource Manager VM. */
    virtualMachineVersion?: string;
    /** Resource group name of Recovery Services Vault. */
    resourceGroup?: string;
}

export declare type IaaSVMProtectableItemUnion = IaaSVMProtectableItem | AzureIaaSClassicComputeVMProtectableItem | AzureIaaSComputeVMProtectableItem;

/** IaaS VM workload specific backup copy. */
export declare interface IaasVMRecoveryPoint extends RecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "IaasVMRecoveryPoint";
    /** Type of the backup copy. */
    recoveryPointType?: string;
    /** Time at which this backup copy was created. */
    recoveryPointTime?: Date;
    /** Additional information associated with this backup copy. */
    recoveryPointAdditionalInfo?: string;
    /** Storage type of the VM whose backup copy is created. */
    sourceVMStorageType?: string;
    /** Identifies whether the VM was encrypted when the backup copy is created. */
    isSourceVMEncrypted?: boolean;
    /** Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true. */
    keyAndSecret?: KeyAndSecretDetails;
    /** Is the session to recover items from this backup copy still active. */
    isInstantIlrSessionActive?: boolean;
    /** Recovery point tier information. */
    recoveryPointTierDetails?: RecoveryPointTierInformationV2[];
    /** Whether VM is with Managed Disks */
    isManagedVirtualMachine?: boolean;
    /** Virtual Machine Size */
    virtualMachineSize?: string;
    /** Original Storage Account Option */
    originalStorageAccountOption?: boolean;
    /** OS type */
    osType?: string;
    /** Disk configuration */
    recoveryPointDiskConfiguration?: RecoveryPointDiskConfiguration;
    /** Identifies the zone of the VM at the time of backup. Applicable only for zone-pinned Vms */
    zones?: string[];
    /** Eligibility of RP to be moved to another tier */
    recoveryPointMoveReadinessInfo?: {
        [propertyName: string]: RecoveryPointMoveReadinessInfo;
    };
    /** Security Type of the Disk */
    securityType?: string;
    /** Properties of Recovery Point */
    recoveryPointProperties?: RecoveryPointProperties;
    /** This flag denotes if any of the disks in the VM are using Private access network setting */
    isPrivateAccessEnabledOnAnyDisk?: boolean;
}

/** IaaS VM workload-specific restore. */
export declare interface IaasVMRestoreRequest extends RestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "IaasVMRestoreRequest" | "IaasVMRestoreWithRehydrationRequest";
    /** ID of the backup copy to be recovered. */
    recoveryPointId?: string;
    /** Type of this recovery. */
    recoveryType?: RecoveryType;
    /** Fully qualified ARM ID of the VM which is being recovered. */
    sourceResourceId?: string;
    /**
     * This is the complete ARM Id of the VM that will be created.
     * For e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
     */
    targetVirtualMachineId?: string;
    /**
     * This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.
     * For e.g. /subscriptions/{subId}/resourcegroups/{rg}
     */
    targetResourceGroupId?: string;
    /** Fully qualified ARM ID of the storage account to which the VM has to be restored. */
    storageAccountId?: string;
    /**
     * This is the virtual network Id of the vnet that will be attached to the virtual machine.
     * User will be validated for join action permissions in the linked access.
     */
    virtualNetworkId?: string;
    /**
     * Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be
     * {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent
     * the subnet.
     */
    subnetId?: string;
    /**
     * Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic
     * Virtual Machines.
     */
    targetDomainNameId?: string;
    /** Region in which the virtual machine is restored. */
    region?: string;
    /** Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines. */
    affinityGroup?: string;
    /**
     * Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same
     * cloud service as it was at the time of backup.
     */
    createNewCloudService?: boolean;
    /** Original Storage Account Option */
    originalStorageAccountOption?: boolean;
    /** Details needed if the VM was encrypted at the time of backup. */
    encryptionDetails?: EncryptionDetails;
    /** List of Disk LUNs for partial restore */
    restoreDiskLunList?: number[];
    /** Flag to denote of an Unmanaged disk VM should be restored with Managed disks. */
    restoreWithManagedDisks?: boolean;
    /** DiskEncryptionSet's ID - needed if the VM needs to be encrypted at rest during restore with customer managed key. */
    diskEncryptionSetId?: string;
    /** Target zone where the VM and its disks should be restored. */
    zones?: string[];
    /** Managed Identity information required to access customer storage account. */
    identityInfo?: IdentityInfo;
    /** IaaS VM workload specific restore details for restores using managed identity. */
    identityBasedRestoreDetails?: IdentityBasedRestoreDetails;
    /**
     * Target extended location where the VM should be restored,
     * should be null if restore is to be done in public cloud
     */
    extendedLocation?: ExtendedLocation;
    /** Stores Secured VM Details */
    securedVMDetails?: SecuredVMDetails;
    /** Specifies target network access settings for disks of VM to be restored, */
    targetDiskNetworkAccessSettings?: TargetDiskNetworkAccessSettings;
}

export declare type IaasVMRestoreRequestUnion = IaasVMRestoreRequest | IaasVMRestoreWithRehydrationRequest;

/** IaaS VM workload-specific restore with integrated rehydration of recovery point. */
export declare interface IaasVMRestoreWithRehydrationRequest extends IaasVMRestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "IaasVMRestoreWithRehydrationRequest";
    /** RP Rehydration Info */
    recoveryPointRehydrationInfo?: RecoveryPointRehydrationInfo;
}

/** IaaS VM workload specific restore details for restores using managed identity */
export declare interface IdentityBasedRestoreDetails {
    /** Gets the class type. */
    objectType?: string;
    /** Fully qualified ARM ID of the target storage account. */
    targetStorageAccountId?: string;
}

/** Encapsulates Managed Identity related information */
export declare interface IdentityInfo {
    /** To differentiate if the managed identity is system assigned or user assigned */
    isSystemAssignedIdentity?: boolean;
    /**
     * Managed Identity Resource Id
     * Optional: Might not be required in the case of system assigned managed identity
     */
    managedIdentityResourceId?: string;
}

/** Parameters to Provision ILR API. */
export declare interface ILRRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureFileShareProvisionILRRequest" | "IaasVMILRRegistrationRequest";
}

/** Parameters to Provision ILR API. */
export declare interface ILRRequestResource extends Resource {
    /** ILRRequestResource properties */
    properties?: ILRRequestUnion;
}

export declare type ILRRequestUnion = ILRRequest | AzureFileShareProvisionILRRequest | IaasVmilrRegistrationRequest;

/**
 * Defines values for InfrastructureEncryptionState. \
 * {@link KnownInfrastructureEncryptionState} can be used interchangeably with InfrastructureEncryptionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Disabled** \
 * **Enabled**
 */
export declare type InfrastructureEncryptionState = string;

/** Details about inquired protectable items under a given container. */
export declare interface InquiryInfo {
    /**
     * Inquiry Status for this container such as
     * InProgress | Failed | Succeeded
     */
    status?: string;
    /** Error Details if the Status is non-success. */
    errorDetail?: ErrorDetail;
    /**
     * Inquiry Details which will have workload specific details.
     * For e.g. - For SQL and oracle this will contain different details.
     */
    inquiryDetails?: WorkloadInquiryDetails[];
}

/**
 * Defines values for InquiryStatus. \
 * {@link KnownInquiryStatus} can be used interchangeably with InquiryStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Success** \
 * **Failed**
 */
export declare type InquiryStatus = string;

/** Validation for inquired protectable items under a given container. */
export declare interface InquiryValidation {
    /** Status for the Inquiry Validation. */
    status?: string;
    /** Error Detail in case the status is non-success. */
    errorDetail?: ErrorDetail;
    /**
     * Error Additional Detail in case the status is non-success.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalDetail?: string;
    /**
     * Dictionary to store the count of ProtectableItems with key POType.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly protectableItemCount?: Record<string, unknown>;
}

/** Target details for file / folder restore. */
export declare interface InstantItemRecoveryTarget {
    /** List of client scripts. */
    clientScripts?: ClientScriptForConnect[];
}

export declare interface InstantRPAdditionalDetails {
    azureBackupRGNamePrefix?: string;
    azureBackupRGNameSuffix?: string;
}

/**
 * Defines values for IntentItemType. \
 * {@link KnownIntentItemType} can be used interchangeably with IntentItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **SQLInstance** \
 * **SQLAvailabilityGroupContainer**
 */
export declare type IntentItemType = string;

/** Interface representing a ItemLevelRecoveryConnections. */
export declare interface ItemLevelRecoveryConnections {
    /**
     * Provisions a script which invokes an iSCSI connection to the backup data. Executing this script
     * opens a file
     * explorer displaying all the recoverable files and folders. This is an asynchronous operation. To
     * know the status of
     * provisioning, call GetProtectedItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up items.
     * @param containerName Container name associated with the backed up items.
     * @param protectedItemName Backed up item name whose files/folders are to be restored.
     * @param recoveryPointId Recovery point ID which represents backed up data. iSCSI connection will be
     *                        provisioned
     *                        for this backed up data.
     * @param parameters resource ILR request
     * @param options The options parameters.
     */
    provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: ILRRequestResource, options?: ItemLevelRecoveryConnectionsProvisionOptionalParams): Promise<void>;
    /**
     * Revokes an iSCSI connection which can be used to download a script. Executing this script opens a
     * file explorer
     * displaying all recoverable files and folders. This is an asynchronous operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up items.
     * @param containerName Container name associated with the backed up items.
     * @param protectedItemName Backed up item name whose files/folders are to be restored.
     * @param recoveryPointId Recovery point ID which represents backed up data. iSCSI connection will be
     *                        revoked for
     *                        this backed up data.
     * @param options The options parameters.
     */
    revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: ItemLevelRecoveryConnectionsRevokeOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface ItemLevelRecoveryConnectionsProvisionOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ItemLevelRecoveryConnectionsRevokeOptionalParams extends coreClient.OperationOptions {
}

/** Defines workload agnostic properties for a job. */
export declare interface Job {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    jobType: "AzureIaaSVMJob" | "AzureIaaSVMJobV2" | "AzureStorageJob" | "AzureWorkloadJob" | "DpmJob" | "MabJob" | "VaultJob";
    /** Friendly name of the entity on which the current job is executing. */
    entityFriendlyName?: string;
    /** Backup management type to execute the current job. */
    backupManagementType?: BackupManagementType;
    /** The operation name. */
    operation?: string;
    /** Job status. */
    status?: string;
    /** The start time. */
    startTime?: Date;
    /** The end time. */
    endTime?: Date;
    /** ActivityId of job. */
    activityId?: string;
}

/** Interface representing a JobCancellations. */
export declare interface JobCancellations {
    /**
     * Cancels a job. This is an asynchronous operation. To know the status of the cancellation, call
     * GetCancelOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param jobName Name of the job to cancel.
     * @param options The options parameters.
     */
    trigger(vaultName: string, resourceGroupName: string, jobName: string, options?: JobCancellationsTriggerOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface JobCancellationsTriggerOptionalParams extends coreClient.OperationOptions {
}

/** Interface representing a JobDetails. */
export declare interface JobDetails {
    /**
     * Gets extended information associated with the job.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param jobName Name of the job whose details are to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, jobName: string, options?: JobDetailsGetOptionalParams): Promise<JobDetailsGetResponse>;
}

/** Optional parameters. */
export declare interface JobDetailsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type JobDetailsGetResponse = JobResource;

/** Interface representing a JobOperationResults. */
export declare interface JobOperationResults {
    /**
     * Fetches the result of any operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param jobName Job name whose operation result has to be fetched.
     * @param operationId OperationID which represents the operation whose result has to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, options?: JobOperationResultsGetOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface JobOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/**
 * Defines values for JobOperationType. \
 * {@link KnownJobOperationType} can be used interchangeably with JobOperationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Register** \
 * **UnRegister** \
 * **ConfigureBackup** \
 * **Backup** \
 * **Restore** \
 * **DisableBackup** \
 * **DeleteBackupData** \
 * **CrossRegionRestore** \
 * **Undelete** \
 * **UpdateCustomerManagedKey**
 */
export declare type JobOperationType = string;

/** Filters to list the jobs. */
export declare interface JobQueryObject {
    /** Status of the job. */
    status?: JobStatus;
    /** Type of backup management for the job. */
    backupManagementType?: BackupManagementType;
    /** Type of operation. */
    operation?: JobOperationType;
    /** JobID represents the job uniquely. */
    jobId?: string;
    /** Job has started at this time. Value is in UTC. */
    startTime?: Date;
    /** Job has ended at this time. Value is in UTC. */
    endTime?: Date;
}

/** Defines workload agnostic properties for a job. */
export declare interface JobResource extends Resource {
    /** JobResource properties */
    properties?: JobUnion;
}

/** List of Job resources */
export declare interface JobResourceList extends ResourceList {
    /** List of resources. */
    value?: JobResource[];
}

/** Interface representing a Jobs. */
export declare interface Jobs {
    /**
     * Triggers export of jobs specified by filters and returns an OperationID to track.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    export(vaultName: string, resourceGroupName: string, options?: JobsExportOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface JobsExportOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/**
 * Defines values for JobStatus. \
 * {@link KnownJobStatus} can be used interchangeably with JobStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **InProgress** \
 * **Completed** \
 * **Failed** \
 * **CompletedWithWarnings** \
 * **Cancelled** \
 * **Cancelling**
 */
export declare type JobStatus = string;

/** Defines values for JobSupportedAction. */
export declare type JobSupportedAction = "Invalid" | "Cancellable" | "Retriable";

export declare type JobUnion = Job | AzureIaaSVMJob | AzureIaaSVMJobV2 | AzureStorageJob | AzureWorkloadJob | DpmJob | MabJob | VaultJob;

/** KEK is encryption key for BEK. */
export declare interface KEKDetails {
    /** Key is KEK. */
    keyUrl?: string;
    /** Key Vault ID where this Key is stored. */
    keyVaultId?: string;
    /** KEK data. */
    keyBackupData?: string;
}

/**
 * BEK is bitlocker key.
 * KEK is encryption key for BEK
 * If the VM was encrypted then we will store following details :
 * 1. Secret(BEK) - Url + Backup Data + vaultId.
 * 2. Key(KEK) - Url + Backup Data + vaultId.
 * 3. EncryptionMechanism
 * BEK and KEK can potentially have different vault ids.
 */
export declare interface KeyAndSecretDetails {
    /** KEK is encryption key for BEK. */
    kekDetails?: KEKDetails;
    /** BEK is bitlocker encryption key. */
    bekDetails?: BEKDetails;
    /** Encryption mechanism: None/ SinglePass/ DoublePass */
    encryptionMechanism?: string;
}

/** Known values of {@link AcquireStorageAccountLock} that the service accepts. */
export declare enum KnownAcquireStorageAccountLock {
    /** Acquire */
    Acquire = "Acquire",
    /** NotAcquire */
    NotAcquire = "NotAcquire"
}

/** Known values of {@link AzureFileShareType} that the service accepts. */
export declare enum KnownAzureFileShareType {
    /** Invalid */
    Invalid = "Invalid",
    /** Xsmb */
    Xsmb = "XSMB",
    /** XSync */
    XSync = "XSync"
}

/** Known values of {@link BackupEngineType} that the service accepts. */
export declare enum KnownBackupEngineType {
    /** Invalid */
    Invalid = "Invalid",
    /** DpmBackupEngine */
    DpmBackupEngine = "DpmBackupEngine",
    /** AzureBackupServerEngine */
    AzureBackupServerEngine = "AzureBackupServerEngine"
}

/** Known values of {@link BackupItemType} that the service accepts. */
export declare enum KnownBackupItemType {
    /** Invalid */
    Invalid = "Invalid",
    /** VM */
    VM = "VM",
    /** FileFolder */
    FileFolder = "FileFolder",
    /** AzureSqlDb */
    AzureSqlDb = "AzureSqlDb",
    /** Sqldb */
    Sqldb = "SQLDB",
    /** Exchange */
    Exchange = "Exchange",
    /** Sharepoint */
    Sharepoint = "Sharepoint",
    /** VMwareVM */
    VMwareVM = "VMwareVM",
    /** SystemState */
    SystemState = "SystemState",
    /** Client */
    Client = "Client",
    /** GenericDataSource */
    GenericDataSource = "GenericDataSource",
    /** SQLDataBase */
    SQLDataBase = "SQLDataBase",
    /** AzureFileShare */
    AzureFileShare = "AzureFileShare",
    /** SAPHanaDatabase */
    SAPHanaDatabase = "SAPHanaDatabase",
    /** SAPAseDatabase */
    SAPAseDatabase = "SAPAseDatabase",
    /** SAPHanaDBInstance */
    SAPHanaDBInstance = "SAPHanaDBInstance"
}

/** Known values of {@link BackupManagementType} that the service accepts. */
export declare enum KnownBackupManagementType {
    /** Invalid */
    Invalid = "Invalid",
    /** AzureIaasVM */
    AzureIaasVM = "AzureIaasVM",
    /** MAB */
    MAB = "MAB",
    /** DPM */
    DPM = "DPM",
    /** AzureBackupServer */
    AzureBackupServer = "AzureBackupServer",
    /** AzureSql */
    AzureSql = "AzureSql",
    /** AzureStorage */
    AzureStorage = "AzureStorage",
    /** AzureWorkload */
    AzureWorkload = "AzureWorkload",
    /** DefaultBackup */
    DefaultBackup = "DefaultBackup"
}

/** Known values of {@link BackupType} that the service accepts. */
export declare enum KnownBackupType {
    /** Invalid */
    Invalid = "Invalid",
    /** Full */
    Full = "Full",
    /** Differential */
    Differential = "Differential",
    /** Log */
    Log = "Log",
    /** CopyOnlyFull */
    CopyOnlyFull = "CopyOnlyFull",
    /** Incremental */
    Incremental = "Incremental",
    /** SnapshotFull */
    SnapshotFull = "SnapshotFull",
    /** SnapshotCopyOnlyFull */
    SnapshotCopyOnlyFull = "SnapshotCopyOnlyFull"
}

/** Known values of {@link ContainerType} that the service accepts. */
export declare enum KnownContainerType {
    /** Invalid */
    Invalid = "Invalid",
    /** Unknown */
    Unknown = "Unknown",
    /** IaasVMContainer */
    IaasVMContainer = "IaasVMContainer",
    /** IaasVMServiceContainer */
    IaasVMServiceContainer = "IaasVMServiceContainer",
    /** DPMContainer */
    DPMContainer = "DPMContainer",
    /** AzureBackupServerContainer */
    AzureBackupServerContainer = "AzureBackupServerContainer",
    /** MABContainer */
    MABContainer = "MABContainer",
    /** Cluster */
    Cluster = "Cluster",
    /** AzureSqlContainer */
    AzureSqlContainer = "AzureSqlContainer",
    /** Windows */
    Windows = "Windows",
    /** VCenter */
    VCenter = "VCenter",
    /** VMAppContainer */
    VMAppContainer = "VMAppContainer",
    /** SqlagWorkLoadContainer */
    SqlagWorkLoadContainer = "SQLAGWorkLoadContainer",
    /** StorageContainer */
    StorageContainer = "StorageContainer",
    /** GenericContainer */
    GenericContainer = "GenericContainer",
    /** HanaHSRContainer */
    HanaHSRContainer = "HanaHSRContainer"
}

/** Known values of {@link CopyOptions} that the service accepts. */
export declare enum KnownCopyOptions {
    /** Invalid */
    Invalid = "Invalid",
    /** CreateCopy */
    CreateCopy = "CreateCopy",
    /** Skip */
    Skip = "Skip",
    /** Overwrite */
    Overwrite = "Overwrite",
    /** FailOnConflict */
    FailOnConflict = "FailOnConflict"
}

/** Known values of {@link CreateMode} that the service accepts. */
export declare enum KnownCreateMode {
    /** Invalid */
    Invalid = "Invalid",
    /** Default */
    Default = "Default",
    /** Recover */
    Recover = "Recover"
}

/** Known values of {@link DataMoveLevel} that the service accepts. */
export declare enum KnownDataMoveLevel {
    /** Invalid */
    Invalid = "Invalid",
    /** Vault */
    Vault = "Vault",
    /** Container */
    Container = "Container"
}

/** Known values of {@link DataSourceType} that the service accepts. */
export declare enum KnownDataSourceType {
    /** Invalid */
    Invalid = "Invalid",
    /** VM */
    VM = "VM",
    /** FileFolder */
    FileFolder = "FileFolder",
    /** AzureSqlDb */
    AzureSqlDb = "AzureSqlDb",
    /** Sqldb */
    Sqldb = "SQLDB",
    /** Exchange */
    Exchange = "Exchange",
    /** Sharepoint */
    Sharepoint = "Sharepoint",
    /** VMwareVM */
    VMwareVM = "VMwareVM",
    /** SystemState */
    SystemState = "SystemState",
    /** Client */
    Client = "Client",
    /** GenericDataSource */
    GenericDataSource = "GenericDataSource",
    /** SQLDataBase */
    SQLDataBase = "SQLDataBase",
    /** AzureFileShare */
    AzureFileShare = "AzureFileShare",
    /** SAPHanaDatabase */
    SAPHanaDatabase = "SAPHanaDatabase",
    /** SAPAseDatabase */
    SAPAseDatabase = "SAPAseDatabase",
    /** SAPHanaDBInstance */
    SAPHanaDBInstance = "SAPHanaDBInstance"
}

/** Known values of {@link DedupState} that the service accepts. */
export declare enum KnownDedupState {
    /** Invalid */
    Invalid = "Invalid",
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link EncryptionAtRestType} that the service accepts. */
export declare enum KnownEncryptionAtRestType {
    /** Invalid */
    Invalid = "Invalid",
    /** MicrosoftManaged */
    MicrosoftManaged = "MicrosoftManaged",
    /** CustomerManaged */
    CustomerManaged = "CustomerManaged"
}

/** Known values of {@link EnhancedSecurityState} that the service accepts. */
export declare enum KnownEnhancedSecurityState {
    /** Invalid */
    Invalid = "Invalid",
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link FabricName} that the service accepts. */
export declare enum KnownFabricName {
    /** Invalid */
    Invalid = "Invalid",
    /** Azure */
    Azure = "Azure"
}

/** Known values of {@link HealthState} that the service accepts. */
export declare enum KnownHealthState {
    /** Passed */
    Passed = "Passed",
    /** ActionRequired */
    ActionRequired = "ActionRequired",
    /** ActionSuggested */
    ActionSuggested = "ActionSuggested",
    /** Invalid */
    Invalid = "Invalid"
}

/** Known values of {@link HealthStatus} that the service accepts. */
export declare enum KnownHealthStatus {
    /** Passed */
    Passed = "Passed",
    /** ActionRequired */
    ActionRequired = "ActionRequired",
    /** ActionSuggested */
    ActionSuggested = "ActionSuggested",
    /** Invalid */
    Invalid = "Invalid"
}

/** Known values of {@link IaasvmPolicyType} that the service accepts. */
export declare enum KnownIaasvmPolicyType {
    /** Invalid */
    Invalid = "Invalid",
    /** V1 */
    V1 = "V1",
    /** V2 */
    V2 = "V2"
}

/** Known values of {@link InfrastructureEncryptionState} that the service accepts. */
export declare enum KnownInfrastructureEncryptionState {
    /** Invalid */
    Invalid = "Invalid",
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link InquiryStatus} that the service accepts. */
export declare enum KnownInquiryStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** Success */
    Success = "Success",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link IntentItemType} that the service accepts. */
export declare enum KnownIntentItemType {
    /** Invalid */
    Invalid = "Invalid",
    /** SQLInstance */
    SQLInstance = "SQLInstance",
    /** SQLAvailabilityGroupContainer */
    SQLAvailabilityGroupContainer = "SQLAvailabilityGroupContainer"
}

/** Known values of {@link JobOperationType} that the service accepts. */
export declare enum KnownJobOperationType {
    /** Invalid */
    Invalid = "Invalid",
    /** Register */
    Register = "Register",
    /** UnRegister */
    UnRegister = "UnRegister",
    /** ConfigureBackup */
    ConfigureBackup = "ConfigureBackup",
    /** Backup */
    Backup = "Backup",
    /** Restore */
    Restore = "Restore",
    /** DisableBackup */
    DisableBackup = "DisableBackup",
    /** DeleteBackupData */
    DeleteBackupData = "DeleteBackupData",
    /** CrossRegionRestore */
    CrossRegionRestore = "CrossRegionRestore",
    /** Undelete */
    Undelete = "Undelete",
    /** UpdateCustomerManagedKey */
    UpdateCustomerManagedKey = "UpdateCustomerManagedKey"
}

/** Known values of {@link JobStatus} that the service accepts. */
export declare enum KnownJobStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** InProgress */
    InProgress = "InProgress",
    /** Completed */
    Completed = "Completed",
    /** Failed */
    Failed = "Failed",
    /** CompletedWithWarnings */
    CompletedWithWarnings = "CompletedWithWarnings",
    /** Cancelled */
    Cancelled = "Cancelled",
    /** Cancelling */
    Cancelling = "Cancelling"
}

/** Known values of {@link LastBackupStatus} that the service accepts. */
export declare enum KnownLastBackupStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** Healthy */
    Healthy = "Healthy",
    /** Unhealthy */
    Unhealthy = "Unhealthy",
    /** IRPending */
    IRPending = "IRPending"
}

/** Known values of {@link LastUpdateStatus} that the service accepts. */
export declare enum KnownLastUpdateStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** NotEnabled */
    NotEnabled = "NotEnabled",
    /** PartiallySucceeded */
    PartiallySucceeded = "PartiallySucceeded",
    /** PartiallyFailed */
    PartiallyFailed = "PartiallyFailed",
    /** Failed */
    Failed = "Failed",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Initialized */
    Initialized = "Initialized",
    /** FirstInitialization */
    FirstInitialization = "FirstInitialization"
}

/** Known values of {@link MabServerType} that the service accepts. */
export declare enum KnownMabServerType {
    /** Invalid */
    Invalid = "Invalid",
    /** Unknown */
    Unknown = "Unknown",
    /** IaasVMContainer */
    IaasVMContainer = "IaasVMContainer",
    /** IaasVMServiceContainer */
    IaasVMServiceContainer = "IaasVMServiceContainer",
    /** DPMContainer */
    DPMContainer = "DPMContainer",
    /** AzureBackupServerContainer */
    AzureBackupServerContainer = "AzureBackupServerContainer",
    /** MABContainer */
    MABContainer = "MABContainer",
    /** Cluster */
    Cluster = "Cluster",
    /** AzureSqlContainer */
    AzureSqlContainer = "AzureSqlContainer",
    /** Windows */
    Windows = "Windows",
    /** VCenter */
    VCenter = "VCenter",
    /** VMAppContainer */
    VMAppContainer = "VMAppContainer",
    /** SqlagWorkLoadContainer */
    SqlagWorkLoadContainer = "SQLAGWorkLoadContainer",
    /** StorageContainer */
    StorageContainer = "StorageContainer",
    /** GenericContainer */
    GenericContainer = "GenericContainer"
}

/** Known values of {@link OperationStatusValues} that the service accepts. */
export declare enum KnownOperationStatusValues {
    /** Invalid */
    Invalid = "Invalid",
    /** InProgress */
    InProgress = "InProgress",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Canceled */
    Canceled = "Canceled"
}

/** Known values of {@link OperationType} that the service accepts. */
export declare enum KnownOperationType {
    /** Invalid */
    Invalid = "Invalid",
    /** Register */
    Register = "Register",
    /** Reregister */
    Reregister = "Reregister"
}

/** Known values of {@link OverwriteOptions} that the service accepts. */
export declare enum KnownOverwriteOptions {
    /** Invalid */
    Invalid = "Invalid",
    /** FailOnConflict */
    FailOnConflict = "FailOnConflict",
    /** Overwrite */
    Overwrite = "Overwrite"
}

/** Known values of {@link PolicyType} that the service accepts. */
export declare enum KnownPolicyType {
    /** Invalid */
    Invalid = "Invalid",
    /** Full */
    Full = "Full",
    /** Differential */
    Differential = "Differential",
    /** Log */
    Log = "Log",
    /** CopyOnlyFull */
    CopyOnlyFull = "CopyOnlyFull",
    /** Incremental */
    Incremental = "Incremental",
    /** SnapshotFull */
    SnapshotFull = "SnapshotFull",
    /** SnapshotCopyOnlyFull */
    SnapshotCopyOnlyFull = "SnapshotCopyOnlyFull"
}

/** Known values of {@link PrivateEndpointConnectionStatus} that the service accepts. */
export declare enum KnownPrivateEndpointConnectionStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected",
    /** Disconnected */
    Disconnected = "Disconnected"
}

/** Known values of {@link ProtectedItemHealthStatus} that the service accepts. */
export declare enum KnownProtectedItemHealthStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** Healthy */
    Healthy = "Healthy",
    /** Unhealthy */
    Unhealthy = "Unhealthy",
    /** NotReachable */
    NotReachable = "NotReachable",
    /** IRPending */
    IRPending = "IRPending"
}

/** Known values of {@link ProtectedItemState} that the service accepts. */
export declare enum KnownProtectedItemState {
    /** Invalid */
    Invalid = "Invalid",
    /** IRPending */
    IRPending = "IRPending",
    /** Protected */
    Protected = "Protected",
    /** ProtectionError */
    ProtectionError = "ProtectionError",
    /** ProtectionStopped */
    ProtectionStopped = "ProtectionStopped",
    /** ProtectionPaused */
    ProtectionPaused = "ProtectionPaused",
    /** BackupsSuspended */
    BackupsSuspended = "BackupsSuspended"
}

/** Known values of {@link ProtectionIntentItemType} that the service accepts. */
export declare enum KnownProtectionIntentItemType {
    /** Invalid */
    Invalid = "Invalid",
    /** AzureResourceItem */
    AzureResourceItem = "AzureResourceItem",
    /** RecoveryServiceVaultItem */
    RecoveryServiceVaultItem = "RecoveryServiceVaultItem",
    /** AzureWorkloadContainerAutoProtectionIntent */
    AzureWorkloadContainerAutoProtectionIntent = "AzureWorkloadContainerAutoProtectionIntent",
    /** AzureWorkloadAutoProtectionIntent */
    AzureWorkloadAutoProtectionIntent = "AzureWorkloadAutoProtectionIntent",
    /** AzureWorkloadSQLAutoProtectionIntent */
    AzureWorkloadSQLAutoProtectionIntent = "AzureWorkloadSQLAutoProtectionIntent"
}

/** Known values of {@link ProtectionState} that the service accepts. */
export declare enum KnownProtectionState {
    /** Invalid */
    Invalid = "Invalid",
    /** IRPending */
    IRPending = "IRPending",
    /** Protected */
    Protected = "Protected",
    /** ProtectionError */
    ProtectionError = "ProtectionError",
    /** ProtectionStopped */
    ProtectionStopped = "ProtectionStopped",
    /** ProtectionPaused */
    ProtectionPaused = "ProtectionPaused",
    /** BackupsSuspended */
    BackupsSuspended = "BackupsSuspended"
}

/** Known values of {@link ProtectionStatus} that the service accepts. */
export declare enum KnownProtectionStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** NotProtected */
    NotProtected = "NotProtected",
    /** Protecting */
    Protecting = "Protecting",
    /** Protected */
    Protected = "Protected",
    /** ProtectionFailed */
    ProtectionFailed = "ProtectionFailed"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Deleting */
    Deleting = "Deleting",
    /** Failed */
    Failed = "Failed",
    /** Pending */
    Pending = "Pending"
}

/** Known values of {@link RecoveryMode} that the service accepts. */
export declare enum KnownRecoveryMode {
    /** Invalid */
    Invalid = "Invalid",
    /** FileRecovery */
    FileRecovery = "FileRecovery",
    /** WorkloadRecovery */
    WorkloadRecovery = "WorkloadRecovery"
}

/** Known values of {@link RecoveryType} that the service accepts. */
export declare enum KnownRecoveryType {
    /** Invalid */
    Invalid = "Invalid",
    /** OriginalLocation */
    OriginalLocation = "OriginalLocation",
    /** AlternateLocation */
    AlternateLocation = "AlternateLocation",
    /** RestoreDisks */
    RestoreDisks = "RestoreDisks",
    /** Offline */
    Offline = "Offline"
}

/** Known values of {@link RehydrationPriority} that the service accepts. */
export declare enum KnownRehydrationPriority {
    /** Standard */
    Standard = "Standard",
    /** High */
    High = "High"
}

/** Known values of {@link ResourceHealthStatus} that the service accepts. */
export declare enum KnownResourceHealthStatus {
    /** Healthy */
    Healthy = "Healthy",
    /** TransientDegraded */
    TransientDegraded = "TransientDegraded",
    /** PersistentDegraded */
    PersistentDegraded = "PersistentDegraded",
    /** TransientUnhealthy */
    TransientUnhealthy = "TransientUnhealthy",
    /** PersistentUnhealthy */
    PersistentUnhealthy = "PersistentUnhealthy",
    /** Invalid */
    Invalid = "Invalid"
}

/** Known values of {@link RestorePointQueryType} that the service accepts. */
export declare enum KnownRestorePointQueryType {
    /** Invalid */
    Invalid = "Invalid",
    /** Full */
    Full = "Full",
    /** Log */
    Log = "Log",
    /** Differential */
    Differential = "Differential",
    /** FullAndDifferential */
    FullAndDifferential = "FullAndDifferential",
    /** All */
    All = "All",
    /** Incremental */
    Incremental = "Incremental",
    /** SnapshotFull */
    SnapshotFull = "SnapshotFull",
    /** SnapshotCopyOnlyFull */
    SnapshotCopyOnlyFull = "SnapshotCopyOnlyFull"
}

/** Known values of {@link RestorePointType} that the service accepts. */
export declare enum KnownRestorePointType {
    /** Invalid */
    Invalid = "Invalid",
    /** Full */
    Full = "Full",
    /** Log */
    Log = "Log",
    /** Differential */
    Differential = "Differential",
    /** Incremental */
    Incremental = "Incremental",
    /** SnapshotFull */
    SnapshotFull = "SnapshotFull",
    /** SnapshotCopyOnlyFull */
    SnapshotCopyOnlyFull = "SnapshotCopyOnlyFull"
}

/** Known values of {@link RestoreRequestType} that the service accepts. */
export declare enum KnownRestoreRequestType {
    /** Invalid */
    Invalid = "Invalid",
    /** FullShareRestore */
    FullShareRestore = "FullShareRestore",
    /** ItemLevelRestore */
    ItemLevelRestore = "ItemLevelRestore"
}

/** Known values of {@link RetentionDurationType} that the service accepts. */
export declare enum KnownRetentionDurationType {
    /** Invalid */
    Invalid = "Invalid",
    /** Days */
    Days = "Days",
    /** Weeks */
    Weeks = "Weeks",
    /** Months */
    Months = "Months",
    /** Years */
    Years = "Years"
}

/** Known values of {@link RetentionScheduleFormat} that the service accepts. */
export declare enum KnownRetentionScheduleFormat {
    /** Invalid */
    Invalid = "Invalid",
    /** Daily */
    Daily = "Daily",
    /** Weekly */
    Weekly = "Weekly"
}

/** Known values of {@link ScheduleRunType} that the service accepts. */
export declare enum KnownScheduleRunType {
    /** Invalid */
    Invalid = "Invalid",
    /** Daily */
    Daily = "Daily",
    /** Weekly */
    Weekly = "Weekly",
    /** Hourly */
    Hourly = "Hourly"
}

/** Known values of {@link SoftDeleteFeatureState} that the service accepts. */
export declare enum KnownSoftDeleteFeatureState {
    /** Invalid */
    Invalid = "Invalid",
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled",
    /** AlwaysON */
    AlwaysON = "AlwaysON"
}

/** Known values of {@link SQLDataDirectoryType} that the service accepts. */
export declare enum KnownSQLDataDirectoryType {
    /** Invalid */
    Invalid = "Invalid",
    /** Data */
    Data = "Data",
    /** Log */
    Log = "Log"
}

/** Known values of {@link StorageType} that the service accepts. */
export declare enum KnownStorageType {
    /** Invalid */
    Invalid = "Invalid",
    /** GeoRedundant */
    GeoRedundant = "GeoRedundant",
    /** LocallyRedundant */
    LocallyRedundant = "LocallyRedundant",
    /** ZoneRedundant */
    ZoneRedundant = "ZoneRedundant",
    /** ReadAccessGeoZoneRedundant */
    ReadAccessGeoZoneRedundant = "ReadAccessGeoZoneRedundant"
}

/** Known values of {@link StorageTypeState} that the service accepts. */
export declare enum KnownStorageTypeState {
    /** Invalid */
    Invalid = "Invalid",
    /** Locked */
    Locked = "Locked",
    /** Unlocked */
    Unlocked = "Unlocked"
}

/** Known values of {@link SupportStatus} that the service accepts. */
export declare enum KnownSupportStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** Supported */
    Supported = "Supported",
    /** DefaultOFF */
    DefaultOFF = "DefaultOFF",
    /** DefaultON */
    DefaultON = "DefaultON",
    /** NotSupported */
    NotSupported = "NotSupported"
}

/** Known values of {@link TieringMode} that the service accepts. */
export declare enum KnownTieringMode {
    /** Invalid */
    Invalid = "Invalid",
    /** TierRecommended */
    TierRecommended = "TierRecommended",
    /** TierAfter */
    TierAfter = "TierAfter",
    /** DoNotTier */
    DoNotTier = "DoNotTier"
}

/** Known values of {@link Type} that the service accepts. */
export declare enum KnownType {
    /** Invalid */
    Invalid = "Invalid",
    /** BackupProtectedItemCountSummary */
    BackupProtectedItemCountSummary = "BackupProtectedItemCountSummary",
    /** BackupProtectionContainerCountSummary */
    BackupProtectionContainerCountSummary = "BackupProtectionContainerCountSummary"
}

/** Known values of {@link UsagesUnit} that the service accepts. */
export declare enum KnownUsagesUnit {
    /** Count */
    Count = "Count",
    /** Bytes */
    Bytes = "Bytes",
    /** Seconds */
    Seconds = "Seconds",
    /** Percent */
    Percent = "Percent",
    /** CountPerSecond */
    CountPerSecond = "CountPerSecond",
    /** BytesPerSecond */
    BytesPerSecond = "BytesPerSecond"
}

/** Known values of {@link ValidationStatus} that the service accepts. */
export declare enum KnownValidationStatus {
    /** Invalid */
    Invalid = "Invalid",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link VaultSubResourceType} that the service accepts. */
export declare enum KnownVaultSubResourceType {
    /** AzureBackup */
    AzureBackup = "AzureBackup",
    /** AzureBackupSecondary */
    AzureBackupSecondary = "AzureBackup_secondary",
    /** AzureSiteRecovery */
    AzureSiteRecovery = "AzureSiteRecovery"
}

/** Known values of {@link WorkloadItemType} that the service accepts. */
export declare enum KnownWorkloadItemType {
    /** Invalid */
    Invalid = "Invalid",
    /** SQLInstance */
    SQLInstance = "SQLInstance",
    /** SQLDataBase */
    SQLDataBase = "SQLDataBase",
    /** SAPHanaSystem */
    SAPHanaSystem = "SAPHanaSystem",
    /** SAPHanaDatabase */
    SAPHanaDatabase = "SAPHanaDatabase",
    /** SAPAseSystem */
    SAPAseSystem = "SAPAseSystem",
    /** SAPAseDatabase */
    SAPAseDatabase = "SAPAseDatabase",
    /** SAPHanaDBInstance */
    SAPHanaDBInstance = "SAPHanaDBInstance"
}

/** Known values of {@link WorkloadType} that the service accepts. */
export declare enum KnownWorkloadType {
    /** Invalid */
    Invalid = "Invalid",
    /** VM */
    VM = "VM",
    /** FileFolder */
    FileFolder = "FileFolder",
    /** AzureSqlDb */
    AzureSqlDb = "AzureSqlDb",
    /** Sqldb */
    Sqldb = "SQLDB",
    /** Exchange */
    Exchange = "Exchange",
    /** Sharepoint */
    Sharepoint = "Sharepoint",
    /** VMwareVM */
    VMwareVM = "VMwareVM",
    /** SystemState */
    SystemState = "SystemState",
    /** Client */
    Client = "Client",
    /** GenericDataSource */
    GenericDataSource = "GenericDataSource",
    /** SQLDataBase */
    SQLDataBase = "SQLDataBase",
    /** AzureFileShare */
    AzureFileShare = "AzureFileShare",
    /** SAPHanaDatabase */
    SAPHanaDatabase = "SAPHanaDatabase",
    /** SAPAseDatabase */
    SAPAseDatabase = "SAPAseDatabase",
    /** SAPHanaDBInstance */
    SAPHanaDBInstance = "SAPHanaDBInstance"
}

/** Known values of {@link XcoolState} that the service accepts. */
export declare enum KnownXcoolState {
    /** Invalid */
    Invalid = "Invalid",
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** KPI Resource Health Details */
export declare interface KPIResourceHealthDetails {
    /** Resource Health Status */
    resourceHealthStatus?: ResourceHealthStatus;
    /** Resource Health Status */
    resourceHealthDetails?: ResourceHealthDetails[];
}

/**
 * Defines values for LastBackupStatus. \
 * {@link KnownLastBackupStatus} can be used interchangeably with LastBackupStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Healthy** \
 * **Unhealthy** \
 * **IRPending**
 */
export declare type LastBackupStatus = string;

/**
 * Defines values for LastUpdateStatus. \
 * {@link KnownLastUpdateStatus} can be used interchangeably with LastUpdateStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **NotEnabled** \
 * **PartiallySucceeded** \
 * **PartiallyFailed** \
 * **Failed** \
 * **Succeeded** \
 * **Initialized** \
 * **FirstInitialization**
 */
export declare type LastUpdateStatus = string;

/** ListRecoveryPointsRecommendedForMoveRequest Request */
export declare interface ListRecoveryPointsRecommendedForMoveRequest {
    /** Gets the class type. */
    objectType?: string;
    /** List of Recovery Points excluded from Move */
    excludedRPList?: string[];
}

/** Log policy schedule. */
export declare interface LogSchedulePolicy extends SchedulePolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    schedulePolicyType: "LogSchedulePolicy";
    /** Frequency of the log schedule operation of this policy in minutes. */
    scheduleFrequencyInMins?: number;
}

/** Long term retention policy. */
export declare interface LongTermRetentionPolicy extends RetentionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    retentionPolicyType: "LongTermRetentionPolicy";
    /** Daily retention schedule of the protection policy. */
    dailySchedule?: DailyRetentionSchedule;
    /** Weekly retention schedule of the protection policy. */
    weeklySchedule?: WeeklyRetentionSchedule;
    /** Monthly retention schedule of the protection policy. */
    monthlySchedule?: MonthlyRetentionSchedule;
    /** Yearly retention schedule of the protection policy. */
    yearlySchedule?: YearlyRetentionSchedule;
}

/** Long term policy schedule. */
export declare interface LongTermSchedulePolicy extends SchedulePolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    schedulePolicyType: "LongTermSchedulePolicy";
}

/** Container with items backed up using MAB backup engine. */
export declare interface MabContainer extends ProtectionContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "Windows";
    /** Can the container be registered one more time. */
    canReRegister?: boolean;
    /** ContainerID represents the container. */
    containerId?: number;
    /** Number of items backed up in this container. */
    protectedItemCount?: number;
    /** Agent version of this container. */
    agentVersion?: string;
    /** Additional information for this container */
    extendedInfo?: MabContainerExtendedInfo;
    /** Health details on this mab container. */
    mabContainerHealthDetails?: MABContainerHealthDetails[];
    /** Health state of mab container. */
    containerHealthState?: string;
}

/** Additional information of the container. */
export declare interface MabContainerExtendedInfo {
    /** Time stamp when this container was refreshed. */
    lastRefreshedAt?: Date;
    /** Type of backup items associated with this container. */
    backupItemType?: BackupItemType;
    /** List of backup items associated with this container. */
    backupItems?: string[];
    /** Backup policy associated with this container. */
    policyName?: string;
    /** Latest backup status of this container. */
    lastBackupStatus?: string;
}

/** MAB workload-specific Health Details. */
export declare interface MABContainerHealthDetails {
    /** Health Code */
    code?: number;
    /** Health Title */
    title?: string;
    /** Health Message */
    message?: string;
    /** Health Recommended Actions */
    recommendations?: string[];
}

/** MAB workload-specific error information. */
export declare interface MabErrorInfo {
    /**
     * Localized error string.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly errorString?: string;
    /**
     * List of localized recommendations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendations?: string[];
}

/** MAB workload-specific backup item. */
export declare interface MabFileFolderProtectedItem extends ProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "MabFileFolderProtectedItem";
    /** Friendly name of this backup item. */
    friendlyName?: string;
    /** Name of the computer associated with this backup item. */
    computerName?: string;
    /** Status of last backup operation. */
    lastBackupStatus?: string;
    /** Timestamp of the last backup operation on this backup item. */
    lastBackupTime?: Date;
    /** Protected, ProtectionStopped, IRPending or ProtectionError */
    protectionState?: string;
    /** Sync time for deferred deletion in UTC */
    deferredDeleteSyncTimeInUTC?: number;
    /** Additional information with this backup item. */
    extendedInfo?: MabFileFolderProtectedItemExtendedInfo;
}

/** Additional information on the backed up item. */
export declare interface MabFileFolderProtectedItemExtendedInfo {
    /** Last time when the agent data synced to service. */
    lastRefreshedAt?: Date;
    /** The oldest backup copy available. */
    oldestRecoveryPoint?: Date;
    /** Number of backup copies associated with the backup item. */
    recoveryPointCount?: number;
}

/** MAB workload-specific job. */
export declare interface MabJob extends Job {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    jobType: "MabJob";
    /** Time taken by job to run. */
    duration?: string;
    /** The state/actions applicable on jobs like cancel/retry. */
    actionsInfo?: JobSupportedAction[];
    /** Name of server protecting the DS. */
    mabServerName?: string;
    /** Server type of MAB container. */
    mabServerType?: MabServerType;
    /** Workload type of backup item. */
    workloadType?: WorkloadType;
    /** The errors. */
    errorDetails?: MabErrorInfo[];
    /** Additional information on the job. */
    extendedInfo?: MabJobExtendedInfo;
}

/** Additional information for the MAB workload-specific job. */
export declare interface MabJobExtendedInfo {
    /** List of tasks for this job. */
    tasksList?: MabJobTaskDetails[];
    /** The job properties. */
    propertyBag?: {
        [propertyName: string]: string;
    };
    /** Non localized error message specific to this job. */
    dynamicErrorMessage?: string;
}

/** MAB workload-specific job task details. */
export declare interface MabJobTaskDetails {
    /** The task display name. */
    taskId?: string;
    /** The start time. */
    startTime?: Date;
    /** The end time. */
    endTime?: Date;
    /** Time elapsed for task. */
    duration?: string;
    /** The status. */
    status?: string;
}

/** Mab container-specific backup policy. */
export declare interface MabProtectionPolicy extends ProtectionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupManagementType: "MAB";
    /** Backup schedule of backup policy. */
    schedulePolicy?: SchedulePolicyUnion;
    /** Retention policy details. */
    retentionPolicy?: RetentionPolicyUnion;
}

/**
 * Defines values for MabServerType. \
 * {@link KnownMabServerType} can be used interchangeably with MabServerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Unknown** \
 * **IaasVMContainer** \
 * **IaasVMServiceContainer** \
 * **DPMContainer** \
 * **AzureBackupServerContainer** \
 * **MABContainer** \
 * **Cluster** \
 * **AzureSqlContainer** \
 * **Windows** \
 * **VCenter** \
 * **VMAppContainer** \
 * **SQLAGWorkLoadContainer** \
 * **StorageContainer** \
 * **GenericContainer**
 */
export declare type MabServerType = string;

/** Monthly retention schedule. */
export declare interface MonthlyRetentionSchedule {
    /** Retention schedule format type for monthly retention policy. */
    retentionScheduleFormatType?: RetentionScheduleFormat;
    /** Daily retention format for monthly retention policy. */
    retentionScheduleDaily?: DailyRetentionFormat;
    /** Weekly retention format for monthly retention policy. */
    retentionScheduleWeekly?: WeeklyRetentionFormat;
    /** Retention times of retention policy. */
    retentionTimes?: Date[];
    /** Retention duration of retention Policy. */
    retentionDuration?: RetentionDuration;
}

/** Defines values for MonthOfYear. */
export declare type MonthOfYear = "Invalid" | "January" | "February" | "March" | "April" | "May" | "June" | "July" | "August" | "September" | "October" | "November" | "December";

/** Optional parameters. */
export declare interface MoveRecoveryPointOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

export declare interface MoveRPAcrossTiersRequest {
    /** Gets the class type. */
    objectType?: string;
    /** Source tier from where RP needs to be moved */
    sourceTierType?: RecoveryPointTierType;
    /** Target tier where RP needs to be moved */
    targetTierType?: RecoveryPointTierType;
}

/** The name of usage. */
export declare interface NameInfo {
    /** Value of usage. */
    value?: string;
    /** Localized value of usage. */
    localizedValue?: string;
}

/** The resource management error response. */
export declare interface NewErrorResponse {
    /** The error object. */
    error?: NewErrorResponseError;
}

/** The error object. */
export declare interface NewErrorResponseError {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: NewErrorResponse[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Interface representing a Operation. */
export declare interface Operation {
    /**
     * Validate operation for specified backed up item. This is a synchronous operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters resource validate operation request
     * @param options The options parameters.
     */
    validate(vaultName: string, resourceGroupName: string, parameters: ValidateOperationRequestUnion, options?: OperationValidateOptionalParams): Promise<OperationValidateResponse>;
}

/** Operation result info. */
export declare interface OperationResultInfo extends OperationResultInfoBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "OperationResultInfo";
    /** List of jobs created by this operation. */
    jobList?: string[];
}

/** Base class for operation result info. */
export declare interface OperationResultInfoBase {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ExportJobsOperationResultInfo" | "OperationResultInfo";
}

/** Base class for operation result info. */
export declare interface OperationResultInfoBaseResource extends OperationWorkerResponse {
    /** OperationResultInfoBaseResource operation */
    operation?: OperationResultInfoBaseUnion;
}

export declare type OperationResultInfoBaseUnion = OperationResultInfoBase | ExportJobsOperationResultInfo | OperationResultInfo;

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Returns the list of available operations.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<ClientDiscoveryValueForSingleApi>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = ClientDiscoveryResponse;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = ClientDiscoveryResponse;

/** Operation status. */
export declare interface OperationStatus {
    /** ID of the operation. */
    id?: string;
    /** Name of the operation. */
    name?: string;
    /** Operation status. */
    status?: OperationStatusValues;
    /** Operation start time. Format: ISO-8601. */
    startTime?: Date;
    /** Operation end time. Format: ISO-8601. */
    endTime?: Date;
    /** Error information related to this operation. */
    error?: OperationStatusError;
    /** Additional information associated with this operation. */
    properties?: OperationStatusExtendedInfoUnion;
}

/** Error information associated with operation status call. */
export declare interface OperationStatusError {
    /** Error code of the operation failure. */
    code?: string;
    /** Error message displayed if the operation failure. */
    message?: string;
}

/** Base class for additional information of operation status. */
export declare interface OperationStatusExtendedInfo {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "OperationStatusJobExtendedInfo" | "OperationStatusJobsExtendedInfo" | "OperationStatusProvisionILRExtendedInfo" | "OperationStatusValidateOperationExtendedInfo";
}

export declare type OperationStatusExtendedInfoUnion = OperationStatusExtendedInfo | OperationStatusJobExtendedInfo | OperationStatusJobsExtendedInfo | OperationStatusProvisionILRExtendedInfo | OperationStatusValidateOperationExtendedInfo;

/** Operation status job extended info. */
export declare interface OperationStatusJobExtendedInfo extends OperationStatusExtendedInfo {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "OperationStatusJobExtendedInfo";
    /** ID of the job created for this protected item. */
    jobId?: string;
}

/** Operation status extended info for list of jobs. */
export declare interface OperationStatusJobsExtendedInfo extends OperationStatusExtendedInfo {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "OperationStatusJobsExtendedInfo";
    /** IDs of the jobs created for the protected item. */
    jobIds?: string[];
    /** Stores all the failed jobs along with the corresponding error codes. */
    failedJobsError?: {
        [propertyName: string]: string;
    };
}

/** Operation status extended info for ILR provision action. */
export declare interface OperationStatusProvisionILRExtendedInfo extends OperationStatusExtendedInfo {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "OperationStatusProvisionILRExtendedInfo";
    /** Target details for file / folder restore. */
    recoveryTarget?: InstantItemRecoveryTarget;
}

/** Operation status extended info for ValidateOperation action. */
export declare interface OperationStatusValidateOperationExtendedInfo extends OperationStatusExtendedInfo {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "OperationStatusValidateOperationExtendedInfo";
    /** Gets the validation operation response */
    validateOperationResponse?: ValidateOperationResponse;
}

/**
 * Defines values for OperationStatusValues. \
 * {@link KnownOperationStatusValues} can be used interchangeably with OperationStatusValues,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **InProgress** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled**
 */
export declare type OperationStatusValues = string;

/**
 * Defines values for OperationType. \
 * {@link KnownOperationType} can be used interchangeably with OperationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Register** \
 * **Reregister**
 */
export declare type OperationType = string;

/** Optional parameters. */
export declare interface OperationValidateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the validate operation. */
export declare type OperationValidateResponse = ValidateOperationsResponse;

/** This is the base class for operation result responses. */
export declare interface OperationWorkerResponse {
    /** HTTP Status Code of the operation. */
    statusCode?: HttpStatusCode;
    /** HTTP headers associated with this operation. */
    headers?: {
        [propertyName: string]: string[];
    };
}

/**
 * Defines values for OverwriteOptions. \
 * {@link KnownOverwriteOptions} can be used interchangeably with OverwriteOptions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **FailOnConflict** \
 * **Overwrite**
 */
export declare type OverwriteOptions = string;

/** Provides details for log ranges */
export declare interface PointInTimeRange {
    /** Start time of the time range for log recovery. */
    startTime?: Date;
    /** End time of the time range for log recovery. */
    endTime?: Date;
}

/**
 * Defines values for PolicyType. \
 * {@link KnownPolicyType} can be used interchangeably with PolicyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Full** \
 * **Differential** \
 * **Log** \
 * **CopyOnlyFull** \
 * **Incremental** \
 * **SnapshotFull** \
 * **SnapshotCopyOnlyFull**
 */
export declare type PolicyType = string;

/** Pre-backup validation for Azure VM Workload provider. */
export declare interface PreBackupValidation {
    /** Status of protectable item, i.e. InProgress,Succeeded,Failed */
    status?: InquiryStatus;
    /** Error code of protectable item */
    code?: string;
    /** Message corresponding to the error code for the protectable item */
    message?: string;
}

/** Prepare DataMove Request */
export declare interface PrepareDataMoveRequest {
    /** ARM Id of target vault */
    targetResourceId: string;
    /** Target Region */
    targetRegion: string;
    /** DataMove Level */
    dataMoveLevel: DataMoveLevel;
    /**
     * Source Container ArmIds
     * This needs to be populated only if DataMoveLevel is set to container
     */
    sourceContainerArmIds?: string[];
    /** Ignore the artifacts which are already moved. */
    ignoreMoved?: boolean;
}

/** Prepare DataMove Response */
export declare interface PrepareDataMoveResponse extends VaultStorageConfigOperationResultResponse {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "PrepareDataMoveResponse";
    /** Co-relationId for move operation */
    correlationId?: string;
    /** Source Vault Properties */
    sourceVaultProperties?: {
        [propertyName: string]: string;
    };
}

/**
 * Contract to validate if backup can be enabled on the given resource in a given vault and given configuration.
 * It will validate followings
 * 1. Vault capacity
 * 2. VM is already protected
 * 3. Any VM related configuration passed in properties.
 */
export declare interface PreValidateEnableBackupRequest {
    /** ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc */
    resourceType?: DataSourceType;
    /** ARM Virtual Machine Id */
    resourceId?: string;
    /** ARM id of the Recovery Services Vault */
    vaultId?: string;
    /** Configuration of VM if any needs to be validated like OS type etc */
    properties?: string;
}

/** Response contract for enable backup validation request */
export declare interface PreValidateEnableBackupResponse {
    /** Validation Status */
    status?: ValidationStatus;
    /** Response error code */
    errorCode?: string;
    /** Response error message */
    errorMessage?: string;
    /** Recommended action for user */
    recommendation?: string;
    /**
     * Specifies the product specific container name. E.g. iaasvmcontainer;iaasvmcontainer;rgname;vmname. This is required
     * for portal
     */
    containerName?: string;
    /** Specifies the product specific ds name. E.g. vm;iaasvmcontainer;rgname;vmname. This is required for portal */
    protectedItemName?: string;
}

/** The Private Endpoint network resource that is linked to the Private Endpoint connection */
export declare interface PrivateEndpoint {
    /** Gets or sets id */
    id?: string;
}

/** Private Endpoint Connection Response Properties */
export declare interface PrivateEndpointConnection {
    /** Gets or sets provisioning state of the private endpoint connection */
    provisioningState?: ProvisioningState;
    /** Gets or sets private endpoint associated with the private endpoint connection */
    privateEndpoint?: PrivateEndpoint;
    /** Group Ids for the Private Endpoint */
    groupIds?: VaultSubResourceType[];
    /** Gets or sets private link service connection state */
    privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionGetResponse = PrivateEndpointConnectionResource;

/** Interface representing a PrivateEndpointConnectionOperations. */
export declare interface PrivateEndpointConnectionOperations {
    /**
     * Get Private Endpoint Connection. This call is made by Backup Admin.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionGetOptionalParams): Promise<PrivateEndpointConnectionGetResponse>;
    /**
     * Approve or Reject Private Endpoint requests. This call is made by Backup Admin.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginPut(vaultName: string, resourceGroupName: string, privateEndpointConnectionName: string, parameters: PrivateEndpointConnectionResource, options?: PrivateEndpointConnectionPutOptionalParams): Promise<SimplePollerLike<OperationState<PrivateEndpointConnectionPutResponse>, PrivateEndpointConnectionPutResponse>>;
    /**
     * Approve or Reject Private Endpoint requests. This call is made by Backup Admin.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    beginPutAndWait(vaultName: string, resourceGroupName: string, privateEndpointConnectionName: string, parameters: PrivateEndpointConnectionResource, options?: PrivateEndpointConnectionPutOptionalParams): Promise<PrivateEndpointConnectionPutResponse>;
    /**
     * Delete Private Endpoint requests. This call is made by Backup Admin.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDelete(vaultName: string, resourceGroupName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete Private Endpoint requests. This call is made by Backup Admin.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDeleteAndWait(vaultName: string, resourceGroupName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionPutOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the put operation. */
export declare type PrivateEndpointConnectionPutResponse = PrivateEndpointConnectionResource;

/** Private Endpoint Connection Response Properties */
export declare interface PrivateEndpointConnectionResource extends Resource {
    /** PrivateEndpointConnectionResource properties */
    properties?: PrivateEndpointConnection;
}

/**
 * Defines values for PrivateEndpointConnectionStatus. \
 * {@link KnownPrivateEndpointConnectionStatus} can be used interchangeably with PrivateEndpointConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export declare type PrivateEndpointConnectionStatus = string;

/** Optional parameters. */
export declare interface PrivateEndpointGetOperationStatusOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getOperationStatus operation. */
export declare type PrivateEndpointGetOperationStatusResponse = OperationStatus;

/** Interface representing a PrivateEndpointOperations. */
export declare interface PrivateEndpointOperations {
    /**
     * Gets the operation status for a private endpoint connection.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param operationId Operation id
     * @param options The options parameters.
     */
    getOperationStatus(vaultName: string, resourceGroupName: string, privateEndpointConnectionName: string, operationId: string, options?: PrivateEndpointGetOperationStatusOptionalParams): Promise<PrivateEndpointGetOperationStatusResponse>;
}

/** Private Link Service Connection State */
export declare interface PrivateLinkServiceConnectionState {
    /** Gets or sets the status */
    status?: PrivateEndpointConnectionStatus;
    /** Gets or sets description */
    description?: string;
    /** Gets or sets actions required */
    actionsRequired?: string;
}

/** Protectable Container Class. */
export declare interface ProtectableContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableContainerType: "StorageContainer" | "VMAppContainer";
    /** Friendly name of the container. */
    friendlyName?: string;
    /** Type of backup management for the container. */
    backupManagementType?: BackupManagementType;
    /** Status of health of the container. */
    healthStatus?: string;
    /** Fabric Id of the container such as ARM Id. */
    containerId?: string;
}

/** Protectable Container Class. */
export declare interface ProtectableContainerResource extends Resource {
    /** ProtectableContainerResource properties */
    properties?: ProtectableContainerUnion;
}

/** List of ProtectableContainer resources */
export declare interface ProtectableContainerResourceList extends ResourceList {
    /** List of resources. */
    value?: ProtectableContainerResource[];
}

/** Interface representing a ProtectableContainers. */
export declare interface ProtectableContainers {
    /**
     * Lists the containers that can be registered to Recovery Services Vault.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, fabricName: string, options?: ProtectableContainersListOptionalParams): PagedAsyncIterableIterator<ProtectableContainerResource>;
}

/** Optional parameters. */
export declare interface ProtectableContainersListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ProtectableContainersListNextResponse = ProtectableContainerResourceList;

/** Optional parameters. */
export declare interface ProtectableContainersListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type ProtectableContainersListResponse = ProtectableContainerResourceList;

/** Defines values for ProtectableContainerType. */
export declare type ProtectableContainerType = "Invalid" | "Unknown" | "IaasVMContainer" | "IaasVMServiceContainer" | "DPMContainer" | "AzureBackupServerContainer" | "MABContainer" | "Cluster" | "AzureSqlContainer" | "Windows" | "VCenter" | "VMAppContainer" | "SQLAGWorkLoadContainer" | "StorageContainer" | "GenericContainer" | "Microsoft.ClassicCompute/virtualMachines" | "Microsoft.Compute/virtualMachines" | "AzureWorkloadContainer";

export declare type ProtectableContainerUnion = ProtectableContainer | AzureStorageProtectableContainer | AzureVMAppContainerProtectableContainer;

/** Base class for backup items. */
export declare interface ProtectedItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectedItemType: "AzureFileShareProtectedItem" | "AzureIaaSVMProtectedItem" | "Microsoft.ClassicCompute/virtualMachines" | "Microsoft.Compute/virtualMachines" | "Microsoft.Sql/servers/databases" | "AzureVmWorkloadProtectedItem" | "AzureVmWorkloadSAPAseDatabase" | "AzureVmWorkloadSAPHanaDatabase" | "AzureVmWorkloadSAPHanaDBInstance" | "AzureVmWorkloadSQLDatabase" | "DPMProtectedItem" | "GenericProtectedItem" | "MabFileFolderProtectedItem";
    /**
     * Type of backup management for the backed up item.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly backupManagementType?: BackupManagementType;
    /**
     * Type of workload this item represents.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly workloadType?: DataSourceType;
    /** Unique name of container */
    containerName?: string;
    /** ARM ID of the resource to be backed up. */
    sourceResourceId?: string;
    /** ID of the backup policy with which this item is backed up. */
    policyId?: string;
    /** Timestamp when the last (latest) backup copy was created for this backup item. */
    lastRecoveryPoint?: Date;
    /** Name of the backup set the backup item belongs to */
    backupSetName?: string;
    /** Create mode to indicate recovery of existing soft deleted data source or creation of new data source. */
    createMode?: CreateMode;
    /** Time for deferred deletion in UTC */
    deferredDeleteTimeInUTC?: Date;
    /** Flag to identify whether the DS is scheduled for deferred delete */
    isScheduledForDeferredDelete?: boolean;
    /** Time remaining before the DS marked for deferred delete is permanently deleted */
    deferredDeleteTimeRemaining?: string;
    /** Flag to identify whether the deferred deleted DS is to be purged soon */
    isDeferredDeleteScheduleUpcoming?: boolean;
    /** Flag to identify that deferred deleted DS is to be moved into Pause state */
    isRehydrate?: boolean;
    /** ResourceGuardOperationRequests on which LAC check will be performed */
    resourceGuardOperationRequests?: string[];
    /** Flag to identify whether datasource is protected in archive */
    isArchiveEnabled?: boolean;
    /** Name of the policy used for protection */
    policyName?: string;
    /** Soft delete retention period in days */
    softDeleteRetentionPeriodInDays?: number;
}

/**
 * Defines values for ProtectedItemHealthStatus. \
 * {@link KnownProtectedItemHealthStatus} can be used interchangeably with ProtectedItemHealthStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Healthy** \
 * **Unhealthy** \
 * **NotReachable** \
 * **IRPending**
 */
export declare type ProtectedItemHealthStatus = string;

/** Interface representing a ProtectedItemOperationResults. */
export declare interface ProtectedItemOperationResults {
    /**
     * Fetches the result of any operation on the backup item.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backup item.
     * @param containerName Container name associated with the backup item.
     * @param protectedItemName Backup item name whose details are to be fetched.
     * @param operationId OperationID which represents the operation whose result needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: ProtectedItemOperationResultsGetOptionalParams): Promise<ProtectedItemOperationResultsGetResponse>;
}

/** Optional parameters. */
export declare interface ProtectedItemOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProtectedItemOperationResultsGetResponse = ProtectedItemResource;

/** Interface representing a ProtectedItemOperationStatuses. */
export declare interface ProtectedItemOperationStatuses {
    /**
     * Fetches the status of an operation such as triggering a backup, restore. The status can be in
     * progress, completed
     * or failed. You can refer to the OperationStatus enum for all the possible states of the operation.
     * Some operations
     * create jobs. This method returns the list of jobs associated with the operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backup item.
     * @param containerName Container name associated with the backup item.
     * @param protectedItemName Backup item name whose details are to be fetched.
     * @param operationId OperationID represents the operation whose status needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: ProtectedItemOperationStatusesGetOptionalParams): Promise<ProtectedItemOperationStatusesGetResponse>;
}

/** Optional parameters. */
export declare interface ProtectedItemOperationStatusesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProtectedItemOperationStatusesGetResponse = OperationStatus;

/** Filters to list backup items. */
export declare interface ProtectedItemQueryObject {
    /** Health State for the backed up item. */
    healthState?: HealthState;
    /** Backup management type for the backed up item. */
    backupManagementType?: BackupManagementType;
    /** Type of workload this item represents. */
    itemType?: DataSourceType;
    /** Backup policy name associated with the backup item. */
    policyName?: string;
    /** Name of the container. */
    containerName?: string;
    /** Backup Engine name */
    backupEngineName?: string;
    /** Friendly name of protected item */
    friendlyName?: string;
    /** Name of the fabric. */
    fabricName?: string;
    /** Name of the backup set. */
    backupSetName?: string;
}

/** Base class for backup items. */
export declare interface ProtectedItemResource extends Resource {
    /** ProtectedItemResource properties */
    properties?: ProtectedItemUnion;
}

/** List of ProtectedItem resources */
export declare interface ProtectedItemResourceList extends ResourceList {
    /** List of resources. */
    value?: ProtectedItemResource[];
}

/** Interface representing a ProtectedItems. */
export declare interface ProtectedItems {
    /**
     * Provides the details of the backed up item. This is an asynchronous operation. To know the status of
     * the operation,
     * call the GetItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up item.
     * @param containerName Container name associated with the backed up item.
     * @param protectedItemName Backed up item name whose details are to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: ProtectedItemsGetOptionalParams): Promise<ProtectedItemsGetResponse>;
    /**
     * Enables backup of an item or to modifies the backup policy information of an already backed up item.
     * This is an
     * asynchronous operation. To know the status of the operation, call the GetItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backup item.
     * @param containerName Container name associated with the backup item.
     * @param protectedItemName Item name to be backed up.
     * @param parameters resource backed up item
     * @param options The options parameters.
     */
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: ProtectedItemResource, options?: ProtectedItemsCreateOrUpdateOptionalParams): Promise<ProtectedItemsCreateOrUpdateResponse>;
    /**
     * Used to disable backup of an item within a container. This is an asynchronous operation. To know the
     * status of the
     * request, call the GetItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up item.
     * @param containerName Container name associated with the backed up item.
     * @param protectedItemName Backed up item to be deleted.
     * @param options The options parameters.
     */
    delete(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: ProtectedItemsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface ProtectedItemsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type ProtectedItemsCreateOrUpdateResponse = ProtectedItemResource;

/** Optional parameters. */
export declare interface ProtectedItemsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ProtectedItemsGetOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/** Contains response data for the get operation. */
export declare type ProtectedItemsGetResponse = ProtectedItemResource;

/**
 * Defines values for ProtectedItemState. \
 * {@link KnownProtectedItemState} can be used interchangeably with ProtectedItemState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **IRPending** \
 * **Protected** \
 * **ProtectionError** \
 * **ProtectionStopped** \
 * **ProtectionPaused** \
 * **BackupsSuspended**
 */
export declare type ProtectedItemState = string;

export declare type ProtectedItemUnion = ProtectedItem | AzureFileshareProtectedItem | AzureIaaSVMProtectedItemUnion | AzureSqlProtectedItem | AzureVmWorkloadProtectedItemUnion | DPMProtectedItem | GenericProtectedItem | MabFileFolderProtectedItem;

/** Base class for container with backup items. Containers with specific workloads are derived from this class. */
export declare interface ProtectionContainer {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    containerType: "DPMContainer" | "AzureBackupServerContainer" | "IaasVMContainer" | "Microsoft.ClassicCompute/virtualMachines" | "Microsoft.Compute/virtualMachines" | "AzureWorkloadContainer" | "SQLAGWorkLoadContainer" | "AzureSqlContainer" | "StorageContainer" | "VMAppContainer" | "GenericContainer" | "Windows";
    /** Friendly name of the container. */
    friendlyName?: string;
    /** Type of backup management for the container. */
    backupManagementType?: BackupManagementType;
    /** Status of registration of the container with the Recovery Services Vault. */
    registrationStatus?: string;
    /** Status of health of the container. */
    healthStatus?: string;
    /** Type of the protectable object associated with this container */
    protectableObjectType?: string;
}

/** Interface representing a ProtectionContainerOperationResults. */
export declare interface ProtectionContainerOperationResults {
    /**
     * Fetches the result of any operation on the container.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the container.
     * @param containerName Container name whose information should be fetched.
     * @param operationId Operation ID which represents the operation whose result needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, options?: ProtectionContainerOperationResultsGetOptionalParams): Promise<ProtectionContainerOperationResultsGetResponse>;
}

/** Optional parameters. */
export declare interface ProtectionContainerOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProtectionContainerOperationResultsGetResponse = ProtectionContainerResource;

/** Interface representing a ProtectionContainerRefreshOperationResults. */
export declare interface ProtectionContainerRefreshOperationResults {
    /**
     * Provides the result of the refresh operation triggered by the BeginRefresh operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the container.
     * @param operationId Operation ID associated with the operation whose result needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, options?: ProtectionContainerRefreshOperationResultsGetOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface ProtectionContainerRefreshOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Base class for container with backup items. Containers with specific workloads are derived from this class. */
export declare interface ProtectionContainerResource extends Resource {
    /** ProtectionContainerResource properties */
    properties?: ProtectionContainerUnion;
}

/** List of ProtectionContainer resources */
export declare interface ProtectionContainerResourceList extends ResourceList {
    /** List of resources. */
    value?: ProtectionContainerResource[];
}

/** Interface representing a ProtectionContainers. */
export declare interface ProtectionContainers {
    /**
     * Gets details of the specific container registered to your Recovery Services Vault.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Name of the fabric where the container belongs.
     * @param containerName Name of the container whose details need to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: ProtectionContainersGetOptionalParams): Promise<ProtectionContainersGetResponse>;
    /**
     * Registers the container with Recovery Services vault.
     * This is an asynchronous operation. To track the operation status, use location header to call get
     * latest status of
     * the operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the container.
     * @param containerName Name of the container to be registered.
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    register(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, parameters: ProtectionContainerResource, options?: ProtectionContainersRegisterOptionalParams): Promise<ProtectionContainersRegisterResponse>;
    /**
     * Unregisters the given container from your Recovery Services Vault. This is an asynchronous
     * operation. To determine
     * whether the backend service has finished processing the request, call Get Container Operation Result
     * API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Name of the fabric where the container belongs.
     * @param containerName Name of the container which needs to be unregistered from the Recovery Services
     *                      Vault.
     * @param options The options parameters.
     */
    unregister(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: ProtectionContainersUnregisterOptionalParams): Promise<void>;
    /**
     * This is an async operation and the results should be tracked using location header or
     * Azure-async-url.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric Name associated with the container.
     * @param containerName Name of the container in which inquiry needs to be triggered.
     * @param options The options parameters.
     */
    inquire(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: ProtectionContainersInquireOptionalParams): Promise<void>;
    /**
     * Discovers all the containers in the subscription that can be backed up to Recovery Services Vault.
     * This is an
     * asynchronous operation. To know the status of the operation, call GetRefreshOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated the container.
     * @param options The options parameters.
     */
    refresh(vaultName: string, resourceGroupName: string, fabricName: string, options?: ProtectionContainersRefreshOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface ProtectionContainersGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProtectionContainersGetResponse = ProtectionContainerResource;

/** Optional parameters. */
export declare interface ProtectionContainersInquireOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/** Optional parameters. */
export declare interface ProtectionContainersRefreshOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/** Optional parameters. */
export declare interface ProtectionContainersRegisterOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the register operation. */
export declare type ProtectionContainersRegisterResponse = ProtectionContainerResource;

/** Optional parameters. */
export declare interface ProtectionContainersUnregisterOptionalParams extends coreClient.OperationOptions {
}

export declare type ProtectionContainerUnion = ProtectionContainer | DpmContainerUnion | IaaSVMContainerUnion | AzureWorkloadContainerUnion | AzureSqlContainer | AzureStorageContainer | GenericContainer | MabContainer;

/** Base class for backup ProtectionIntent. */
export declare interface ProtectionIntent {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectionIntentItemType: "RecoveryServiceVaultItem" | "AzureResourceItem" | "AzureWorkloadContainerAutoProtectionIntent" | "AzureWorkloadAutoProtectionIntent" | "AzureWorkloadSQLAutoProtectionIntent";
    /** Type of backup management for the backed up item. */
    backupManagementType?: BackupManagementType;
    /** ARM ID of the resource to be backed up. */
    sourceResourceId?: string;
    /** ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId */
    itemId?: string;
    /** ID of the backup policy with which this item is backed up. */
    policyId?: string;
    /** Backup state of this backup item. */
    protectionState?: ProtectionStatus;
}

/** Optional parameters. */
export declare interface ProtectionIntentCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type ProtectionIntentCreateOrUpdateResponse = ProtectionIntentResource;

/** Optional parameters. */
export declare interface ProtectionIntentDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ProtectionIntentGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProtectionIntentGetResponse = ProtectionIntentResource;

/**
 * Defines values for ProtectionIntentItemType. \
 * {@link KnownProtectionIntentItemType} can be used interchangeably with ProtectionIntentItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AzureResourceItem** \
 * **RecoveryServiceVaultItem** \
 * **AzureWorkloadContainerAutoProtectionIntent** \
 * **AzureWorkloadAutoProtectionIntent** \
 * **AzureWorkloadSQLAutoProtectionIntent**
 */
export declare type ProtectionIntentItemType = string;

/** Interface representing a ProtectionIntentOperations. */
export declare interface ProtectionIntentOperations {
    /**
     * It will validate followings
     * 1. Vault capacity
     * 2. VM is already protected
     * 3. Any VM related configuration passed in properties.
     * @param azureRegion Azure region to hit Api
     * @param parameters Enable backup validation request on Virtual Machine
     * @param options The options parameters.
     */
    validate(azureRegion: string, parameters: PreValidateEnableBackupRequest, options?: ProtectionIntentValidateOptionalParams): Promise<ProtectionIntentValidateResponse>;
    /**
     * Provides the details of the protection intent up item. This is an asynchronous operation. To know
     * the status of the operation,
     * call the GetItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up item.
     * @param intentObjectName Backed up item name whose details are to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: ProtectionIntentGetOptionalParams): Promise<ProtectionIntentGetResponse>;
    /**
     * Create Intent for Enabling backup of an item. This is a synchronous operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backup item.
     * @param intentObjectName Intent object name.
     * @param parameters resource backed up item
     * @param options The options parameters.
     */
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: ProtectionIntentResource, options?: ProtectionIntentCreateOrUpdateOptionalParams): Promise<ProtectionIntentCreateOrUpdateResponse>;
    /**
     * Used to remove intent from an item
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the intent.
     * @param intentObjectName Intent to be deleted.
     * @param options The options parameters.
     */
    delete(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: ProtectionIntentDeleteOptionalParams): Promise<void>;
}

/** Filters to list protection intent. */
export declare interface ProtectionIntentQueryObject {
    /** Backup management type for the backed up item */
    backupManagementType?: BackupManagementType;
    /** Type of workload this item represents */
    itemType?: IntentItemType;
    /** Parent name of the intent */
    parentName?: string;
    /** Item name of the intent */
    itemName?: string;
}

/** Base class for backup ProtectionIntent. */
export declare interface ProtectionIntentResource extends Resource {
    /** ProtectionIntentResource properties */
    properties?: ProtectionIntentUnion;
}

/** List of ProtectionIntent resources */
export declare interface ProtectionIntentResourceList extends ResourceList {
    /** List of resources. */
    value?: ProtectionIntentResource[];
}

export declare type ProtectionIntentUnion = ProtectionIntent | AzureRecoveryServiceVaultProtectionIntentUnion | AzureResourceProtectionIntent | AzureWorkloadContainerAutoProtectionIntent;

/** Optional parameters. */
export declare interface ProtectionIntentValidateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the validate operation. */
export declare type ProtectionIntentValidateResponse = PreValidateEnableBackupResponse;

/** Interface representing a ProtectionPolicies. */
export declare interface ProtectionPolicies {
    /**
     * Provides the details of the backup policies associated to Recovery Services Vault. This is an
     * asynchronous
     * operation. Status of the operation can be fetched using GetPolicyOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Backup policy information to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, options?: ProtectionPoliciesGetOptionalParams): Promise<ProtectionPoliciesGetResponse>;
    /**
     * Creates or modifies a backup policy. This is an asynchronous operation. Status of the operation can
     * be fetched
     * using GetPolicyOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Backup policy to be created.
     * @param parameters resource backup policy
     * @param options The options parameters.
     */
    createOrUpdate(vaultName: string, resourceGroupName: string, policyName: string, parameters: ProtectionPolicyResource, options?: ProtectionPoliciesCreateOrUpdateOptionalParams): Promise<ProtectionPoliciesCreateOrUpdateResponse>;
    /**
     * Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous
     * operation. Status of the
     * operation can be fetched using GetProtectionPolicyOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Backup policy to be deleted.
     * @param options The options parameters.
     */
    beginDelete(vaultName: string, resourceGroupName: string, policyName: string, options?: ProtectionPoliciesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous
     * operation. Status of the
     * operation can be fetched using GetProtectionPolicyOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Backup policy to be deleted.
     * @param options The options parameters.
     */
    beginDeleteAndWait(vaultName: string, resourceGroupName: string, policyName: string, options?: ProtectionPoliciesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface ProtectionPoliciesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type ProtectionPoliciesCreateOrUpdateResponse = ProtectionPolicyResource;

/** Optional parameters. */
export declare interface ProtectionPoliciesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ProtectionPoliciesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProtectionPoliciesGetResponse = ProtectionPolicyResource;

/** Base class for backup policy. Workload-specific backup policies are derived from this class. */
export declare interface ProtectionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    backupManagementType: "AzureWorkload" | "AzureStorage" | "AzureIaasVM" | "AzureSql" | "GenericProtectionPolicy" | "MAB";
    /** Number of items associated with this policy. */
    protectedItemsCount?: number;
    /** ResourceGuard Operation Requests */
    resourceGuardOperationRequests?: string[];
}

/** Interface representing a ProtectionPolicyOperationResults. */
export declare interface ProtectionPolicyOperationResults {
    /**
     * Provides the result of an operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Backup policy name whose operation's result needs to be fetched.
     * @param operationId Operation ID which represents the operation whose result needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: ProtectionPolicyOperationResultsGetOptionalParams): Promise<ProtectionPolicyOperationResultsGetResponse>;
}

/** Optional parameters. */
export declare interface ProtectionPolicyOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProtectionPolicyOperationResultsGetResponse = ProtectionPolicyResource;

/** Interface representing a ProtectionPolicyOperationStatuses. */
export declare interface ProtectionPolicyOperationStatuses {
    /**
     * Provides the status of the asynchronous operations like backup, restore. The status can be in
     * progress, completed
     * or failed. You can refer to the Operation Status enum for all the possible states of an operation.
     * Some operations
     * create jobs. This method returns the list of jobs associated with operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Backup policy name whose operation's status needs to be fetched.
     * @param operationId Operation ID which represents an operation whose status needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: ProtectionPolicyOperationStatusesGetOptionalParams): Promise<ProtectionPolicyOperationStatusesGetResponse>;
}

/** Optional parameters. */
export declare interface ProtectionPolicyOperationStatusesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ProtectionPolicyOperationStatusesGetResponse = OperationStatus;

/** Filters the list backup policies API. */
export declare interface ProtectionPolicyQueryObject {
    /** Backup management type for the backup policy. */
    backupManagementType?: BackupManagementType;
    /** Fabric name for filter */
    fabricName?: string;
    /** Workload type for the backup policy. */
    workloadType?: WorkloadType;
}

/** Base class for backup policy. Workload-specific backup policies are derived from this class. */
export declare interface ProtectionPolicyResource extends Resource {
    /** ProtectionPolicyResource properties */
    properties?: ProtectionPolicyUnion;
}

/** List of ProtectionPolicy resources */
export declare interface ProtectionPolicyResourceList extends ResourceList {
    /** List of resources. */
    value?: ProtectionPolicyResource[];
}

export declare type ProtectionPolicyUnion = ProtectionPolicy | AzureVmWorkloadProtectionPolicy | AzureFileShareProtectionPolicy | AzureIaaSVMProtectionPolicy | AzureSqlProtectionPolicy | GenericProtectionPolicy | MabProtectionPolicy;

/**
 * Defines values for ProtectionState. \
 * {@link KnownProtectionState} can be used interchangeably with ProtectionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **IRPending** \
 * **Protected** \
 * **ProtectionError** \
 * **ProtectionStopped** \
 * **ProtectionPaused** \
 * **BackupsSuspended**
 */
export declare type ProtectionState = string;

/**
 * Defines values for ProtectionStatus. \
 * {@link KnownProtectionStatus} can be used interchangeably with ProtectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **NotProtected** \
 * **Protecting** \
 * **Protected** \
 * **ProtectionFailed**
 */
export declare type ProtectionStatus = string;

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Deleting** \
 * **Failed** \
 * **Pending**
 */
export declare type ProvisioningState = string;

/**
 * Defines values for RecoveryMode. \
 * {@link KnownRecoveryMode} can be used interchangeably with RecoveryMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **FileRecovery** \
 * **WorkloadRecovery**
 */
export declare type RecoveryMode = string;

/** Base class for backup copies. Workload-specific backup copies are derived from this class. */
export declare interface RecoveryPoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureFileShareRecoveryPoint" | "AzureWorkloadRecoveryPoint" | "AzureWorkloadPointInTimeRecoveryPoint" | "AzureWorkloadSAPHanaPointInTimeRecoveryPoint" | "AzureWorkloadSAPHanaRecoveryPoint" | "AzureWorkloadSQLRecoveryPoint" | "AzureWorkloadSQLPointInTimeRecoveryPoint" | "GenericRecoveryPoint" | "IaasVMRecoveryPoint";
}

/** Disk configuration */
export declare interface RecoveryPointDiskConfiguration {
    /** Number of disks included in backup */
    numberOfDisksIncludedInBackup?: number;
    /** Number of disks attached to the VM */
    numberOfDisksAttachedToVm?: number;
    /** Information of disks included in backup */
    includedDiskList?: DiskInformation[];
    /** Information of disks excluded from backup */
    excludedDiskList?: DiskInformation[];
}

export declare interface RecoveryPointMoveReadinessInfo {
    isReadyForMove?: boolean;
    additionalInfo?: string;
}

/** Properties of Recovery Point */
export declare interface RecoveryPointProperties {
    /** Expiry time of Recovery Point in UTC. */
    expiryTime?: string;
    /** Rule name tagged on Recovery Point that governs life cycle */
    ruleName?: string;
    /** Bool to indicate whether RP is in soft delete state or not */
    isSoftDeleted?: boolean;
}

/** RP Rehydration Info */
export declare interface RecoveryPointRehydrationInfo {
    /**
     * How long the rehydrated RP should be kept
     * Should be ISO8601 Duration format e.g. "P7D"
     */
    rehydrationRetentionDuration?: string;
    /** Rehydration Priority */
    rehydrationPriority?: RehydrationPriority;
}

/** Base class for backup copies. Workload-specific backup copies are derived from this class. */
export declare interface RecoveryPointResource extends Resource {
    /** RecoveryPointResource properties */
    properties?: RecoveryPointUnion;
}

/** List of RecoveryPoint resources */
export declare interface RecoveryPointResourceList extends ResourceList {
    /** List of resources. */
    value?: RecoveryPointResource[];
}

/** Interface representing a RecoveryPoints. */
export declare interface RecoveryPoints {
    /**
     * Lists the backup copies for the backed up item.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up item.
     * @param containerName Container name associated with the backed up item.
     * @param protectedItemName Backed up item whose backup copies are to be fetched.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: RecoveryPointsListOptionalParams): PagedAsyncIterableIterator<RecoveryPointResource>;
    /**
     * Provides the information of the backed up data identified using RecoveryPointID. This is an
     * asynchronous operation.
     * To know the status of the operation, call the GetProtectedItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with backed up item.
     * @param containerName Container name associated with backed up item.
     * @param protectedItemName Backed up item name whose backup data needs to be fetched.
     * @param recoveryPointId RecoveryPointID represents the backed up data to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: RecoveryPointsGetOptionalParams): Promise<RecoveryPointsGetResponse>;
}

/** Optional parameters. */
export declare interface RecoveryPointsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RecoveryPointsGetResponse = RecoveryPointResource;

/** Optional parameters. */
export declare interface RecoveryPointsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type RecoveryPointsListNextResponse = RecoveryPointResourceList;

/** Optional parameters. */
export declare interface RecoveryPointsListOptionalParams extends coreClient.OperationOptions {
    /** OData filter options. */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type RecoveryPointsListResponse = RecoveryPointResourceList;

/** Interface representing a RecoveryPointsRecommendedForMove. */
export declare interface RecoveryPointsRecommendedForMove {
    /**
     * Lists the recovery points recommended for move to another tier
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName
     * @param containerName
     * @param protectedItemName
     * @param parameters List Recovery points Recommended for Move Request
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: ListRecoveryPointsRecommendedForMoveRequest, options?: RecoveryPointsRecommendedForMoveListOptionalParams): PagedAsyncIterableIterator<RecoveryPointResource>;
}

/** Optional parameters. */
export declare interface RecoveryPointsRecommendedForMoveListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type RecoveryPointsRecommendedForMoveListNextResponse = RecoveryPointResourceList;

/** Optional parameters. */
export declare interface RecoveryPointsRecommendedForMoveListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type RecoveryPointsRecommendedForMoveListResponse = RecoveryPointResourceList;

/** Recovery point tier information. */
export declare interface RecoveryPointTierInformation {
    /** Recovery point tier type. */
    type?: RecoveryPointTierType;
    /** Recovery point tier status. */
    status?: RecoveryPointTierStatus;
    /** Recovery point tier status. */
    extendedInfo?: {
        [propertyName: string]: string;
    };
}

/** RecoveryPoint Tier Information V2 */
export declare interface RecoveryPointTierInformationV2 extends RecoveryPointTierInformation {
}

/** Defines values for RecoveryPointTierStatus. */
export declare type RecoveryPointTierStatus = "Invalid" | "Valid" | "Disabled" | "Deleted" | "Rehydrated";

/** Defines values for RecoveryPointTierType. */
export declare type RecoveryPointTierType = "Invalid" | "InstantRP" | "HardenedRP" | "ArchivedRP";

export declare type RecoveryPointUnion = RecoveryPoint | AzureFileShareRecoveryPoint | AzureWorkloadRecoveryPointUnion | GenericRecoveryPoint | IaasVMRecoveryPoint;

export declare class RecoveryServicesBackupClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the RecoveryServicesBackupClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription Id.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: RecoveryServicesBackupClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Fetches operation status for data move operation on vault
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId
     * @param options The options parameters.
     */
    getOperationStatus(vaultName: string, resourceGroupName: string, operationId: string, options?: GetOperationStatusOptionalParams): Promise<GetOperationStatusResponse>;
    /**
     * Prepares source vault for Data Move operation
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters Prepare data move request
     * @param options The options parameters.
     */
    beginBMSPrepareDataMove(vaultName: string, resourceGroupName: string, parameters: PrepareDataMoveRequest, options?: BMSPrepareDataMoveOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Prepares source vault for Data Move operation
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters Prepare data move request
     * @param options The options parameters.
     */
    beginBMSPrepareDataMoveAndWait(vaultName: string, resourceGroupName: string, parameters: PrepareDataMoveRequest, options?: BMSPrepareDataMoveOptionalParams): Promise<void>;
    /**
     * Triggers Data Move Operation on target vault
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters Trigger data move request
     * @param options The options parameters.
     */
    beginBMSTriggerDataMove(vaultName: string, resourceGroupName: string, parameters: TriggerDataMoveRequest, options?: BMSTriggerDataMoveOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Triggers Data Move Operation on target vault
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters Trigger data move request
     * @param options The options parameters.
     */
    beginBMSTriggerDataMoveAndWait(vaultName: string, resourceGroupName: string, parameters: TriggerDataMoveRequest, options?: BMSTriggerDataMoveOptionalParams): Promise<void>;
    /**
     * Move recovery point from one datastore to another store.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName
     * @param containerName
     * @param protectedItemName
     * @param recoveryPointId
     * @param parameters Move Resource Across Tiers Request
     * @param options The options parameters.
     */
    beginMoveRecoveryPoint(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: MoveRPAcrossTiersRequest, options?: MoveRecoveryPointOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Move recovery point from one datastore to another store.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName
     * @param containerName
     * @param protectedItemName
     * @param recoveryPointId
     * @param parameters Move Resource Across Tiers Request
     * @param options The options parameters.
     */
    beginMoveRecoveryPointAndWait(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: MoveRPAcrossTiersRequest, options?: MoveRecoveryPointOptionalParams): Promise<void>;
    backupResourceStorageConfigsNonCRR: BackupResourceStorageConfigsNonCRR;
    protectionIntentOperations: ProtectionIntentOperations;
    backupStatus: BackupStatus;
    featureSupport: FeatureSupport;
    backupProtectionIntent: BackupProtectionIntent;
    backupUsageSummaries: BackupUsageSummaries;
    operations: Operations;
    backupResourceVaultConfigs: BackupResourceVaultConfigs;
    backupResourceEncryptionConfigs: BackupResourceEncryptionConfigs;
    privateEndpointConnectionOperations: PrivateEndpointConnectionOperations;
    privateEndpointOperations: PrivateEndpointOperations;
    bMSPrepareDataMoveOperationResult: BMSPrepareDataMoveOperationResult;
    protectedItems: ProtectedItems;
    protectedItemOperationResults: ProtectedItemOperationResults;
    recoveryPoints: RecoveryPoints;
    restores: Restores;
    backupPolicies: BackupPolicies;
    protectionPolicies: ProtectionPolicies;
    protectionPolicyOperationResults: ProtectionPolicyOperationResults;
    backupJobs: BackupJobs;
    jobDetails: JobDetails;
    jobCancellations: JobCancellations;
    jobOperationResults: JobOperationResults;
    exportJobsOperationResults: ExportJobsOperationResults;
    jobs: Jobs;
    backupProtectedItems: BackupProtectedItems;
    operation: Operation;
    validateOperation: ValidateOperation;
    validateOperationResults: ValidateOperationResults;
    validateOperationStatuses: ValidateOperationStatuses;
    backupEngines: BackupEngines;
    protectionContainerRefreshOperationResults: ProtectionContainerRefreshOperationResults;
    protectableContainers: ProtectableContainers;
    protectionContainers: ProtectionContainers;
    backupWorkloadItems: BackupWorkloadItems;
    protectionContainerOperationResults: ProtectionContainerOperationResults;
    backups: Backups;
    protectedItemOperationStatuses: ProtectedItemOperationStatuses;
    itemLevelRecoveryConnections: ItemLevelRecoveryConnections;
    backupOperationResults: BackupOperationResults;
    backupOperationStatuses: BackupOperationStatuses;
    protectionPolicyOperationStatuses: ProtectionPolicyOperationStatuses;
    backupProtectableItems: BackupProtectableItems;
    backupProtectionContainers: BackupProtectionContainers;
    deletedProtectionContainers: DeletedProtectionContainers;
    securityPINs: SecurityPINs;
    recoveryPointsRecommendedForMove: RecoveryPointsRecommendedForMove;
    resourceGuardProxies: ResourceGuardProxies;
    resourceGuardProxy: ResourceGuardProxy;
}

/** Optional parameters. */
export declare interface RecoveryServicesBackupClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/**
 * Defines values for RecoveryType. \
 * {@link KnownRecoveryType} can be used interchangeably with RecoveryType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **OriginalLocation** \
 * **AlternateLocation** \
 * **RestoreDisks** \
 * **Offline**
 */
export declare type RecoveryType = string;

/**
 * Defines values for RehydrationPriority. \
 * {@link KnownRehydrationPriority} can be used interchangeably with RehydrationPriority,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard** \
 * **High**
 */
export declare type RehydrationPriority = string;

/** ARM Resource. */
export declare interface Resource {
    /**
     * Resource Id represents the complete path to the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Resource name associated with the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** Resource location. */
    location?: string;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Optional ETag. */
    eTag?: string;
}

export declare interface ResourceGuardOperationDetail {
    vaultCriticalOperation?: string;
    defaultResourceRequest?: string;
}

/** Interface representing a ResourceGuardProxies. */
export declare interface ResourceGuardProxies {
    /**
     * List the ResourceGuardProxies under vault
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    list(vaultName: string, resourceGroupName: string, options?: ResourceGuardProxiesGetOptionalParams): PagedAsyncIterableIterator<ResourceGuardProxyBaseResource>;
}

/** Optional parameters. */
export declare interface ResourceGuardProxiesGetNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getNext operation. */
export declare type ResourceGuardProxiesGetNextResponse = ResourceGuardProxyBaseResourceList;

/** Optional parameters. */
export declare interface ResourceGuardProxiesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ResourceGuardProxiesGetResponse = ResourceGuardProxyBaseResourceList;

/** Interface representing a ResourceGuardProxy. */
export declare interface ResourceGuardProxy {
    /**
     * Returns ResourceGuardProxy under vault and with the name referenced in request
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param resourceGuardProxyName
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, resourceGuardProxyName: string, options?: ResourceGuardProxyGetOptionalParams): Promise<ResourceGuardProxyGetResponse>;
    /**
     * Add or Update ResourceGuardProxy under vault
     * Secures vault critical operations
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param resourceGuardProxyName
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    put(vaultName: string, resourceGroupName: string, resourceGuardProxyName: string, parameters: ResourceGuardProxyBaseResource, options?: ResourceGuardProxyPutOptionalParams): Promise<ResourceGuardProxyPutResponse>;
    /**
     * Delete ResourceGuardProxy under vault
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param resourceGuardProxyName
     * @param options The options parameters.
     */
    delete(vaultName: string, resourceGroupName: string, resourceGuardProxyName: string, options?: ResourceGuardProxyDeleteOptionalParams): Promise<void>;
    /**
     * Secures delete ResourceGuardProxy operations.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param resourceGuardProxyName
     * @param parameters Request body for operation
     * @param options The options parameters.
     */
    unlockDelete(vaultName: string, resourceGroupName: string, resourceGuardProxyName: string, parameters: UnlockDeleteRequest, options?: ResourceGuardProxyUnlockDeleteOptionalParams): Promise<ResourceGuardProxyUnlockDeleteResponse>;
}

export declare interface ResourceGuardProxyBase {
    resourceGuardResourceId?: string;
    resourceGuardOperationDetails?: ResourceGuardOperationDetail[];
    lastUpdatedTime?: string;
    description?: string;
}

export declare interface ResourceGuardProxyBaseResource extends Resource {
    /** ResourceGuardProxyBaseResource properties */
    properties?: ResourceGuardProxyBase;
}

/** List of ResourceGuardProxyBase resources */
export declare interface ResourceGuardProxyBaseResourceList extends ResourceList {
    /** List of resources. */
    value?: ResourceGuardProxyBaseResource[];
}

/** Optional parameters. */
export declare interface ResourceGuardProxyDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ResourceGuardProxyGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ResourceGuardProxyGetResponse = ResourceGuardProxyBaseResource;

/** Optional parameters. */
export declare interface ResourceGuardProxyPutOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the put operation. */
export declare type ResourceGuardProxyPutResponse = ResourceGuardProxyBaseResource;

/** Optional parameters. */
export declare interface ResourceGuardProxyUnlockDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the unlockDelete operation. */
export declare type ResourceGuardProxyUnlockDeleteResponse = UnlockDeleteResponse;

/** Health Details for backup items. */
export declare interface ResourceHealthDetails {
    /**
     * Health Code
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: number;
    /**
     * Health Title
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly title?: string;
    /**
     * Health Message
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * Health Recommended Actions
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly recommendations?: string[];
}

/**
 * Defines values for ResourceHealthStatus. \
 * {@link KnownResourceHealthStatus} can be used interchangeably with ResourceHealthStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Healthy** \
 * **TransientDegraded** \
 * **PersistentDegraded** \
 * **TransientUnhealthy** \
 * **PersistentUnhealthy** \
 * **Invalid**
 */
export declare type ResourceHealthStatus = string;

/** Base for all lists of resources. */
export declare interface ResourceList {
    /** The uri to fetch the next page of resources. Call ListNext() fetches next page of resources. */
    nextLink?: string;
}

/** Restore file specs like file path, type and target folder path info. */
export declare interface RestoreFileSpecs {
    /** Source File/Folder path */
    path?: string;
    /** Indicates what the Path variable stands for */
    fileSpecType?: string;
    /** Destination folder path in target FileShare */
    targetFolderPath?: string;
}

/**
 * Defines values for RestorePointQueryType. \
 * {@link KnownRestorePointQueryType} can be used interchangeably with RestorePointQueryType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Full** \
 * **Log** \
 * **Differential** \
 * **FullAndDifferential** \
 * **All** \
 * **Incremental** \
 * **SnapshotFull** \
 * **SnapshotCopyOnlyFull**
 */
export declare type RestorePointQueryType = string;

/**
 * Defines values for RestorePointType. \
 * {@link KnownRestorePointType} can be used interchangeably with RestorePointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Full** \
 * **Log** \
 * **Differential** \
 * **Incremental** \
 * **SnapshotFull** \
 * **SnapshotCopyOnlyFull**
 */
export declare type RestorePointType = string;

/** Base class for restore request. Workload-specific restore requests are derived from this class. */
export declare interface RestoreRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "AzureFileShareRestoreRequest" | "AzureWorkloadRestoreRequest" | "AzureWorkloadPointInTimeRestoreRequest" | "AzureWorkloadSAPHanaRestoreRequest" | "AzureWorkloadSAPHanaPointInTimeRestoreRequest" | "AzureWorkloadSQLRestoreRequest" | "AzureWorkloadSQLPointInTimeRestoreRequest" | "IaasVMRestoreRequest" | "AzureWorkloadSAPHanaPointInTimeRestoreWithRehydrateRequest" | "AzureWorkloadSAPHanaRestoreWithRehydrateRequest" | "AzureWorkloadSQLPointInTimeRestoreWithRehydrateRequest" | "AzureWorkloadSQLRestoreWithRehydrateRequest" | "IaasVMRestoreWithRehydrationRequest";
}

/** Base class for restore request. Workload-specific restore requests are derived from this class. */
export declare interface RestoreRequestResource extends Resource {
    /** RestoreRequestResource properties */
    properties?: RestoreRequestUnion;
}

/**
 * Defines values for RestoreRequestType. \
 * {@link KnownRestoreRequestType} can be used interchangeably with RestoreRequestType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **FullShareRestore** \
 * **ItemLevelRestore**
 */
export declare type RestoreRequestType = string;

export declare type RestoreRequestUnion = RestoreRequest | AzureFileShareRestoreRequest | AzureWorkloadRestoreRequestUnion | IaasVMRestoreRequestUnion;

/** Interface representing a Restores. */
export declare interface Restores {
    /**
     * Restores the specified backed up data. This is an asynchronous operation. To know the status of this
     * API call, use
     * GetProtectedItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up items.
     * @param containerName Container name associated with the backed up items.
     * @param protectedItemName Backed up item to be restored.
     * @param recoveryPointId Recovery point ID which represents the backed up data to be restored.
     * @param parameters resource restore request
     * @param options The options parameters.
     */
    beginTrigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: RestoreRequestResource, options?: RestoresTriggerOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Restores the specified backed up data. This is an asynchronous operation. To know the status of this
     * API call, use
     * GetProtectedItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up items.
     * @param containerName Container name associated with the backed up items.
     * @param protectedItemName Backed up item to be restored.
     * @param recoveryPointId Recovery point ID which represents the backed up data to be restored.
     * @param parameters resource restore request
     * @param options The options parameters.
     */
    beginTriggerAndWait(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: RestoreRequestResource, options?: RestoresTriggerOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface RestoresTriggerOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Retention duration. */
export declare interface RetentionDuration {
    /**
     * Count of duration types. Retention duration is obtained by the counting the duration type Count times.
     * For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
     */
    count?: number;
    /** Retention duration type of retention policy. */
    durationType?: RetentionDurationType;
}

/**
 * Defines values for RetentionDurationType. \
 * {@link KnownRetentionDurationType} can be used interchangeably with RetentionDurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Days** \
 * **Weeks** \
 * **Months** \
 * **Years**
 */
export declare type RetentionDurationType = string;

/** Base class for retention policy. */
export declare interface RetentionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    retentionPolicyType: "LongTermRetentionPolicy" | "SimpleRetentionPolicy";
}

export declare type RetentionPolicyUnion = RetentionPolicy | LongTermRetentionPolicy | SimpleRetentionPolicy;

/**
 * Defines values for RetentionScheduleFormat. \
 * {@link KnownRetentionScheduleFormat} can be used interchangeably with RetentionScheduleFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Daily** \
 * **Weekly**
 */
export declare type RetentionScheduleFormat = string;

/** Base class for backup schedule. */
export declare interface SchedulePolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    schedulePolicyType: "LogSchedulePolicy" | "LongTermSchedulePolicy" | "SimpleSchedulePolicy" | "SimpleSchedulePolicyV2";
}

export declare type SchedulePolicyUnion = SchedulePolicy | LogSchedulePolicy | LongTermSchedulePolicy | SimpleSchedulePolicy | SimpleSchedulePolicyV2;

/**
 * Defines values for ScheduleRunType. \
 * {@link KnownScheduleRunType} can be used interchangeably with ScheduleRunType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Daily** \
 * **Weekly** \
 * **Hourly**
 */
export declare type ScheduleRunType = string;

/** Restore request parameters for Secured VMs */
export declare interface SecuredVMDetails {
    /** Gets or Sets Disk Encryption Set Id for Secured VM OS Disk */
    securedVMOsDiskEncryptionSetId?: string;
}

/** Base class for get security pin request body */
export declare interface SecurityPinBase {
    /** ResourceGuard Operation Requests */
    resourceGuardOperationRequests?: string[];
}

/** Interface representing a SecurityPINs. */
export declare interface SecurityPINs {
    /**
     * Get the security PIN.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, options?: SecurityPINsGetOptionalParams): Promise<SecurityPINsGetResponse>;
}

/** Optional parameters. */
export declare interface SecurityPINsGetOptionalParams extends coreClient.OperationOptions {
    /** security pin request */
    parameters?: SecurityPinBase;
}

/** Contains response data for the get operation. */
export declare type SecurityPINsGetResponse = TokenInformation;

/** Common settings field for backup management */
export declare interface Settings {
    /** TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time". */
    timeZone?: string;
    /** SQL compression flag */
    issqlcompression?: boolean;
    /**
     * Workload compression flag. This has been added so that 'isSqlCompression'
     * will be deprecated once clients upgrade to consider this flag.
     */
    isCompression?: boolean;
}

/** Simple policy retention. */
export declare interface SimpleRetentionPolicy extends RetentionPolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    retentionPolicyType: "SimpleRetentionPolicy";
    /** Retention duration of the protection policy. */
    retentionDuration?: RetentionDuration;
}

/** Simple policy schedule. */
export declare interface SimpleSchedulePolicy extends SchedulePolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    schedulePolicyType: "SimpleSchedulePolicy";
    /** Frequency of the schedule operation of this policy. */
    scheduleRunFrequency?: ScheduleRunType;
    /** List of days of week this schedule has to be run. */
    scheduleRunDays?: DayOfWeek[];
    /** List of times of day this schedule has to be run. */
    scheduleRunTimes?: Date[];
    /** Hourly Schedule of this Policy */
    hourlySchedule?: HourlySchedule;
    /** At every number weeks this schedule has to be run. */
    scheduleWeeklyFrequency?: number;
}

/** The V2 policy schedule for IaaS that supports hourly backups. */
export declare interface SimpleSchedulePolicyV2 extends SchedulePolicy {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    schedulePolicyType: "SimpleSchedulePolicyV2";
    /** Frequency of the schedule operation of this policy. */
    scheduleRunFrequency?: ScheduleRunType;
    /** hourly schedule of this policy */
    hourlySchedule?: HourlySchedule;
    /** Daily schedule of this policy */
    dailySchedule?: DailySchedule;
    /** Weekly schedule of this policy */
    weeklySchedule?: WeeklySchedule;
}

/**
 * Defines values for SoftDeleteFeatureState. \
 * {@link KnownSoftDeleteFeatureState} can be used interchangeably with SoftDeleteFeatureState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Enabled** \
 * **Disabled** \
 * **AlwaysON**
 */
export declare type SoftDeleteFeatureState = string;

/** SQLDataDirectory info */
export declare interface SQLDataDirectory {
    /** Type of data directory mapping */
    type?: SQLDataDirectoryType;
    /** File path */
    path?: string;
    /** Logical name of the file */
    logicalName?: string;
}

/** Encapsulates information regarding data directory */
export declare interface SQLDataDirectoryMapping {
    /** Type of data directory mapping */
    mappingType?: SQLDataDirectoryType;
    /** Restore source logical name path */
    sourceLogicalName?: string;
    /** Restore source path */
    sourcePath?: string;
    /** Target path */
    targetPath?: string;
}

/**
 * Defines values for SQLDataDirectoryType. \
 * {@link KnownSQLDataDirectoryType} can be used interchangeably with SQLDataDirectoryType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Data** \
 * **Log**
 */
export declare type SQLDataDirectoryType = string;

/**
 * Defines values for StorageType. \
 * {@link KnownStorageType} can be used interchangeably with StorageType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **GeoRedundant** \
 * **LocallyRedundant** \
 * **ZoneRedundant** \
 * **ReadAccessGeoZoneRedundant**
 */
export declare type StorageType = string;

/**
 * Defines values for StorageTypeState. \
 * {@link KnownStorageTypeState} can be used interchangeably with StorageTypeState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Locked** \
 * **Unlocked**
 */
export declare type StorageTypeState = string;

/** Sub-protection policy which includes schedule and retention */
export declare interface SubProtectionPolicy {
    /** Type of backup policy type */
    policyType?: PolicyType;
    /** Backup schedule specified as part of backup policy. */
    schedulePolicy?: SchedulePolicyUnion;
    /** Retention policy with the details on backup copy retention ranges. */
    retentionPolicy?: RetentionPolicyUnion;
    /**
     * Tiering policy to automatically move RPs to another tier.
     * Key is Target Tier, defined in RecoveryPointTierType enum.
     * Tiering policy specifies the criteria to move RP to the target tier.
     */
    tieringPolicy?: {
        [propertyName: string]: TieringPolicy;
    };
}

/**
 * Defines values for SupportStatus. \
 * {@link KnownSupportStatus} can be used interchangeably with SupportStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Supported** \
 * **DefaultOFF** \
 * **DefaultON** \
 * **NotSupported**
 */
export declare type SupportStatus = string;

/** Target Azure File Share Info. */
export declare interface TargetAFSRestoreInfo {
    /** File share name */
    name?: string;
    /** Target file share resource ARM ID */
    targetResourceId?: string;
}

/** Defines values for TargetDiskNetworkAccessOption. */
export declare type TargetDiskNetworkAccessOption = "SameAsOnSourceDisks" | "EnablePrivateAccessForAllDisks" | "EnablePublicAccessForAllDisks";

/** Specifies target network access settings for disks of VM to be restored. */
export declare interface TargetDiskNetworkAccessSettings {
    /** Network access settings to be used for restored disks */
    targetDiskNetworkAccessOption?: TargetDiskNetworkAccessOption;
    /** Gets or sets the ARM resource ID of the target disk access to be used when TargetDiskNetworkAccessOption is set to TargetDiskNetworkAccessOption.UseNew */
    targetDiskAccessId?: string;
}

/** Details about target workload during restore operation. */
export declare interface TargetRestoreInfo {
    /** Can Overwrite if Target DataBase already exists */
    overwriteOption?: OverwriteOptions;
    /** Resource Id name of the container in which Target DataBase resides */
    containerId?: string;
    /** Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana */
    databaseName?: string;
    /** Target directory location for restore as files. */
    targetDirectoryForFileRestore?: string;
}

/**
 * Defines values for TieringMode. \
 * {@link KnownTieringMode} can be used interchangeably with TieringMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **TierRecommended** \
 * **TierAfter** \
 * **DoNotTier**
 */
export declare type TieringMode = string;

/**
 * Tiering Policy for a target tier.
 * If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
 */
export declare interface TieringPolicy {
    /**
     * Tiering Mode to control automatic tiering of recovery points. Supported values are:
     * 1. TierRecommended: Tier all recovery points recommended to be tiered
     * 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
     * 3. DoNotTier: Do not tier any recovery points
     */
    tieringMode?: TieringMode;
    /**
     * Number of days/weeks/months/years to retain backups in current tier before tiering.
     * Used only if TieringMode is set to TierAfter
     */
    duration?: number;
    /**
     * Retention duration type: days/weeks/months/years
     * Used only if TieringMode is set to TierAfter
     */
    durationType?: RetentionDurationType;
}

/** The token information details. */
export declare interface TokenInformation {
    /** Token value. */
    token?: string;
    /** Expiry time of token. */
    expiryTimeInUtcTicks?: number;
    /** Security PIN */
    securityPIN?: string;
}

/** Trigger DataMove Request */
export declare interface TriggerDataMoveRequest {
    /** ARM Id of source vault */
    sourceResourceId: string;
    /** Source Region */
    sourceRegion: string;
    /** DataMove Level */
    dataMoveLevel: DataMoveLevel;
    /** Correlation Id */
    correlationId: string;
    /** Source Container ArmIds */
    sourceContainerArmIds?: string[];
    /** Pause GC */
    pauseGC?: boolean;
}

/**
 * Defines values for Type. \
 * {@link KnownType} can be used interchangeably with Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **BackupProtectedItemCountSummary** \
 * **BackupProtectionContainerCountSummary**
 */
export declare type Type = string;

/** Request body of unlock delete API. */
export declare interface UnlockDeleteRequest {
    resourceGuardOperationRequests?: string[];
    resourceToBeDeleted?: string;
}

/** Response of Unlock Delete API. */
export declare interface UnlockDeleteResponse {
    /** This is the time when unlock delete privileges will get expired. */
    unlockDeleteExpiryTime?: string;
}

/**
 * Defines values for UsagesUnit. \
 * {@link KnownUsagesUnit} can be used interchangeably with UsagesUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Count** \
 * **Bytes** \
 * **Seconds** \
 * **Percent** \
 * **CountPerSecond** \
 * **BytesPerSecond**
 */
export declare type UsagesUnit = string;

/** AzureRestoreValidation request. */
export declare interface ValidateIaasVMRestoreOperationRequest extends ValidateRestoreOperationRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ValidateIaasVMRestoreOperationRequest";
}

/** Interface representing a ValidateOperation. */
export declare interface ValidateOperation {
    /**
     * Validate operation for specified backed up item in the form of an asynchronous operation. Returns
     * tracking headers which can be tracked using GetValidateOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters resource validate operation request
     * @param options The options parameters.
     */
    beginTrigger(vaultName: string, resourceGroupName: string, parameters: ValidateOperationRequestUnion, options?: ValidateOperationTriggerOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Validate operation for specified backed up item in the form of an asynchronous operation. Returns
     * tracking headers which can be tracked using GetValidateOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters resource validate operation request
     * @param options The options parameters.
     */
    beginTriggerAndWait(vaultName: string, resourceGroupName: string, parameters: ValidateOperationRequestUnion, options?: ValidateOperationTriggerOptionalParams): Promise<void>;
}

/** Base class for validate operation request. */
export declare interface ValidateOperationRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ValidateRestoreOperationRequest" | "ValidateIaasVMRestoreOperationRequest";
}

export declare type ValidateOperationRequestUnion = ValidateOperationRequest | ValidateRestoreOperationRequestUnion;

/** Base class for validate operation response. */
export declare interface ValidateOperationResponse {
    /** Gets the validation result */
    validationResults?: ErrorDetail[];
}

/** Interface representing a ValidateOperationResults. */
export declare interface ValidateOperationResults {
    /**
     * Fetches the result of a triggered validate operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId OperationID which represents the operation whose result needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: ValidateOperationResultsGetOptionalParams): Promise<ValidateOperationResultsGetResponse>;
}

/** Optional parameters. */
export declare interface ValidateOperationResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ValidateOperationResultsGetResponse = ValidateOperationsResponse;

export declare interface ValidateOperationsResponse {
    /** Base class for validate operation response. */
    validateOperationResponse?: ValidateOperationResponse;
}

/** Interface representing a ValidateOperationStatuses. */
export declare interface ValidateOperationStatuses {
    /**
     * Fetches the status of a triggered validate operation. The status can be in progress, completed
     * or failed. You can refer to the OperationStatus enum for all the possible states of the operation.
     * If operation has completed, this method returns the list of errors obtained while validating the
     * operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId OperationID represents the operation whose status needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: ValidateOperationStatusesGetOptionalParams): Promise<ValidateOperationStatusesGetResponse>;
}

/** Optional parameters. */
export declare interface ValidateOperationStatusesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ValidateOperationStatusesGetResponse = OperationStatus;

/** Optional parameters. */
export declare interface ValidateOperationTriggerOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** AzureRestoreValidation request. */
export declare interface ValidateRestoreOperationRequest extends ValidateOperationRequest {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "ValidateRestoreOperationRequest" | "ValidateIaasVMRestoreOperationRequest";
    /** Sets restore request to be validated */
    restoreRequest?: RestoreRequestUnion;
}

export declare type ValidateRestoreOperationRequestUnion = ValidateRestoreOperationRequest | ValidateIaasVMRestoreOperationRequest;

/**
 * Defines values for ValidationStatus. \
 * {@link KnownValidationStatus} can be used interchangeably with ValidationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Succeeded** \
 * **Failed**
 */
export declare type ValidationStatus = string;

/** Vault level Job */
export declare interface VaultJob extends Job {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    jobType: "VaultJob";
    /** Time elapsed during the execution of this job. */
    duration?: string;
    /** Gets or sets the state/actions applicable on this job like cancel/retry. */
    actionsInfo?: JobSupportedAction[];
    /** Error details on execution of this job. */
    errorDetails?: VaultJobErrorInfo[];
    /** Additional information about the job. */
    extendedInfo?: VaultJobExtendedInfo;
}

/** Vault Job specific error information */
export declare interface VaultJobErrorInfo {
    /** Error code. */
    errorCode?: number;
    /** Localized error string. */
    errorString?: string;
    /** List of localized recommendations for above error code. */
    recommendations?: string[];
}

/** Vault Job for CMK - has CMK specific info. */
export declare interface VaultJobExtendedInfo {
    /** Job properties. */
    propertyBag?: {
        [propertyName: string]: string;
    };
}

/** Operation result response for Vault Storage Config */
export declare interface VaultStorageConfigOperationResultResponse {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    objectType: "PrepareDataMoveResponse";
}

export declare type VaultStorageConfigOperationResultResponseUnion = VaultStorageConfigOperationResultResponse | PrepareDataMoveResponse;

/**
 * Defines values for VaultSubResourceType. \
 * {@link KnownVaultSubResourceType} can be used interchangeably with VaultSubResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureBackup** \
 * **AzureBackup_secondary** \
 * **AzureSiteRecovery**
 */
export declare type VaultSubResourceType = string;

/** Weekly retention format. */
export declare interface WeeklyRetentionFormat {
    /** List of days of the week. */
    daysOfTheWeek?: DayOfWeek[];
    /** List of weeks of month. */
    weeksOfTheMonth?: WeekOfMonth[];
}

/** Weekly retention schedule. */
export declare interface WeeklyRetentionSchedule {
    /** List of days of week for weekly retention policy. */
    daysOfTheWeek?: DayOfWeek[];
    /** Retention times of retention policy. */
    retentionTimes?: Date[];
    /** Retention duration of retention Policy. */
    retentionDuration?: RetentionDuration;
}

export declare interface WeeklySchedule {
    scheduleRunDays?: DayOfWeek[];
    /** List of times of day this schedule has to be run. */
    scheduleRunTimes?: Date[];
}

/** Defines values for WeekOfMonth. */
export declare type WeekOfMonth = "First" | "Second" | "Third" | "Fourth" | "Last" | "Invalid";

/** Details of an inquired protectable item. */
export declare interface WorkloadInquiryDetails {
    /** Type of the Workload such as SQL, Oracle etc. */
    type?: string;
    /** Contains the protectable item Count inside this Container. */
    itemCount?: number;
    /** Inquiry validation such as permissions and other backup validations. */
    inquiryValidation?: InquiryValidation;
}

/** Base class for backup item. Workload-specific backup items are derived from this class. */
export declare interface WorkloadItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    workloadItemType: "AzureVmWorkloadItem" | "SAPAseDatabase" | "SAPAseSystem" | "SAPHanaDatabase" | "SAPHanaSystem" | "SQLDataBase" | "SQLInstance";
    /** Type of backup management to backup an item. */
    backupManagementType?: string;
    /** Type of workload for the backup management */
    workloadType?: string;
    /** Friendly name of the backup item. */
    friendlyName?: string;
    /** State of the back up item. */
    protectionState?: ProtectionStatus;
}

/** Base class for backup item. Workload-specific backup items are derived from this class. */
export declare interface WorkloadItemResource extends Resource {
    /** WorkloadItemResource properties */
    properties?: WorkloadItemUnion;
}

/** List of WorkloadItem resources */
export declare interface WorkloadItemResourceList extends ResourceList {
    /** List of resources. */
    value?: WorkloadItemResource[];
}

/**
 * Defines values for WorkloadItemType. \
 * {@link KnownWorkloadItemType} can be used interchangeably with WorkloadItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **SQLInstance** \
 * **SQLDataBase** \
 * **SAPHanaSystem** \
 * **SAPHanaDatabase** \
 * **SAPAseSystem** \
 * **SAPAseDatabase** \
 * **SAPHanaDBInstance**
 */
export declare type WorkloadItemType = string;

export declare type WorkloadItemUnion = WorkloadItem | AzureVmWorkloadItemUnion;

/** Base class for backup item. Workload-specific backup items are derived from this class. */
export declare interface WorkloadProtectableItem {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    protectableItemType: "AzureFileShare" | "IaaSVMProtectableItem" | "Microsoft.ClassicCompute/virtualMachines" | "Microsoft.Compute/virtualMachines" | "AzureVmWorkloadProtectableItem" | "SAPAseSystem" | "SAPHanaDatabase" | "SAPHanaSystem" | "SAPHanaDBInstance" | "HanaHSRContainer" | "SQLAvailabilityGroupContainer" | "SQLDataBase" | "SQLInstance";
    /** Type of backup management to backup an item. */
    backupManagementType?: string;
    /** Type of workload for the backup management */
    workloadType?: string;
    /** Friendly name of the backup item. */
    friendlyName?: string;
    /** State of the back up item. */
    protectionState?: ProtectionStatus;
}

/** Base class for backup item. Workload-specific backup items are derived from this class. */
export declare interface WorkloadProtectableItemResource extends Resource {
    /** WorkloadProtectableItemResource properties */
    properties?: WorkloadProtectableItemUnion;
}

/** List of WorkloadProtectableItem resources */
export declare interface WorkloadProtectableItemResourceList extends ResourceList {
    /** List of resources. */
    value?: WorkloadProtectableItemResource[];
}

export declare type WorkloadProtectableItemUnion = WorkloadProtectableItem | AzureFileShareProtectableItem | IaaSVMProtectableItemUnion | AzureVmWorkloadProtectableItemUnion;

/**
 * Defines values for WorkloadType. \
 * {@link KnownWorkloadType} can be used interchangeably with WorkloadType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **VM** \
 * **FileFolder** \
 * **AzureSqlDb** \
 * **SQLDB** \
 * **Exchange** \
 * **Sharepoint** \
 * **VMwareVM** \
 * **SystemState** \
 * **Client** \
 * **GenericDataSource** \
 * **SQLDataBase** \
 * **AzureFileShare** \
 * **SAPHanaDatabase** \
 * **SAPAseDatabase** \
 * **SAPHanaDBInstance**
 */
export declare type WorkloadType = string;

/**
 * Defines values for XcoolState. \
 * {@link KnownXcoolState} can be used interchangeably with XcoolState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **Enabled** \
 * **Disabled**
 */
export declare type XcoolState = string;

/** Yearly retention schedule. */
export declare interface YearlyRetentionSchedule {
    /** Retention schedule format for yearly retention policy. */
    retentionScheduleFormatType?: RetentionScheduleFormat;
    /** List of months of year of yearly retention policy. */
    monthsOfYear?: MonthOfYear[];
    /** Daily retention format for yearly retention policy. */
    retentionScheduleDaily?: DailyRetentionFormat;
    /** Weekly retention format for yearly retention policy. */
    retentionScheduleWeekly?: WeeklyRetentionFormat;
    /** Retention times of retention policy. */
    retentionTimes?: Date[];
    /** Retention duration of retention Policy. */
    retentionDuration?: RetentionDuration;
}

export { }
