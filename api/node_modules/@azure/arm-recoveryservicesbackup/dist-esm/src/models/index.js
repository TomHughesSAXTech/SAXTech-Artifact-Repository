/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link StorageType} that the service accepts. */
export var KnownStorageType;
(function (KnownStorageType) {
    /** Invalid */
    KnownStorageType["Invalid"] = "Invalid";
    /** GeoRedundant */
    KnownStorageType["GeoRedundant"] = "GeoRedundant";
    /** LocallyRedundant */
    KnownStorageType["LocallyRedundant"] = "LocallyRedundant";
    /** ZoneRedundant */
    KnownStorageType["ZoneRedundant"] = "ZoneRedundant";
    /** ReadAccessGeoZoneRedundant */
    KnownStorageType["ReadAccessGeoZoneRedundant"] = "ReadAccessGeoZoneRedundant";
})(KnownStorageType || (KnownStorageType = {}));
/** Known values of {@link StorageTypeState} that the service accepts. */
export var KnownStorageTypeState;
(function (KnownStorageTypeState) {
    /** Invalid */
    KnownStorageTypeState["Invalid"] = "Invalid";
    /** Locked */
    KnownStorageTypeState["Locked"] = "Locked";
    /** Unlocked */
    KnownStorageTypeState["Unlocked"] = "Unlocked";
})(KnownStorageTypeState || (KnownStorageTypeState = {}));
/** Known values of {@link DedupState} that the service accepts. */
export var KnownDedupState;
(function (KnownDedupState) {
    /** Invalid */
    KnownDedupState["Invalid"] = "Invalid";
    /** Enabled */
    KnownDedupState["Enabled"] = "Enabled";
    /** Disabled */
    KnownDedupState["Disabled"] = "Disabled";
})(KnownDedupState || (KnownDedupState = {}));
/** Known values of {@link XcoolState} that the service accepts. */
export var KnownXcoolState;
(function (KnownXcoolState) {
    /** Invalid */
    KnownXcoolState["Invalid"] = "Invalid";
    /** Enabled */
    KnownXcoolState["Enabled"] = "Enabled";
    /** Disabled */
    KnownXcoolState["Disabled"] = "Disabled";
})(KnownXcoolState || (KnownXcoolState = {}));
/** Known values of {@link DataSourceType} that the service accepts. */
export var KnownDataSourceType;
(function (KnownDataSourceType) {
    /** Invalid */
    KnownDataSourceType["Invalid"] = "Invalid";
    /** VM */
    KnownDataSourceType["VM"] = "VM";
    /** FileFolder */
    KnownDataSourceType["FileFolder"] = "FileFolder";
    /** AzureSqlDb */
    KnownDataSourceType["AzureSqlDb"] = "AzureSqlDb";
    /** Sqldb */
    KnownDataSourceType["Sqldb"] = "SQLDB";
    /** Exchange */
    KnownDataSourceType["Exchange"] = "Exchange";
    /** Sharepoint */
    KnownDataSourceType["Sharepoint"] = "Sharepoint";
    /** VMwareVM */
    KnownDataSourceType["VMwareVM"] = "VMwareVM";
    /** SystemState */
    KnownDataSourceType["SystemState"] = "SystemState";
    /** Client */
    KnownDataSourceType["Client"] = "Client";
    /** GenericDataSource */
    KnownDataSourceType["GenericDataSource"] = "GenericDataSource";
    /** SQLDataBase */
    KnownDataSourceType["SQLDataBase"] = "SQLDataBase";
    /** AzureFileShare */
    KnownDataSourceType["AzureFileShare"] = "AzureFileShare";
    /** SAPHanaDatabase */
    KnownDataSourceType["SAPHanaDatabase"] = "SAPHanaDatabase";
    /** SAPAseDatabase */
    KnownDataSourceType["SAPAseDatabase"] = "SAPAseDatabase";
    /** SAPHanaDBInstance */
    KnownDataSourceType["SAPHanaDBInstance"] = "SAPHanaDBInstance";
})(KnownDataSourceType || (KnownDataSourceType = {}));
/** Known values of {@link ValidationStatus} that the service accepts. */
export var KnownValidationStatus;
(function (KnownValidationStatus) {
    /** Invalid */
    KnownValidationStatus["Invalid"] = "Invalid";
    /** Succeeded */
    KnownValidationStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownValidationStatus["Failed"] = "Failed";
})(KnownValidationStatus || (KnownValidationStatus = {}));
/** Known values of {@link ProtectionStatus} that the service accepts. */
export var KnownProtectionStatus;
(function (KnownProtectionStatus) {
    /** Invalid */
    KnownProtectionStatus["Invalid"] = "Invalid";
    /** NotProtected */
    KnownProtectionStatus["NotProtected"] = "NotProtected";
    /** Protecting */
    KnownProtectionStatus["Protecting"] = "Protecting";
    /** Protected */
    KnownProtectionStatus["Protected"] = "Protected";
    /** ProtectionFailed */
    KnownProtectionStatus["ProtectionFailed"] = "ProtectionFailed";
})(KnownProtectionStatus || (KnownProtectionStatus = {}));
/** Known values of {@link FabricName} that the service accepts. */
export var KnownFabricName;
(function (KnownFabricName) {
    /** Invalid */
    KnownFabricName["Invalid"] = "Invalid";
    /** Azure */
    KnownFabricName["Azure"] = "Azure";
})(KnownFabricName || (KnownFabricName = {}));
/** Known values of {@link SupportStatus} that the service accepts. */
export var KnownSupportStatus;
(function (KnownSupportStatus) {
    /** Invalid */
    KnownSupportStatus["Invalid"] = "Invalid";
    /** Supported */
    KnownSupportStatus["Supported"] = "Supported";
    /** DefaultOFF */
    KnownSupportStatus["DefaultOFF"] = "DefaultOFF";
    /** DefaultON */
    KnownSupportStatus["DefaultON"] = "DefaultON";
    /** NotSupported */
    KnownSupportStatus["NotSupported"] = "NotSupported";
})(KnownSupportStatus || (KnownSupportStatus = {}));
/** Known values of {@link ProtectionIntentItemType} that the service accepts. */
export var KnownProtectionIntentItemType;
(function (KnownProtectionIntentItemType) {
    /** Invalid */
    KnownProtectionIntentItemType["Invalid"] = "Invalid";
    /** AzureResourceItem */
    KnownProtectionIntentItemType["AzureResourceItem"] = "AzureResourceItem";
    /** RecoveryServiceVaultItem */
    KnownProtectionIntentItemType["RecoveryServiceVaultItem"] = "RecoveryServiceVaultItem";
    /** AzureWorkloadContainerAutoProtectionIntent */
    KnownProtectionIntentItemType["AzureWorkloadContainerAutoProtectionIntent"] = "AzureWorkloadContainerAutoProtectionIntent";
    /** AzureWorkloadAutoProtectionIntent */
    KnownProtectionIntentItemType["AzureWorkloadAutoProtectionIntent"] = "AzureWorkloadAutoProtectionIntent";
    /** AzureWorkloadSQLAutoProtectionIntent */
    KnownProtectionIntentItemType["AzureWorkloadSQLAutoProtectionIntent"] = "AzureWorkloadSQLAutoProtectionIntent";
})(KnownProtectionIntentItemType || (KnownProtectionIntentItemType = {}));
/** Known values of {@link BackupManagementType} that the service accepts. */
export var KnownBackupManagementType;
(function (KnownBackupManagementType) {
    /** Invalid */
    KnownBackupManagementType["Invalid"] = "Invalid";
    /** AzureIaasVM */
    KnownBackupManagementType["AzureIaasVM"] = "AzureIaasVM";
    /** MAB */
    KnownBackupManagementType["MAB"] = "MAB";
    /** DPM */
    KnownBackupManagementType["DPM"] = "DPM";
    /** AzureBackupServer */
    KnownBackupManagementType["AzureBackupServer"] = "AzureBackupServer";
    /** AzureSql */
    KnownBackupManagementType["AzureSql"] = "AzureSql";
    /** AzureStorage */
    KnownBackupManagementType["AzureStorage"] = "AzureStorage";
    /** AzureWorkload */
    KnownBackupManagementType["AzureWorkload"] = "AzureWorkload";
    /** DefaultBackup */
    KnownBackupManagementType["DefaultBackup"] = "DefaultBackup";
})(KnownBackupManagementType || (KnownBackupManagementType = {}));
/** Known values of {@link UsagesUnit} that the service accepts. */
export var KnownUsagesUnit;
(function (KnownUsagesUnit) {
    /** Count */
    KnownUsagesUnit["Count"] = "Count";
    /** Bytes */
    KnownUsagesUnit["Bytes"] = "Bytes";
    /** Seconds */
    KnownUsagesUnit["Seconds"] = "Seconds";
    /** Percent */
    KnownUsagesUnit["Percent"] = "Percent";
    /** CountPerSecond */
    KnownUsagesUnit["CountPerSecond"] = "CountPerSecond";
    /** BytesPerSecond */
    KnownUsagesUnit["BytesPerSecond"] = "BytesPerSecond";
})(KnownUsagesUnit || (KnownUsagesUnit = {}));
/** Known values of {@link EnhancedSecurityState} that the service accepts. */
export var KnownEnhancedSecurityState;
(function (KnownEnhancedSecurityState) {
    /** Invalid */
    KnownEnhancedSecurityState["Invalid"] = "Invalid";
    /** Enabled */
    KnownEnhancedSecurityState["Enabled"] = "Enabled";
    /** Disabled */
    KnownEnhancedSecurityState["Disabled"] = "Disabled";
})(KnownEnhancedSecurityState || (KnownEnhancedSecurityState = {}));
/** Known values of {@link SoftDeleteFeatureState} that the service accepts. */
export var KnownSoftDeleteFeatureState;
(function (KnownSoftDeleteFeatureState) {
    /** Invalid */
    KnownSoftDeleteFeatureState["Invalid"] = "Invalid";
    /** Enabled */
    KnownSoftDeleteFeatureState["Enabled"] = "Enabled";
    /** Disabled */
    KnownSoftDeleteFeatureState["Disabled"] = "Disabled";
    /** AlwaysON */
    KnownSoftDeleteFeatureState["AlwaysON"] = "AlwaysON";
})(KnownSoftDeleteFeatureState || (KnownSoftDeleteFeatureState = {}));
/** Known values of {@link EncryptionAtRestType} that the service accepts. */
export var KnownEncryptionAtRestType;
(function (KnownEncryptionAtRestType) {
    /** Invalid */
    KnownEncryptionAtRestType["Invalid"] = "Invalid";
    /** MicrosoftManaged */
    KnownEncryptionAtRestType["MicrosoftManaged"] = "MicrosoftManaged";
    /** CustomerManaged */
    KnownEncryptionAtRestType["CustomerManaged"] = "CustomerManaged";
})(KnownEncryptionAtRestType || (KnownEncryptionAtRestType = {}));
/** Known values of {@link LastUpdateStatus} that the service accepts. */
export var KnownLastUpdateStatus;
(function (KnownLastUpdateStatus) {
    /** Invalid */
    KnownLastUpdateStatus["Invalid"] = "Invalid";
    /** NotEnabled */
    KnownLastUpdateStatus["NotEnabled"] = "NotEnabled";
    /** PartiallySucceeded */
    KnownLastUpdateStatus["PartiallySucceeded"] = "PartiallySucceeded";
    /** PartiallyFailed */
    KnownLastUpdateStatus["PartiallyFailed"] = "PartiallyFailed";
    /** Failed */
    KnownLastUpdateStatus["Failed"] = "Failed";
    /** Succeeded */
    KnownLastUpdateStatus["Succeeded"] = "Succeeded";
    /** Initialized */
    KnownLastUpdateStatus["Initialized"] = "Initialized";
    /** FirstInitialization */
    KnownLastUpdateStatus["FirstInitialization"] = "FirstInitialization";
})(KnownLastUpdateStatus || (KnownLastUpdateStatus = {}));
/** Known values of {@link InfrastructureEncryptionState} that the service accepts. */
export var KnownInfrastructureEncryptionState;
(function (KnownInfrastructureEncryptionState) {
    /** Invalid */
    KnownInfrastructureEncryptionState["Invalid"] = "Invalid";
    /** Disabled */
    KnownInfrastructureEncryptionState["Disabled"] = "Disabled";
    /** Enabled */
    KnownInfrastructureEncryptionState["Enabled"] = "Enabled";
})(KnownInfrastructureEncryptionState || (KnownInfrastructureEncryptionState = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Succeeded */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Deleting */
    KnownProvisioningState["Deleting"] = "Deleting";
    /** Failed */
    KnownProvisioningState["Failed"] = "Failed";
    /** Pending */
    KnownProvisioningState["Pending"] = "Pending";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link VaultSubResourceType} that the service accepts. */
export var KnownVaultSubResourceType;
(function (KnownVaultSubResourceType) {
    /** AzureBackup */
    KnownVaultSubResourceType["AzureBackup"] = "AzureBackup";
    /** AzureBackupSecondary */
    KnownVaultSubResourceType["AzureBackupSecondary"] = "AzureBackup_secondary";
    /** AzureSiteRecovery */
    KnownVaultSubResourceType["AzureSiteRecovery"] = "AzureSiteRecovery";
})(KnownVaultSubResourceType || (KnownVaultSubResourceType = {}));
/** Known values of {@link PrivateEndpointConnectionStatus} that the service accepts. */
export var KnownPrivateEndpointConnectionStatus;
(function (KnownPrivateEndpointConnectionStatus) {
    /** Pending */
    KnownPrivateEndpointConnectionStatus["Pending"] = "Pending";
    /** Approved */
    KnownPrivateEndpointConnectionStatus["Approved"] = "Approved";
    /** Rejected */
    KnownPrivateEndpointConnectionStatus["Rejected"] = "Rejected";
    /** Disconnected */
    KnownPrivateEndpointConnectionStatus["Disconnected"] = "Disconnected";
})(KnownPrivateEndpointConnectionStatus || (KnownPrivateEndpointConnectionStatus = {}));
/** Known values of {@link OperationStatusValues} that the service accepts. */
export var KnownOperationStatusValues;
(function (KnownOperationStatusValues) {
    /** Invalid */
    KnownOperationStatusValues["Invalid"] = "Invalid";
    /** InProgress */
    KnownOperationStatusValues["InProgress"] = "InProgress";
    /** Succeeded */
    KnownOperationStatusValues["Succeeded"] = "Succeeded";
    /** Failed */
    KnownOperationStatusValues["Failed"] = "Failed";
    /** Canceled */
    KnownOperationStatusValues["Canceled"] = "Canceled";
})(KnownOperationStatusValues || (KnownOperationStatusValues = {}));
/** Known values of {@link DataMoveLevel} that the service accepts. */
export var KnownDataMoveLevel;
(function (KnownDataMoveLevel) {
    /** Invalid */
    KnownDataMoveLevel["Invalid"] = "Invalid";
    /** Vault */
    KnownDataMoveLevel["Vault"] = "Vault";
    /** Container */
    KnownDataMoveLevel["Container"] = "Container";
})(KnownDataMoveLevel || (KnownDataMoveLevel = {}));
/** Known values of {@link CreateMode} that the service accepts. */
export var KnownCreateMode;
(function (KnownCreateMode) {
    /** Invalid */
    KnownCreateMode["Invalid"] = "Invalid";
    /** Default */
    KnownCreateMode["Default"] = "Default";
    /** Recover */
    KnownCreateMode["Recover"] = "Recover";
})(KnownCreateMode || (KnownCreateMode = {}));
/** Known values of {@link BackupEngineType} that the service accepts. */
export var KnownBackupEngineType;
(function (KnownBackupEngineType) {
    /** Invalid */
    KnownBackupEngineType["Invalid"] = "Invalid";
    /** DpmBackupEngine */
    KnownBackupEngineType["DpmBackupEngine"] = "DpmBackupEngine";
    /** AzureBackupServerEngine */
    KnownBackupEngineType["AzureBackupServerEngine"] = "AzureBackupServerEngine";
})(KnownBackupEngineType || (KnownBackupEngineType = {}));
/** Known values of {@link ProtectionState} that the service accepts. */
export var KnownProtectionState;
(function (KnownProtectionState) {
    /** Invalid */
    KnownProtectionState["Invalid"] = "Invalid";
    /** IRPending */
    KnownProtectionState["IRPending"] = "IRPending";
    /** Protected */
    KnownProtectionState["Protected"] = "Protected";
    /** ProtectionError */
    KnownProtectionState["ProtectionError"] = "ProtectionError";
    /** ProtectionStopped */
    KnownProtectionState["ProtectionStopped"] = "ProtectionStopped";
    /** ProtectionPaused */
    KnownProtectionState["ProtectionPaused"] = "ProtectionPaused";
    /** BackupsSuspended */
    KnownProtectionState["BackupsSuspended"] = "BackupsSuspended";
})(KnownProtectionState || (KnownProtectionState = {}));
/** Known values of {@link ResourceHealthStatus} that the service accepts. */
export var KnownResourceHealthStatus;
(function (KnownResourceHealthStatus) {
    /** Healthy */
    KnownResourceHealthStatus["Healthy"] = "Healthy";
    /** TransientDegraded */
    KnownResourceHealthStatus["TransientDegraded"] = "TransientDegraded";
    /** PersistentDegraded */
    KnownResourceHealthStatus["PersistentDegraded"] = "PersistentDegraded";
    /** TransientUnhealthy */
    KnownResourceHealthStatus["TransientUnhealthy"] = "TransientUnhealthy";
    /** PersistentUnhealthy */
    KnownResourceHealthStatus["PersistentUnhealthy"] = "PersistentUnhealthy";
    /** Invalid */
    KnownResourceHealthStatus["Invalid"] = "Invalid";
})(KnownResourceHealthStatus || (KnownResourceHealthStatus = {}));
/** Known values of {@link RecoveryType} that the service accepts. */
export var KnownRecoveryType;
(function (KnownRecoveryType) {
    /** Invalid */
    KnownRecoveryType["Invalid"] = "Invalid";
    /** OriginalLocation */
    KnownRecoveryType["OriginalLocation"] = "OriginalLocation";
    /** AlternateLocation */
    KnownRecoveryType["AlternateLocation"] = "AlternateLocation";
    /** RestoreDisks */
    KnownRecoveryType["RestoreDisks"] = "RestoreDisks";
    /** Offline */
    KnownRecoveryType["Offline"] = "Offline";
})(KnownRecoveryType || (KnownRecoveryType = {}));
/** Known values of {@link CopyOptions} that the service accepts. */
export var KnownCopyOptions;
(function (KnownCopyOptions) {
    /** Invalid */
    KnownCopyOptions["Invalid"] = "Invalid";
    /** CreateCopy */
    KnownCopyOptions["CreateCopy"] = "CreateCopy";
    /** Skip */
    KnownCopyOptions["Skip"] = "Skip";
    /** Overwrite */
    KnownCopyOptions["Overwrite"] = "Overwrite";
    /** FailOnConflict */
    KnownCopyOptions["FailOnConflict"] = "FailOnConflict";
})(KnownCopyOptions || (KnownCopyOptions = {}));
/** Known values of {@link RestoreRequestType} that the service accepts. */
export var KnownRestoreRequestType;
(function (KnownRestoreRequestType) {
    /** Invalid */
    KnownRestoreRequestType["Invalid"] = "Invalid";
    /** FullShareRestore */
    KnownRestoreRequestType["FullShareRestore"] = "FullShareRestore";
    /** ItemLevelRestore */
    KnownRestoreRequestType["ItemLevelRestore"] = "ItemLevelRestore";
})(KnownRestoreRequestType || (KnownRestoreRequestType = {}));
/** Known values of {@link WorkloadType} that the service accepts. */
export var KnownWorkloadType;
(function (KnownWorkloadType) {
    /** Invalid */
    KnownWorkloadType["Invalid"] = "Invalid";
    /** VM */
    KnownWorkloadType["VM"] = "VM";
    /** FileFolder */
    KnownWorkloadType["FileFolder"] = "FileFolder";
    /** AzureSqlDb */
    KnownWorkloadType["AzureSqlDb"] = "AzureSqlDb";
    /** Sqldb */
    KnownWorkloadType["Sqldb"] = "SQLDB";
    /** Exchange */
    KnownWorkloadType["Exchange"] = "Exchange";
    /** Sharepoint */
    KnownWorkloadType["Sharepoint"] = "Sharepoint";
    /** VMwareVM */
    KnownWorkloadType["VMwareVM"] = "VMwareVM";
    /** SystemState */
    KnownWorkloadType["SystemState"] = "SystemState";
    /** Client */
    KnownWorkloadType["Client"] = "Client";
    /** GenericDataSource */
    KnownWorkloadType["GenericDataSource"] = "GenericDataSource";
    /** SQLDataBase */
    KnownWorkloadType["SQLDataBase"] = "SQLDataBase";
    /** AzureFileShare */
    KnownWorkloadType["AzureFileShare"] = "AzureFileShare";
    /** SAPHanaDatabase */
    KnownWorkloadType["SAPHanaDatabase"] = "SAPHanaDatabase";
    /** SAPAseDatabase */
    KnownWorkloadType["SAPAseDatabase"] = "SAPAseDatabase";
    /** SAPHanaDBInstance */
    KnownWorkloadType["SAPHanaDBInstance"] = "SAPHanaDBInstance";
})(KnownWorkloadType || (KnownWorkloadType = {}));
/** Known values of {@link PolicyType} that the service accepts. */
export var KnownPolicyType;
(function (KnownPolicyType) {
    /** Invalid */
    KnownPolicyType["Invalid"] = "Invalid";
    /** Full */
    KnownPolicyType["Full"] = "Full";
    /** Differential */
    KnownPolicyType["Differential"] = "Differential";
    /** Log */
    KnownPolicyType["Log"] = "Log";
    /** CopyOnlyFull */
    KnownPolicyType["CopyOnlyFull"] = "CopyOnlyFull";
    /** Incremental */
    KnownPolicyType["Incremental"] = "Incremental";
    /** SnapshotFull */
    KnownPolicyType["SnapshotFull"] = "SnapshotFull";
    /** SnapshotCopyOnlyFull */
    KnownPolicyType["SnapshotCopyOnlyFull"] = "SnapshotCopyOnlyFull";
})(KnownPolicyType || (KnownPolicyType = {}));
/** Known values of {@link TieringMode} that the service accepts. */
export var KnownTieringMode;
(function (KnownTieringMode) {
    /** Invalid */
    KnownTieringMode["Invalid"] = "Invalid";
    /** TierRecommended */
    KnownTieringMode["TierRecommended"] = "TierRecommended";
    /** TierAfter */
    KnownTieringMode["TierAfter"] = "TierAfter";
    /** DoNotTier */
    KnownTieringMode["DoNotTier"] = "DoNotTier";
})(KnownTieringMode || (KnownTieringMode = {}));
/** Known values of {@link RetentionDurationType} that the service accepts. */
export var KnownRetentionDurationType;
(function (KnownRetentionDurationType) {
    /** Invalid */
    KnownRetentionDurationType["Invalid"] = "Invalid";
    /** Days */
    KnownRetentionDurationType["Days"] = "Days";
    /** Weeks */
    KnownRetentionDurationType["Weeks"] = "Weeks";
    /** Months */
    KnownRetentionDurationType["Months"] = "Months";
    /** Years */
    KnownRetentionDurationType["Years"] = "Years";
})(KnownRetentionDurationType || (KnownRetentionDurationType = {}));
/** Known values of {@link HealthStatus} that the service accepts. */
export var KnownHealthStatus;
(function (KnownHealthStatus) {
    /** Passed */
    KnownHealthStatus["Passed"] = "Passed";
    /** ActionRequired */
    KnownHealthStatus["ActionRequired"] = "ActionRequired";
    /** ActionSuggested */
    KnownHealthStatus["ActionSuggested"] = "ActionSuggested";
    /** Invalid */
    KnownHealthStatus["Invalid"] = "Invalid";
})(KnownHealthStatus || (KnownHealthStatus = {}));
/** Known values of {@link IaasvmPolicyType} that the service accepts. */
export var KnownIaasvmPolicyType;
(function (KnownIaasvmPolicyType) {
    /** Invalid */
    KnownIaasvmPolicyType["Invalid"] = "Invalid";
    /** V1 */
    KnownIaasvmPolicyType["V1"] = "V1";
    /** V2 */
    KnownIaasvmPolicyType["V2"] = "V2";
})(KnownIaasvmPolicyType || (KnownIaasvmPolicyType = {}));
/** Known values of {@link ProtectedItemState} that the service accepts. */
export var KnownProtectedItemState;
(function (KnownProtectedItemState) {
    /** Invalid */
    KnownProtectedItemState["Invalid"] = "Invalid";
    /** IRPending */
    KnownProtectedItemState["IRPending"] = "IRPending";
    /** Protected */
    KnownProtectedItemState["Protected"] = "Protected";
    /** ProtectionError */
    KnownProtectedItemState["ProtectionError"] = "ProtectionError";
    /** ProtectionStopped */
    KnownProtectedItemState["ProtectionStopped"] = "ProtectionStopped";
    /** ProtectionPaused */
    KnownProtectedItemState["ProtectionPaused"] = "ProtectionPaused";
    /** BackupsSuspended */
    KnownProtectedItemState["BackupsSuspended"] = "BackupsSuspended";
})(KnownProtectedItemState || (KnownProtectedItemState = {}));
/** Known values of {@link LastBackupStatus} that the service accepts. */
export var KnownLastBackupStatus;
(function (KnownLastBackupStatus) {
    /** Invalid */
    KnownLastBackupStatus["Invalid"] = "Invalid";
    /** Healthy */
    KnownLastBackupStatus["Healthy"] = "Healthy";
    /** Unhealthy */
    KnownLastBackupStatus["Unhealthy"] = "Unhealthy";
    /** IRPending */
    KnownLastBackupStatus["IRPending"] = "IRPending";
})(KnownLastBackupStatus || (KnownLastBackupStatus = {}));
/** Known values of {@link ProtectedItemHealthStatus} that the service accepts. */
export var KnownProtectedItemHealthStatus;
(function (KnownProtectedItemHealthStatus) {
    /** Invalid */
    KnownProtectedItemHealthStatus["Invalid"] = "Invalid";
    /** Healthy */
    KnownProtectedItemHealthStatus["Healthy"] = "Healthy";
    /** Unhealthy */
    KnownProtectedItemHealthStatus["Unhealthy"] = "Unhealthy";
    /** NotReachable */
    KnownProtectedItemHealthStatus["NotReachable"] = "NotReachable";
    /** IRPending */
    KnownProtectedItemHealthStatus["IRPending"] = "IRPending";
})(KnownProtectedItemHealthStatus || (KnownProtectedItemHealthStatus = {}));
/** Known values of {@link RestorePointType} that the service accepts. */
export var KnownRestorePointType;
(function (KnownRestorePointType) {
    /** Invalid */
    KnownRestorePointType["Invalid"] = "Invalid";
    /** Full */
    KnownRestorePointType["Full"] = "Full";
    /** Log */
    KnownRestorePointType["Log"] = "Log";
    /** Differential */
    KnownRestorePointType["Differential"] = "Differential";
    /** Incremental */
    KnownRestorePointType["Incremental"] = "Incremental";
    /** SnapshotFull */
    KnownRestorePointType["SnapshotFull"] = "SnapshotFull";
    /** SnapshotCopyOnlyFull */
    KnownRestorePointType["SnapshotCopyOnlyFull"] = "SnapshotCopyOnlyFull";
})(KnownRestorePointType || (KnownRestorePointType = {}));
/** Known values of {@link OverwriteOptions} that the service accepts. */
export var KnownOverwriteOptions;
(function (KnownOverwriteOptions) {
    /** Invalid */
    KnownOverwriteOptions["Invalid"] = "Invalid";
    /** FailOnConflict */
    KnownOverwriteOptions["FailOnConflict"] = "FailOnConflict";
    /** Overwrite */
    KnownOverwriteOptions["Overwrite"] = "Overwrite";
})(KnownOverwriteOptions || (KnownOverwriteOptions = {}));
/** Known values of {@link RecoveryMode} that the service accepts. */
export var KnownRecoveryMode;
(function (KnownRecoveryMode) {
    /** Invalid */
    KnownRecoveryMode["Invalid"] = "Invalid";
    /** FileRecovery */
    KnownRecoveryMode["FileRecovery"] = "FileRecovery";
    /** WorkloadRecovery */
    KnownRecoveryMode["WorkloadRecovery"] = "WorkloadRecovery";
})(KnownRecoveryMode || (KnownRecoveryMode = {}));
/** Known values of {@link SQLDataDirectoryType} that the service accepts. */
export var KnownSQLDataDirectoryType;
(function (KnownSQLDataDirectoryType) {
    /** Invalid */
    KnownSQLDataDirectoryType["Invalid"] = "Invalid";
    /** Data */
    KnownSQLDataDirectoryType["Data"] = "Data";
    /** Log */
    KnownSQLDataDirectoryType["Log"] = "Log";
})(KnownSQLDataDirectoryType || (KnownSQLDataDirectoryType = {}));
/** Known values of {@link RestorePointQueryType} that the service accepts. */
export var KnownRestorePointQueryType;
(function (KnownRestorePointQueryType) {
    /** Invalid */
    KnownRestorePointQueryType["Invalid"] = "Invalid";
    /** Full */
    KnownRestorePointQueryType["Full"] = "Full";
    /** Log */
    KnownRestorePointQueryType["Log"] = "Log";
    /** Differential */
    KnownRestorePointQueryType["Differential"] = "Differential";
    /** FullAndDifferential */
    KnownRestorePointQueryType["FullAndDifferential"] = "FullAndDifferential";
    /** All */
    KnownRestorePointQueryType["All"] = "All";
    /** Incremental */
    KnownRestorePointQueryType["Incremental"] = "Incremental";
    /** SnapshotFull */
    KnownRestorePointQueryType["SnapshotFull"] = "SnapshotFull";
    /** SnapshotCopyOnlyFull */
    KnownRestorePointQueryType["SnapshotCopyOnlyFull"] = "SnapshotCopyOnlyFull";
})(KnownRestorePointQueryType || (KnownRestorePointQueryType = {}));
/** Known values of {@link JobStatus} that the service accepts. */
export var KnownJobStatus;
(function (KnownJobStatus) {
    /** Invalid */
    KnownJobStatus["Invalid"] = "Invalid";
    /** InProgress */
    KnownJobStatus["InProgress"] = "InProgress";
    /** Completed */
    KnownJobStatus["Completed"] = "Completed";
    /** Failed */
    KnownJobStatus["Failed"] = "Failed";
    /** CompletedWithWarnings */
    KnownJobStatus["CompletedWithWarnings"] = "CompletedWithWarnings";
    /** Cancelled */
    KnownJobStatus["Cancelled"] = "Cancelled";
    /** Cancelling */
    KnownJobStatus["Cancelling"] = "Cancelling";
})(KnownJobStatus || (KnownJobStatus = {}));
/** Known values of {@link JobOperationType} that the service accepts. */
export var KnownJobOperationType;
(function (KnownJobOperationType) {
    /** Invalid */
    KnownJobOperationType["Invalid"] = "Invalid";
    /** Register */
    KnownJobOperationType["Register"] = "Register";
    /** UnRegister */
    KnownJobOperationType["UnRegister"] = "UnRegister";
    /** ConfigureBackup */
    KnownJobOperationType["ConfigureBackup"] = "ConfigureBackup";
    /** Backup */
    KnownJobOperationType["Backup"] = "Backup";
    /** Restore */
    KnownJobOperationType["Restore"] = "Restore";
    /** DisableBackup */
    KnownJobOperationType["DisableBackup"] = "DisableBackup";
    /** DeleteBackupData */
    KnownJobOperationType["DeleteBackupData"] = "DeleteBackupData";
    /** CrossRegionRestore */
    KnownJobOperationType["CrossRegionRestore"] = "CrossRegionRestore";
    /** Undelete */
    KnownJobOperationType["Undelete"] = "Undelete";
    /** UpdateCustomerManagedKey */
    KnownJobOperationType["UpdateCustomerManagedKey"] = "UpdateCustomerManagedKey";
})(KnownJobOperationType || (KnownJobOperationType = {}));
/** Known values of {@link RetentionScheduleFormat} that the service accepts. */
export var KnownRetentionScheduleFormat;
(function (KnownRetentionScheduleFormat) {
    /** Invalid */
    KnownRetentionScheduleFormat["Invalid"] = "Invalid";
    /** Daily */
    KnownRetentionScheduleFormat["Daily"] = "Daily";
    /** Weekly */
    KnownRetentionScheduleFormat["Weekly"] = "Weekly";
})(KnownRetentionScheduleFormat || (KnownRetentionScheduleFormat = {}));
/** Known values of {@link MabServerType} that the service accepts. */
export var KnownMabServerType;
(function (KnownMabServerType) {
    /** Invalid */
    KnownMabServerType["Invalid"] = "Invalid";
    /** Unknown */
    KnownMabServerType["Unknown"] = "Unknown";
    /** IaasVMContainer */
    KnownMabServerType["IaasVMContainer"] = "IaasVMContainer";
    /** IaasVMServiceContainer */
    KnownMabServerType["IaasVMServiceContainer"] = "IaasVMServiceContainer";
    /** DPMContainer */
    KnownMabServerType["DPMContainer"] = "DPMContainer";
    /** AzureBackupServerContainer */
    KnownMabServerType["AzureBackupServerContainer"] = "AzureBackupServerContainer";
    /** MABContainer */
    KnownMabServerType["MABContainer"] = "MABContainer";
    /** Cluster */
    KnownMabServerType["Cluster"] = "Cluster";
    /** AzureSqlContainer */
    KnownMabServerType["AzureSqlContainer"] = "AzureSqlContainer";
    /** Windows */
    KnownMabServerType["Windows"] = "Windows";
    /** VCenter */
    KnownMabServerType["VCenter"] = "VCenter";
    /** VMAppContainer */
    KnownMabServerType["VMAppContainer"] = "VMAppContainer";
    /** SqlagWorkLoadContainer */
    KnownMabServerType["SqlagWorkLoadContainer"] = "SQLAGWorkLoadContainer";
    /** StorageContainer */
    KnownMabServerType["StorageContainer"] = "StorageContainer";
    /** GenericContainer */
    KnownMabServerType["GenericContainer"] = "GenericContainer";
})(KnownMabServerType || (KnownMabServerType = {}));
/** Known values of {@link HealthState} that the service accepts. */
export var KnownHealthState;
(function (KnownHealthState) {
    /** Passed */
    KnownHealthState["Passed"] = "Passed";
    /** ActionRequired */
    KnownHealthState["ActionRequired"] = "ActionRequired";
    /** ActionSuggested */
    KnownHealthState["ActionSuggested"] = "ActionSuggested";
    /** Invalid */
    KnownHealthState["Invalid"] = "Invalid";
})(KnownHealthState || (KnownHealthState = {}));
/** Known values of {@link ScheduleRunType} that the service accepts. */
export var KnownScheduleRunType;
(function (KnownScheduleRunType) {
    /** Invalid */
    KnownScheduleRunType["Invalid"] = "Invalid";
    /** Daily */
    KnownScheduleRunType["Daily"] = "Daily";
    /** Weekly */
    KnownScheduleRunType["Weekly"] = "Weekly";
    /** Hourly */
    KnownScheduleRunType["Hourly"] = "Hourly";
})(KnownScheduleRunType || (KnownScheduleRunType = {}));
/** Known values of {@link AzureFileShareType} that the service accepts. */
export var KnownAzureFileShareType;
(function (KnownAzureFileShareType) {
    /** Invalid */
    KnownAzureFileShareType["Invalid"] = "Invalid";
    /** Xsmb */
    KnownAzureFileShareType["Xsmb"] = "XSMB";
    /** XSync */
    KnownAzureFileShareType["XSync"] = "XSync";
})(KnownAzureFileShareType || (KnownAzureFileShareType = {}));
/** Known values of {@link OperationType} that the service accepts. */
export var KnownOperationType;
(function (KnownOperationType) {
    /** Invalid */
    KnownOperationType["Invalid"] = "Invalid";
    /** Register */
    KnownOperationType["Register"] = "Register";
    /** Reregister */
    KnownOperationType["Reregister"] = "Reregister";
})(KnownOperationType || (KnownOperationType = {}));
/** Known values of {@link AcquireStorageAccountLock} that the service accepts. */
export var KnownAcquireStorageAccountLock;
(function (KnownAcquireStorageAccountLock) {
    /** Acquire */
    KnownAcquireStorageAccountLock["Acquire"] = "Acquire";
    /** NotAcquire */
    KnownAcquireStorageAccountLock["NotAcquire"] = "NotAcquire";
})(KnownAcquireStorageAccountLock || (KnownAcquireStorageAccountLock = {}));
/** Known values of {@link InquiryStatus} that the service accepts. */
export var KnownInquiryStatus;
(function (KnownInquiryStatus) {
    /** Invalid */
    KnownInquiryStatus["Invalid"] = "Invalid";
    /** Success */
    KnownInquiryStatus["Success"] = "Success";
    /** Failed */
    KnownInquiryStatus["Failed"] = "Failed";
})(KnownInquiryStatus || (KnownInquiryStatus = {}));
/** Known values of {@link BackupType} that the service accepts. */
export var KnownBackupType;
(function (KnownBackupType) {
    /** Invalid */
    KnownBackupType["Invalid"] = "Invalid";
    /** Full */
    KnownBackupType["Full"] = "Full";
    /** Differential */
    KnownBackupType["Differential"] = "Differential";
    /** Log */
    KnownBackupType["Log"] = "Log";
    /** CopyOnlyFull */
    KnownBackupType["CopyOnlyFull"] = "CopyOnlyFull";
    /** Incremental */
    KnownBackupType["Incremental"] = "Incremental";
    /** SnapshotFull */
    KnownBackupType["SnapshotFull"] = "SnapshotFull";
    /** SnapshotCopyOnlyFull */
    KnownBackupType["SnapshotCopyOnlyFull"] = "SnapshotCopyOnlyFull";
})(KnownBackupType || (KnownBackupType = {}));
/** Known values of {@link WorkloadItemType} that the service accepts. */
export var KnownWorkloadItemType;
(function (KnownWorkloadItemType) {
    /** Invalid */
    KnownWorkloadItemType["Invalid"] = "Invalid";
    /** SQLInstance */
    KnownWorkloadItemType["SQLInstance"] = "SQLInstance";
    /** SQLDataBase */
    KnownWorkloadItemType["SQLDataBase"] = "SQLDataBase";
    /** SAPHanaSystem */
    KnownWorkloadItemType["SAPHanaSystem"] = "SAPHanaSystem";
    /** SAPHanaDatabase */
    KnownWorkloadItemType["SAPHanaDatabase"] = "SAPHanaDatabase";
    /** SAPAseSystem */
    KnownWorkloadItemType["SAPAseSystem"] = "SAPAseSystem";
    /** SAPAseDatabase */
    KnownWorkloadItemType["SAPAseDatabase"] = "SAPAseDatabase";
    /** SAPHanaDBInstance */
    KnownWorkloadItemType["SAPHanaDBInstance"] = "SAPHanaDBInstance";
})(KnownWorkloadItemType || (KnownWorkloadItemType = {}));
/** Known values of {@link Type} that the service accepts. */
export var KnownType;
(function (KnownType) {
    /** Invalid */
    KnownType["Invalid"] = "Invalid";
    /** BackupProtectedItemCountSummary */
    KnownType["BackupProtectedItemCountSummary"] = "BackupProtectedItemCountSummary";
    /** BackupProtectionContainerCountSummary */
    KnownType["BackupProtectionContainerCountSummary"] = "BackupProtectionContainerCountSummary";
})(KnownType || (KnownType = {}));
/** Known values of {@link IntentItemType} that the service accepts. */
export var KnownIntentItemType;
(function (KnownIntentItemType) {
    /** Invalid */
    KnownIntentItemType["Invalid"] = "Invalid";
    /** SQLInstance */
    KnownIntentItemType["SQLInstance"] = "SQLInstance";
    /** SQLAvailabilityGroupContainer */
    KnownIntentItemType["SQLAvailabilityGroupContainer"] = "SQLAvailabilityGroupContainer";
})(KnownIntentItemType || (KnownIntentItemType = {}));
/** Known values of {@link ContainerType} that the service accepts. */
export var KnownContainerType;
(function (KnownContainerType) {
    /** Invalid */
    KnownContainerType["Invalid"] = "Invalid";
    /** Unknown */
    KnownContainerType["Unknown"] = "Unknown";
    /** IaasVMContainer */
    KnownContainerType["IaasVMContainer"] = "IaasVMContainer";
    /** IaasVMServiceContainer */
    KnownContainerType["IaasVMServiceContainer"] = "IaasVMServiceContainer";
    /** DPMContainer */
    KnownContainerType["DPMContainer"] = "DPMContainer";
    /** AzureBackupServerContainer */
    KnownContainerType["AzureBackupServerContainer"] = "AzureBackupServerContainer";
    /** MABContainer */
    KnownContainerType["MABContainer"] = "MABContainer";
    /** Cluster */
    KnownContainerType["Cluster"] = "Cluster";
    /** AzureSqlContainer */
    KnownContainerType["AzureSqlContainer"] = "AzureSqlContainer";
    /** Windows */
    KnownContainerType["Windows"] = "Windows";
    /** VCenter */
    KnownContainerType["VCenter"] = "VCenter";
    /** VMAppContainer */
    KnownContainerType["VMAppContainer"] = "VMAppContainer";
    /** SqlagWorkLoadContainer */
    KnownContainerType["SqlagWorkLoadContainer"] = "SQLAGWorkLoadContainer";
    /** StorageContainer */
    KnownContainerType["StorageContainer"] = "StorageContainer";
    /** GenericContainer */
    KnownContainerType["GenericContainer"] = "GenericContainer";
    /** HanaHSRContainer */
    KnownContainerType["HanaHSRContainer"] = "HanaHSRContainer";
})(KnownContainerType || (KnownContainerType = {}));
/** Known values of {@link BackupItemType} that the service accepts. */
export var KnownBackupItemType;
(function (KnownBackupItemType) {
    /** Invalid */
    KnownBackupItemType["Invalid"] = "Invalid";
    /** VM */
    KnownBackupItemType["VM"] = "VM";
    /** FileFolder */
    KnownBackupItemType["FileFolder"] = "FileFolder";
    /** AzureSqlDb */
    KnownBackupItemType["AzureSqlDb"] = "AzureSqlDb";
    /** Sqldb */
    KnownBackupItemType["Sqldb"] = "SQLDB";
    /** Exchange */
    KnownBackupItemType["Exchange"] = "Exchange";
    /** Sharepoint */
    KnownBackupItemType["Sharepoint"] = "Sharepoint";
    /** VMwareVM */
    KnownBackupItemType["VMwareVM"] = "VMwareVM";
    /** SystemState */
    KnownBackupItemType["SystemState"] = "SystemState";
    /** Client */
    KnownBackupItemType["Client"] = "Client";
    /** GenericDataSource */
    KnownBackupItemType["GenericDataSource"] = "GenericDataSource";
    /** SQLDataBase */
    KnownBackupItemType["SQLDataBase"] = "SQLDataBase";
    /** AzureFileShare */
    KnownBackupItemType["AzureFileShare"] = "AzureFileShare";
    /** SAPHanaDatabase */
    KnownBackupItemType["SAPHanaDatabase"] = "SAPHanaDatabase";
    /** SAPAseDatabase */
    KnownBackupItemType["SAPAseDatabase"] = "SAPAseDatabase";
    /** SAPHanaDBInstance */
    KnownBackupItemType["SAPHanaDBInstance"] = "SAPHanaDBInstance";
})(KnownBackupItemType || (KnownBackupItemType = {}));
/** Known values of {@link RehydrationPriority} that the service accepts. */
export var KnownRehydrationPriority;
(function (KnownRehydrationPriority) {
    /** Standard */
    KnownRehydrationPriority["Standard"] = "Standard";
    /** High */
    KnownRehydrationPriority["High"] = "High";
})(KnownRehydrationPriority || (KnownRehydrationPriority = {}));
//# sourceMappingURL=index.js.map