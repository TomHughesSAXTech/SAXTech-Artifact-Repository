/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing ProtectedItems operations. */
export class ProtectedItemsImpl {
    /**
     * Initialize a new instance of the class ProtectedItems class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Provides the details of the backed up item. This is an asynchronous operation. To know the status of
     * the operation,
     * call the GetItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up item.
     * @param containerName Container name associated with the backed up item.
     * @param protectedItemName Backed up item name whose details are to be fetched.
     * @param options The options parameters.
     */
    get(vaultName, resourceGroupName, fabricName, containerName, protectedItemName, options) {
        return this.client.sendOperationRequest({
            vaultName,
            resourceGroupName,
            fabricName,
            containerName,
            protectedItemName,
            options
        }, getOperationSpec);
    }
    /**
     * Enables backup of an item or to modifies the backup policy information of an already backed up item.
     * This is an
     * asynchronous operation. To know the status of the operation, call the GetItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backup item.
     * @param containerName Container name associated with the backup item.
     * @param protectedItemName Item name to be backed up.
     * @param parameters resource backed up item
     * @param options The options parameters.
     */
    createOrUpdate(vaultName, resourceGroupName, fabricName, containerName, protectedItemName, parameters, options) {
        return this.client.sendOperationRequest({
            vaultName,
            resourceGroupName,
            fabricName,
            containerName,
            protectedItemName,
            parameters,
            options
        }, createOrUpdateOperationSpec);
    }
    /**
     * Used to disable backup of an item within a container. This is an asynchronous operation. To know the
     * status of the
     * request, call the GetItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backed up item.
     * @param containerName Container name associated with the backed up item.
     * @param protectedItemName Backed up item to be deleted.
     * @param options The options parameters.
     */
    delete(vaultName, resourceGroupName, fabricName, containerName, protectedItemName, options) {
        return this.client.sendOperationRequest({
            vaultName,
            resourceGroupName,
            fabricName,
            containerName,
            protectedItemName,
            options
        }, deleteOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ProtectedItemResource
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    queryParameters: [Parameters.apiVersion, Parameters.filter],
    urlParameters: [
        Parameters.$host,
        Parameters.vaultName,
        Parameters.resourceGroupName,
        Parameters.subscriptionId,
        Parameters.fabricName,
        Parameters.containerName,
        Parameters.protectedItemName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const createOrUpdateOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}",
    httpMethod: "PUT",
    responses: {
        200: {
            bodyMapper: Mappers.ProtectedItemResource
        },
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    requestBody: Parameters.parameters11,
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.vaultName,
        Parameters.resourceGroupName,
        Parameters.subscriptionId,
        Parameters.fabricName,
        Parameters.containerName,
        Parameters.protectedItemName
    ],
    headerParameters: [Parameters.accept, Parameters.contentType],
    mediaType: "json",
    serializer
};
const deleteOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}",
    httpMethod: "DELETE",
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.vaultName,
        Parameters.resourceGroupName,
        Parameters.subscriptionId,
        Parameters.fabricName,
        Parameters.containerName,
        Parameters.protectedItemName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=protectedItems.js.map