import { BackupOperationResults } from "../operationsInterfaces";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import { BackupOperationResultsGetOptionalParams } from "../models";
/** Class containing BackupOperationResults operations. */
export declare class BackupOperationResultsImpl implements BackupOperationResults {
    private readonly client;
    /**
     * Initialize a new instance of the class BackupOperationResults class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesBackupClient);
    /**
     * Provides the status of the delete operations such as deleting backed up item. Once the operation has
     * started, the
     * status code in the response would be Accepted. It will continue to be in this state till it reaches
     * completion. On
     * successful completion, the status code will be OK. This method expects OperationID as an argument.
     * OperationID is
     * part of the Location header of the operation response.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId OperationID which represents the operation.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: BackupOperationResultsGetOptionalParams): Promise<void>;
}
//# sourceMappingURL=backupOperationResults.d.ts.map