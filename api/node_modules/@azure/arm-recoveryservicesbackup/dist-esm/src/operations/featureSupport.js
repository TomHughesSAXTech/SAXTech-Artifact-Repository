/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing FeatureSupport operations. */
export class FeatureSupportImpl {
    /**
     * Initialize a new instance of the class FeatureSupport class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * It will validate if given feature with resource properties is supported in service
     * @param azureRegion Azure region to hit Api
     * @param parameters Feature support request object
     * @param options The options parameters.
     */
    validate(azureRegion, parameters, options) {
        return this.client.sendOperationRequest({ azureRegion, parameters, options }, validateOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const validateOperationSpec = {
    path: "/Subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupValidateFeatures",
    httpMethod: "POST",
    responses: {
        200: {
            bodyMapper: Mappers.AzureVMResourceFeatureSupportResponse
        }
    },
    requestBody: Parameters.parameters4,
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.azureRegion
    ],
    headerParameters: [Parameters.accept, Parameters.contentType],
    mediaType: "json",
    serializer
};
//# sourceMappingURL=featureSupport.js.map