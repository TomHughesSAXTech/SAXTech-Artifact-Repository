import { ExportJobsOperationResults } from "../operationsInterfaces";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import { ExportJobsOperationResultsGetOptionalParams, ExportJobsOperationResultsGetResponse } from "../models";
/** Class containing ExportJobsOperationResults operations. */
export declare class ExportJobsOperationResultsImpl implements ExportJobsOperationResults {
    private readonly client;
    /**
     * Initialize a new instance of the class ExportJobsOperationResults class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesBackupClient);
    /**
     * Gets the operation result of operation triggered by Export Jobs API. If the operation is successful,
     * then it also
     * contains URL of a Blob and a SAS key to access the same. The blob contains exported jobs in JSON
     * serialized format.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId OperationID which represents the export job.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: ExportJobsOperationResultsGetOptionalParams): Promise<ExportJobsOperationResultsGetResponse>;
}
//# sourceMappingURL=exportJobsOperationResults.d.ts.map