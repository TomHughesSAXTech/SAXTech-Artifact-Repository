import { BMSPrepareDataMoveOperationResult } from "../operationsInterfaces";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import { BMSPrepareDataMoveOperationResultGetOptionalParams, BMSPrepareDataMoveOperationResultGetResponse } from "../models";
/** Class containing BMSPrepareDataMoveOperationResult operations. */
export declare class BMSPrepareDataMoveOperationResultImpl implements BMSPrepareDataMoveOperationResult {
    private readonly client;
    /**
     * Initialize a new instance of the class BMSPrepareDataMoveOperationResult class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesBackupClient);
    /**
     * Fetches Operation Result for Prepare Data Move
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param operationId
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: BMSPrepareDataMoveOperationResultGetOptionalParams): Promise<BMSPrepareDataMoveOperationResultGetResponse>;
}
//# sourceMappingURL=bMSPrepareDataMoveOperationResult.d.ts.map