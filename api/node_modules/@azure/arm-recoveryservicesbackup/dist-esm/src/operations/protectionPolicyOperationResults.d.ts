import { ProtectionPolicyOperationResults } from "../operationsInterfaces";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import { ProtectionPolicyOperationResultsGetOptionalParams, ProtectionPolicyOperationResultsGetResponse } from "../models";
/** Class containing ProtectionPolicyOperationResults operations. */
export declare class ProtectionPolicyOperationResultsImpl implements ProtectionPolicyOperationResults {
    private readonly client;
    /**
     * Initialize a new instance of the class ProtectionPolicyOperationResults class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesBackupClient);
    /**
     * Provides the result of an operation.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param policyName Backup policy name whose operation's result needs to be fetched.
     * @param operationId Operation ID which represents the operation whose result needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: ProtectionPolicyOperationResultsGetOptionalParams): Promise<ProtectionPolicyOperationResultsGetResponse>;
}
//# sourceMappingURL=protectionPolicyOperationResults.d.ts.map