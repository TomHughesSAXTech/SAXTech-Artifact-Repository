import { ProtectedItemOperationResults } from "../operationsInterfaces";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import { ProtectedItemOperationResultsGetOptionalParams, ProtectedItemOperationResultsGetResponse } from "../models";
/** Class containing ProtectedItemOperationResults operations. */
export declare class ProtectedItemOperationResultsImpl implements ProtectedItemOperationResults {
    private readonly client;
    /**
     * Initialize a new instance of the class ProtectedItemOperationResults class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesBackupClient);
    /**
     * Fetches the result of any operation on the backup item.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backup item.
     * @param containerName Container name associated with the backup item.
     * @param protectedItemName Backup item name whose details are to be fetched.
     * @param operationId OperationID which represents the operation whose result needs to be fetched.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: ProtectedItemOperationResultsGetOptionalParams): Promise<ProtectedItemOperationResultsGetResponse>;
}
//# sourceMappingURL=protectedItemOperationResults.d.ts.map