import { Backups } from "../operationsInterfaces";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import { BackupRequestResource, BackupsTriggerOptionalParams } from "../models";
/** Class containing Backups operations. */
export declare class BackupsImpl implements Backups {
    private readonly client;
    /**
     * Initialize a new instance of the class Backups class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesBackupClient);
    /**
     * Triggers backup for specified backed up item. This is an asynchronous operation. To know the status
     * of the
     * operation, call GetProtectedItemOperationResult API.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param fabricName Fabric name associated with the backup item.
     * @param containerName Container name associated with the backup item.
     * @param protectedItemName Backup item for which backup needs to be triggered.
     * @param parameters resource backup request
     * @param options The options parameters.
     */
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: BackupRequestResource, options?: BackupsTriggerOptionalParams): Promise<void>;
}
//# sourceMappingURL=backups.d.ts.map