import { BackupResourceEncryptionConfigsGetOptionalParams, BackupResourceEncryptionConfigsGetResponse, BackupResourceEncryptionConfigResource, BackupResourceEncryptionConfigsUpdateOptionalParams } from "../models";
/** Interface representing a BackupResourceEncryptionConfigs. */
export interface BackupResourceEncryptionConfigs {
    /**
     * Fetches Vault Encryption config.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param options The options parameters.
     */
    get(vaultName: string, resourceGroupName: string, options?: BackupResourceEncryptionConfigsGetOptionalParams): Promise<BackupResourceEncryptionConfigsGetResponse>;
    /**
     * Updates Vault encryption config.
     * @param vaultName The name of the recovery services vault.
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param parameters Vault encryption input config request
     * @param options The options parameters.
     */
    update(vaultName: string, resourceGroupName: string, parameters: BackupResourceEncryptionConfigResource, options?: BackupResourceEncryptionConfigsUpdateOptionalParams): Promise<void>;
}
//# sourceMappingURL=backupResourceEncryptionConfigs.d.ts.map