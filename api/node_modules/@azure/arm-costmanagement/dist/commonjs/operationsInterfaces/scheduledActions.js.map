{"version":3,"file":"scheduledActions.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/scheduledActions.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  ScheduledAction,\n  ScheduledActionsListOptionalParams,\n  ScheduledActionsListByScopeOptionalParams,\n  ScheduledActionsCreateOrUpdateOptionalParams,\n  ScheduledActionsCreateOrUpdateResponse,\n  ScheduledActionsGetOptionalParams,\n  ScheduledActionsGetResponse,\n  ScheduledActionsDeleteOptionalParams,\n  ScheduledActionsCreateOrUpdateByScopeOptionalParams,\n  ScheduledActionsCreateOrUpdateByScopeResponse,\n  ScheduledActionsGetByScopeOptionalParams,\n  ScheduledActionsGetByScopeResponse,\n  ScheduledActionsDeleteByScopeOptionalParams,\n  ScheduledActionsRunOptionalParams,\n  ScheduledActionsRunByScopeOptionalParams,\n  CheckNameAvailabilityRequest,\n  ScheduledActionsCheckNameAvailabilityOptionalParams,\n  ScheduledActionsCheckNameAvailabilityResponse,\n  ScheduledActionsCheckNameAvailabilityByScopeOptionalParams,\n  ScheduledActionsCheckNameAvailabilityByScopeResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a ScheduledActions. */\nexport interface ScheduledActions {\n  /**\n   * List all private scheduled actions.\n   * @param options The options parameters.\n   */\n  list(\n    options?: ScheduledActionsListOptionalParams\n  ): PagedAsyncIterableIterator<ScheduledAction>;\n  /**\n   * List all shared scheduled actions within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param options The options parameters.\n   */\n  listByScope(\n    scope: string,\n    options?: ScheduledActionsListByScopeOptionalParams\n  ): PagedAsyncIterableIterator<ScheduledAction>;\n  /**\n   * Create or update a private scheduled action.\n   * @param name Scheduled action name.\n   * @param scheduledAction Scheduled action to be created or updated.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    name: string,\n    scheduledAction: ScheduledAction,\n    options?: ScheduledActionsCreateOrUpdateOptionalParams\n  ): Promise<ScheduledActionsCreateOrUpdateResponse>;\n  /**\n   * Get the private scheduled action by name.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  get(\n    name: string,\n    options?: ScheduledActionsGetOptionalParams\n  ): Promise<ScheduledActionsGetResponse>;\n  /**\n   * Delete a private scheduled action.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  delete(\n    name: string,\n    options?: ScheduledActionsDeleteOptionalParams\n  ): Promise<void>;\n  /**\n   * Create or update a shared scheduled action within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param name Scheduled action name.\n   * @param scheduledAction Scheduled action to be created or updated.\n   * @param options The options parameters.\n   */\n  createOrUpdateByScope(\n    scope: string,\n    name: string,\n    scheduledAction: ScheduledAction,\n    options?: ScheduledActionsCreateOrUpdateByScopeOptionalParams\n  ): Promise<ScheduledActionsCreateOrUpdateByScopeResponse>;\n  /**\n   * Get the shared scheduled action from the given scope by name.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  getByScope(\n    scope: string,\n    name: string,\n    options?: ScheduledActionsGetByScopeOptionalParams\n  ): Promise<ScheduledActionsGetByScopeResponse>;\n  /**\n   * Delete a scheduled action within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  deleteByScope(\n    scope: string,\n    name: string,\n    options?: ScheduledActionsDeleteByScopeOptionalParams\n  ): Promise<void>;\n  /**\n   * Processes a private scheduled action.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  run(name: string, options?: ScheduledActionsRunOptionalParams): Promise<void>;\n  /**\n   * Runs a shared scheduled action within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param name Scheduled action name.\n   * @param options The options parameters.\n   */\n  runByScope(\n    scope: string,\n    name: string,\n    options?: ScheduledActionsRunByScopeOptionalParams\n  ): Promise<void>;\n  /**\n   * Checks availability and correctness of the name for a scheduled action.\n   * @param checkNameAvailabilityRequest Scheduled action to be created or updated.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    checkNameAvailabilityRequest: CheckNameAvailabilityRequest,\n    options?: ScheduledActionsCheckNameAvailabilityOptionalParams\n  ): Promise<ScheduledActionsCheckNameAvailabilityResponse>;\n  /**\n   * Checks availability and correctness of the name for a scheduled action within the given scope.\n   * @param scope The scope associated with scheduled action operations. This includes\n   *              'subscriptions/{subscriptionId}' for subscription scope,\n   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for InvoiceSection scope,\n   *              'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for\n   *              External Billing Account scope and\n   *              'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External\n   *              Subscription scope. Note: Insight Alerts are only available on subscription scope.\n   * @param checkNameAvailabilityRequest Scheduled action to be created or updated.\n   * @param options The options parameters.\n   */\n  checkNameAvailabilityByScope(\n    scope: string,\n    checkNameAvailabilityRequest: CheckNameAvailabilityRequest,\n    options?: ScheduledActionsCheckNameAvailabilityByScopeOptionalParams\n  ): Promise<ScheduledActionsCheckNameAvailabilityByScopeResponse>;\n}\n"]}