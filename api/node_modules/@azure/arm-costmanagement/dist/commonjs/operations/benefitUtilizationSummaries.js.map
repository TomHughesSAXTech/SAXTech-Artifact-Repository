{"version":3,"file":"benefitUtilizationSummaries.js","sourceRoot":"","sources":["../../../src/operations/benefitUtilizationSummaries.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { BenefitUtilizationSummaries } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { CostManagementClient } from \"../costManagementClient.js\";\nimport {\n  BenefitUtilizationSummaryUnion,\n  BenefitUtilizationSummariesListByBillingAccountIdNextOptionalParams,\n  BenefitUtilizationSummariesListByBillingAccountIdOptionalParams,\n  BenefitUtilizationSummariesListByBillingAccountIdResponse,\n  BenefitUtilizationSummariesListByBillingProfileIdNextOptionalParams,\n  BenefitUtilizationSummariesListByBillingProfileIdOptionalParams,\n  BenefitUtilizationSummariesListByBillingProfileIdResponse,\n  BenefitUtilizationSummariesListBySavingsPlanOrderNextOptionalParams,\n  BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams,\n  BenefitUtilizationSummariesListBySavingsPlanOrderResponse,\n  BenefitUtilizationSummariesListBySavingsPlanIdNextOptionalParams,\n  BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams,\n  BenefitUtilizationSummariesListBySavingsPlanIdResponse,\n  BenefitUtilizationSummariesListByBillingAccountIdNextResponse,\n  BenefitUtilizationSummariesListByBillingProfileIdNextResponse,\n  BenefitUtilizationSummariesListBySavingsPlanOrderNextResponse,\n  BenefitUtilizationSummariesListBySavingsPlanIdNextResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BenefitUtilizationSummaries operations. */\nexport class BenefitUtilizationSummariesImpl\n  implements BenefitUtilizationSummaries {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class BenefitUtilizationSummaries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain\n   * values: 'Daily' and 'Monthly'.\n   * @param billingAccountId Billing account ID\n   * @param options The options parameters.\n   */\n  public listByBillingAccountId(\n    billingAccountId: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdOptionalParams\n  ): PagedAsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    const iter = this.listByBillingAccountIdPagingAll(\n      billingAccountId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingAccountIdPagingPage(\n          billingAccountId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingAccountIdPagingPage(\n    billingAccountId: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion[]> {\n    let result: BenefitUtilizationSummariesListByBillingAccountIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingAccountId(billingAccountId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingAccountIdNext(\n        billingAccountId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingAccountIdPagingAll(\n    billingAccountId: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdOptionalParams\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    for await (const page of this.listByBillingAccountIdPagingPage(\n      billingAccountId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and\n   * 'Monthly'.\n   * @param billingAccountId Billing account ID\n   * @param billingProfileId Billing profile ID.\n   * @param options The options parameters.\n   */\n  public listByBillingProfileId(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdOptionalParams\n  ): PagedAsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    const iter = this.listByBillingProfileIdPagingAll(\n      billingAccountId,\n      billingProfileId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingProfileIdPagingPage(\n          billingAccountId,\n          billingProfileId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingProfileIdPagingPage(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion[]> {\n    let result: BenefitUtilizationSummariesListByBillingProfileIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingProfileId(\n        billingAccountId,\n        billingProfileId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingProfileIdNext(\n        billingAccountId,\n        billingProfileId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingProfileIdPagingAll(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdOptionalParams\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    for await (const page of this.listByBillingProfileIdPagingPage(\n      billingAccountId,\n      billingProfileId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the savings plan utilization summaries for daily or monthly grain.\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param options The options parameters.\n   */\n  public listBySavingsPlanOrder(\n    savingsPlanOrderId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams\n  ): PagedAsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    const iter = this.listBySavingsPlanOrderPagingAll(\n      savingsPlanOrderId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySavingsPlanOrderPagingPage(\n          savingsPlanOrderId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySavingsPlanOrderPagingPage(\n    savingsPlanOrderId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion[]> {\n    let result: BenefitUtilizationSummariesListBySavingsPlanOrderResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySavingsPlanOrder(savingsPlanOrderId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySavingsPlanOrderNext(\n        savingsPlanOrderId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySavingsPlanOrderPagingAll(\n    savingsPlanOrderId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    for await (const page of this.listBySavingsPlanOrderPagingPage(\n      savingsPlanOrderId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the savings plan utilization summaries for daily or monthly grain.\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param savingsPlanId Savings plan ID.\n   * @param options The options parameters.\n   */\n  public listBySavingsPlanId(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams\n  ): PagedAsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    const iter = this.listBySavingsPlanIdPagingAll(\n      savingsPlanOrderId,\n      savingsPlanId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySavingsPlanIdPagingPage(\n          savingsPlanOrderId,\n          savingsPlanId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySavingsPlanIdPagingPage(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion[]> {\n    let result: BenefitUtilizationSummariesListBySavingsPlanIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySavingsPlanId(\n        savingsPlanOrderId,\n        savingsPlanId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySavingsPlanIdNext(\n        savingsPlanOrderId,\n        savingsPlanId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySavingsPlanIdPagingAll(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams\n  ): AsyncIterableIterator<BenefitUtilizationSummaryUnion> {\n    for await (const page of this.listBySavingsPlanIdPagingPage(\n      savingsPlanOrderId,\n      savingsPlanId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain\n   * values: 'Daily' and 'Monthly'.\n   * @param billingAccountId Billing account ID\n   * @param options The options parameters.\n   */\n  private _listByBillingAccountId(\n    billingAccountId: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdOptionalParams\n  ): Promise<BenefitUtilizationSummariesListByBillingAccountIdResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, options },\n      listByBillingAccountIdOperationSpec\n    );\n  }\n\n  /**\n   * Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and\n   * 'Monthly'.\n   * @param billingAccountId Billing account ID\n   * @param billingProfileId Billing profile ID.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfileId(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdOptionalParams\n  ): Promise<BenefitUtilizationSummariesListByBillingProfileIdResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, options },\n      listByBillingProfileIdOperationSpec\n    );\n  }\n\n  /**\n   * Lists the savings plan utilization summaries for daily or monthly grain.\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param options The options parameters.\n   */\n  private _listBySavingsPlanOrder(\n    savingsPlanOrderId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderOptionalParams\n  ): Promise<BenefitUtilizationSummariesListBySavingsPlanOrderResponse> {\n    return this.client.sendOperationRequest(\n      { savingsPlanOrderId, options },\n      listBySavingsPlanOrderOperationSpec\n    );\n  }\n\n  /**\n   * Lists the savings plan utilization summaries for daily or monthly grain.\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param savingsPlanId Savings plan ID.\n   * @param options The options parameters.\n   */\n  private _listBySavingsPlanId(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdOptionalParams\n  ): Promise<BenefitUtilizationSummariesListBySavingsPlanIdResponse> {\n    return this.client.sendOperationRequest(\n      { savingsPlanOrderId, savingsPlanId, options },\n      listBySavingsPlanIdOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingAccountIdNext\n   * @param billingAccountId Billing account ID\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingAccountId method.\n   * @param options The options parameters.\n   */\n  private _listByBillingAccountIdNext(\n    billingAccountId: string,\n    nextLink: string,\n    options?: BenefitUtilizationSummariesListByBillingAccountIdNextOptionalParams\n  ): Promise<BenefitUtilizationSummariesListByBillingAccountIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, nextLink, options },\n      listByBillingAccountIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingProfileIdNext\n   * @param billingAccountId Billing account ID\n   * @param billingProfileId Billing profile ID.\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingProfileId method.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfileIdNext(\n    billingAccountId: string,\n    billingProfileId: string,\n    nextLink: string,\n    options?: BenefitUtilizationSummariesListByBillingProfileIdNextOptionalParams\n  ): Promise<BenefitUtilizationSummariesListByBillingProfileIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, nextLink, options },\n      listByBillingProfileIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySavingsPlanOrderNext\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param nextLink The nextLink from the previous successful call to the ListBySavingsPlanOrder method.\n   * @param options The options parameters.\n   */\n  private _listBySavingsPlanOrderNext(\n    savingsPlanOrderId: string,\n    nextLink: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanOrderNextOptionalParams\n  ): Promise<BenefitUtilizationSummariesListBySavingsPlanOrderNextResponse> {\n    return this.client.sendOperationRequest(\n      { savingsPlanOrderId, nextLink, options },\n      listBySavingsPlanOrderNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySavingsPlanIdNext\n   * @param savingsPlanOrderId Savings plan order ID.\n   * @param savingsPlanId Savings plan ID.\n   * @param nextLink The nextLink from the previous successful call to the ListBySavingsPlanId method.\n   * @param options The options parameters.\n   */\n  private _listBySavingsPlanIdNext(\n    savingsPlanOrderId: string,\n    savingsPlanId: string,\n    nextLink: string,\n    options?: BenefitUtilizationSummariesListBySavingsPlanIdNextOptionalParams\n  ): Promise<BenefitUtilizationSummariesListBySavingsPlanIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { savingsPlanOrderId, savingsPlanId, nextLink, options },\n      listBySavingsPlanIdNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByBillingAccountIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.grainParameter,\n    Parameters.filter1\n  ],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingProfileIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.grainParameter,\n    Parameters.filter1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySavingsPlanOrderOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.grainParameter\n  ],\n  urlParameters: [Parameters.$host, Parameters.savingsPlanOrderId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySavingsPlanIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.grainParameter\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.savingsPlanOrderId,\n    Parameters.savingsPlanId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingAccountIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingProfileIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySavingsPlanOrderNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.savingsPlanOrderId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySavingsPlanIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BenefitUtilizationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.savingsPlanOrderId,\n    Parameters.savingsPlanId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}