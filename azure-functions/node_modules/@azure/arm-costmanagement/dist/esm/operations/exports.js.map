{"version":3,"file":"exports.js","sourceRoot":"","sources":["../../../src/operations/exports.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAgBtD,2CAA2C;AAC3C,MAAM,OAAO,WAAW;IACL,MAAM,CAAuB;IAE9C;;;OAGG;IACH,YAAY,MAA4B;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;;;;;;;;;;;;;OAkBG;IACH,IAAI,CACF,KAAa,EACb,OAAmC;QAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,OAAO,EAAE,EAClB,iBAAiB,CAClB,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;;;;;;;;OAmBG;IACH,GAAG,CACD,KAAa,EACb,UAAkB,EAClB,OAAkC;QAElC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,EAC9B,gBAAgB,CACjB,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;OAsBG;IACH,cAAc,CACZ,KAAa,EACb,UAAkB,EAClB,UAAkB,EAClB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1C,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;;;;;;;;OAmBG;IACH,MAAM,CACJ,KAAa,EACb,UAAkB,EAClB,OAAqC;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,EAC9B,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;;;;;;;;OAmBG;IACH,OAAO,CACL,KAAa,EACb,UAAkB,EAClB,OAAsC;QAEtC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,EAC9B,oBAAoB,CACrB,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;;;;;;;;OAmBG;IACH,mBAAmB,CACjB,KAAa,EACb,UAAkB,EAClB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,EAC9B,gCAAgC,CACjC,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,qDAAqD;IAC3D,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC;IAC3D,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC;IACpD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EAAE,kEAAkE;IACxE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,MAAM;SAC3B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC;IAC3D,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,CAAC;IAC3E,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,kEAAkE;IACxE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,MAAM;SAC3B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,MAAM;SAC3B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,WAAW;IACnC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,CAAC;IAC3E,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,kEAAkE;IACxE,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,CAAC;IAC3E,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EAAE,sEAAsE;IAC5E,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,CAAC;IAC3E,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EACF,6EAA6E;IAC/E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,CAAC;IAC3E,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Exports } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { CostManagementClient } from \"../costManagementClient.js\";\nimport {\n  ExportsListOptionalParams,\n  ExportsListResponse,\n  ExportsGetOptionalParams,\n  ExportsGetResponse,\n  Export,\n  ExportsCreateOrUpdateOptionalParams,\n  ExportsCreateOrUpdateResponse,\n  ExportsDeleteOptionalParams,\n  ExportsExecuteOptionalParams,\n  ExportsGetExecutionHistoryOptionalParams,\n  ExportsGetExecutionHistoryResponse\n} from \"../models/index.js\";\n\n/** Class containing Exports operations. */\nexport class ExportsImpl implements Exports {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class Exports class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to list all exports at the given scope.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param options The options parameters.\n   */\n  list(\n    scope: string,\n    options?: ExportsListOptionalParams\n  ): Promise<ExportsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * The operation to get the export for the defined scope by export name.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    exportName: string,\n    options?: ExportsGetOptionalParams\n  ): Promise<ExportsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The operation to create or update a export. Update operation requires latest eTag to be set in the\n   * request. You may obtain the latest eTag by performing a get operation. Create operation does not\n   * require eTag.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param parameters Parameters supplied to the CreateOrUpdate Export operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    scope: string,\n    exportName: string,\n    parameters: Export,\n    options?: ExportsCreateOrUpdateOptionalParams\n  ): Promise<ExportsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * The operation to delete a export.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param options The options parameters.\n   */\n  delete(\n    scope: string,\n    exportName: string,\n    options?: ExportsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * The operation to run an export.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param options The options parameters.\n   */\n  execute(\n    scope: string,\n    exportName: string,\n    options?: ExportsExecuteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, options },\n      executeOperationSpec\n    );\n  }\n\n  /**\n   * The operation to get the run history of an export for the defined scope and export name.\n   * @param scope The scope associated with export operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific\n   *              for partners.\n   * @param exportName Export Name.\n   * @param options The options parameters.\n   */\n  getExecutionHistory(\n    scope: string,\n    exportName: string,\n    options?: ExportsGetExecutionHistoryOptionalParams\n  ): Promise<ExportsGetExecutionHistoryResponse> {\n    return this.client.sendOperationRequest(\n      { scope, exportName, options },\n      getExecutionHistoryOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExportListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Export\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Export\n    },\n    201: {\n      bodyMapper: Mappers.Export\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst executeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}/run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getExecutionHistoryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.CostManagement/exports/{exportName}/runHistory\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExportExecutionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1, Parameters.exportName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}