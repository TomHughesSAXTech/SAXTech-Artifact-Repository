"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateDetailedCostReportOperationStatusImpl = void 0;
const tslib_1 = require("tslib");
const coreClient = tslib_1.__importStar(require("@azure/core-client"));
const Mappers = tslib_1.__importStar(require("../models/mappers.js"));
const Parameters = tslib_1.__importStar(require("../models/parameters.js"));
/** Class containing GenerateDetailedCostReportOperationStatus operations. */
class GenerateDetailedCostReportOperationStatusImpl {
    client;
    /**
     * Initialize a new instance of the class GenerateDetailedCostReportOperationStatus class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Get the status of the specified operation. This link is provided in the GenerateDetailedCostReport
     * creation request response header.
     * @param operationId The target operation Id.
     * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing
     *              scopes. For details, see https://aka.ms/costmgmt/scopes.
     * @param options The options parameters.
     */
    get(operationId, scope, options) {
        return this.client.sendOperationRequest({ operationId, scope, options }, getOperationSpec);
    }
}
exports.GenerateDetailedCostReportOperationStatusImpl = GenerateDetailedCostReportOperationStatusImpl;
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getOperationSpec = {
    path: "/{scope}/providers/Microsoft.CostManagement/operationStatus/{operationId}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.GenerateDetailedCostReportOperationStatuses
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [Parameters.$host, Parameters.scope1, Parameters.operationId],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=generateDetailedCostReportOperationStatus.js.map