{"version":3,"file":"generateDetailedCostReport.js","sourceRoot":"","sources":["../../../src/operations/generateDetailedCostReport.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GenerateDetailedCostReport } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { CostManagementClient } from \"../costManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  GenerateDetailedCostReportDefinition,\n  GenerateDetailedCostReportCreateOperationOptionalParams,\n  GenerateDetailedCostReportCreateOperationResponse\n} from \"../models/index.js\";\n\n/** Class containing GenerateDetailedCostReport operations. */\nexport class GenerateDetailedCostReportImpl\n  implements GenerateDetailedCostReport {\n  private readonly client: CostManagementClient;\n\n  /**\n   * Initialize a new instance of the class GenerateDetailedCostReport class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CostManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Generates the detailed cost report for provided date range, billing period(only enterprise\n   * customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header\n   * Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation\n   * will provide the status and if the operation is completed the blob file where generated detailed\n   * cost report is being stored.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param parameters Parameters supplied to the Create detailed cost report operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOperation(\n    scope: string,\n    parameters: GenerateDetailedCostReportDefinition,\n    options?: GenerateDetailedCostReportCreateOperationOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GenerateDetailedCostReportCreateOperationResponse>,\n      GenerateDetailedCostReportCreateOperationResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GenerateDetailedCostReportCreateOperationResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, parameters, options },\n      spec: createOperationOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GenerateDetailedCostReportCreateOperationResponse,\n      OperationState<GenerateDetailedCostReportCreateOperationResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Generates the detailed cost report for provided date range, billing period(only enterprise\n   * customers) or Invoice ID asynchronously at a certain scope. Call returns a 202 with header\n   * Azure-Consumption-AsyncOperation providing a link to the operation created. A call on the operation\n   * will provide the status and if the operation is completed the blob file where generated detailed\n   * cost report is being stored.\n   * @param scope The ARM Resource ID for subscription, resource group, billing account, or other billing\n   *              scopes. For details, see https://aka.ms/costmgmt/scopes.\n   * @param parameters Parameters supplied to the Create detailed cost report operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOperationAndWait(\n    scope: string,\n    parameters: GenerateDetailedCostReportDefinition,\n    options?: GenerateDetailedCostReportCreateOperationOptionalParams\n  ): Promise<GenerateDetailedCostReportCreateOperationResponse> {\n    const poller = await this.beginCreateOperation(scope, parameters, options);\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.CostManagement/generateDetailedCostReport\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.GenerateDetailedCostReportOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.GenerateDetailedCostReportErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope1],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n"]}