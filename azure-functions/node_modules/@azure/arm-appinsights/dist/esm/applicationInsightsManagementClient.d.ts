import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Components, Annotations, APIKeys, ExportConfigurations, ComponentCurrentBillingFeatures, ComponentQuotaStatus, ComponentFeatureCapabilities, ComponentAvailableFeatures, ProactiveDetectionConfigurations, WorkItemConfigurations, Favorites, WebTestLocations, WebTests, AnalyticsItems, Operations, WorkbookTemplates, Workbooks, LiveToken, ComponentLinkedStorageAccountsOperations, DeletedWorkbooks } from "./operationsInterfaces/index.js";
import { ApplicationInsightsManagementClientOptionalParams } from "./models/index.js";
export declare class ApplicationInsightsManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId?: string;
    /**
     * Initializes a new instance of the ApplicationInsightsManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ApplicationInsightsManagementClientOptionalParams);
    constructor(credentials: coreAuth.TokenCredential, options?: ApplicationInsightsManagementClientOptionalParams);
    components: Components;
    annotations: Annotations;
    aPIKeys: APIKeys;
    exportConfigurations: ExportConfigurations;
    componentCurrentBillingFeatures: ComponentCurrentBillingFeatures;
    componentQuotaStatus: ComponentQuotaStatus;
    componentFeatureCapabilities: ComponentFeatureCapabilities;
    componentAvailableFeatures: ComponentAvailableFeatures;
    proactiveDetectionConfigurations: ProactiveDetectionConfigurations;
    workItemConfigurations: WorkItemConfigurations;
    favorites: Favorites;
    webTestLocations: WebTestLocations;
    webTests: WebTests;
    analyticsItems: AnalyticsItems;
    operations: Operations;
    workbookTemplates: WorkbookTemplates;
    workbooks: Workbooks;
    liveToken: LiveToken;
    componentLinkedStorageAccountsOperations: ComponentLinkedStorageAccountsOperations;
    deletedWorkbooks: DeletedWorkbooks;
}
//# sourceMappingURL=applicationInsightsManagementClient.d.ts.map