/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { ApplicationInsightsComponent as ApplicationInsightsComponentMapper, TagsResource as TagsResourceMapper, ComponentPurgeBody as ComponentPurgeBodyMapper, Annotation as AnnotationMapper, APIKeyRequest as APIKeyRequestMapper, ApplicationInsightsComponentExportRequest as ApplicationInsightsComponentExportRequestMapper, ApplicationInsightsComponentBillingFeatures as ApplicationInsightsComponentBillingFeaturesMapper, ApplicationInsightsComponentProactiveDetectionConfiguration as ApplicationInsightsComponentProactiveDetectionConfigurationMapper, WorkItemCreateConfiguration as WorkItemCreateConfigurationMapper, ApplicationInsightsComponentFavorite as ApplicationInsightsComponentFavoriteMapper, WebTest as WebTestMapper, ApplicationInsightsComponentAnalyticsItem as ApplicationInsightsComponentAnalyticsItemMapper, WorkbookTemplate as WorkbookTemplateMapper, WorkbookTemplateUpdateParameters as WorkbookTemplateUpdateParametersMapper, Workbook as WorkbookMapper, WorkbookUpdateParameters as WorkbookUpdateParametersMapper, ComponentLinkedStorageAccounts as ComponentLinkedStorageAccountsMapper, ComponentLinkedStorageAccountsPatch as ComponentLinkedStorageAccountsPatchMapper, } from "../models/mappers.js";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-02-02",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1,
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1,
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const resourceName = {
    parameterPath: "resourceName",
    mapper: {
        serializedName: "resourceName",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
export const insightProperties = {
    parameterPath: "insightProperties",
    mapper: ApplicationInsightsComponentMapper,
};
export const componentTags = {
    parameterPath: "componentTags",
    mapper: TagsResourceMapper,
};
export const body = {
    parameterPath: "body",
    mapper: ComponentPurgeBodyMapper,
};
export const purgeId = {
    parameterPath: "purgeId",
    mapper: {
        serializedName: "purgeId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
export const apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2015-05-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const start = {
    parameterPath: "start",
    mapper: {
        serializedName: "start",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const end = {
    parameterPath: "end",
    mapper: {
        serializedName: "end",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const annotationProperties = {
    parameterPath: "annotationProperties",
    mapper: AnnotationMapper,
};
export const annotationId = {
    parameterPath: "annotationId",
    mapper: {
        serializedName: "annotationId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const aPIKeyProperties = {
    parameterPath: "aPIKeyProperties",
    mapper: APIKeyRequestMapper,
};
export const keyId = {
    parameterPath: "keyId",
    mapper: {
        serializedName: "keyId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const exportProperties = {
    parameterPath: "exportProperties",
    mapper: ApplicationInsightsComponentExportRequestMapper,
};
export const exportId = {
    parameterPath: "exportId",
    mapper: {
        serializedName: "exportId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const billingFeaturesProperties = {
    parameterPath: "billingFeaturesProperties",
    mapper: ApplicationInsightsComponentBillingFeaturesMapper,
};
export const configurationId = {
    parameterPath: "configurationId",
    mapper: {
        serializedName: "ConfigurationId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const proactiveDetectionProperties = {
    parameterPath: "proactiveDetectionProperties",
    mapper: ApplicationInsightsComponentProactiveDetectionConfigurationMapper,
};
export const workItemConfigurationProperties = {
    parameterPath: "workItemConfigurationProperties",
    mapper: WorkItemCreateConfigurationMapper,
};
export const workItemConfigId = {
    parameterPath: "workItemConfigId",
    mapper: {
        serializedName: "workItemConfigId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const favoriteType = {
    parameterPath: ["options", "favoriteType"],
    mapper: {
        serializedName: "favoriteType",
        type: {
            name: "Enum",
            allowedValues: ["shared", "user"],
        },
    },
};
export const sourceType = {
    parameterPath: ["options", "sourceType"],
    mapper: {
        serializedName: "sourceType",
        type: {
            name: "String",
        },
    },
};
export const canFetchContent = {
    parameterPath: ["options", "canFetchContent"],
    mapper: {
        serializedName: "canFetchContent",
        type: {
            name: "Boolean",
        },
    },
};
export const tags = {
    parameterPath: ["options", "tags"],
    mapper: {
        serializedName: "tags",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String",
                },
            },
        },
    },
    collectionFormat: "CSV",
};
export const favoriteId = {
    parameterPath: "favoriteId",
    mapper: {
        serializedName: "favoriteId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const favoriteProperties = {
    parameterPath: "favoriteProperties",
    mapper: ApplicationInsightsComponentFavoriteMapper,
};
export const apiVersion2 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-06-15",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const webTestName = {
    parameterPath: "webTestName",
    mapper: {
        serializedName: "webTestName",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const webTestDefinition = {
    parameterPath: "webTestDefinition",
    mapper: WebTestMapper,
};
export const webTestTags = {
    parameterPath: "webTestTags",
    mapper: TagsResourceMapper,
};
export const componentName = {
    parameterPath: "componentName",
    mapper: {
        serializedName: "componentName",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const scopePath = {
    parameterPath: "scopePath",
    mapper: {
        serializedName: "scopePath",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const scope = {
    parameterPath: ["options", "scope"],
    mapper: {
        serializedName: "scope",
        type: {
            name: "String",
        },
    },
};
export const typeParam = {
    parameterPath: ["options", "type"],
    mapper: {
        defaultValue: "none",
        serializedName: "type",
        type: {
            name: "String",
        },
    },
};
export const includeContent = {
    parameterPath: ["options", "includeContent"],
    mapper: {
        serializedName: "includeContent",
        type: {
            name: "Boolean",
        },
    },
};
export const id = {
    parameterPath: ["options", "id"],
    mapper: {
        serializedName: "id",
        type: {
            name: "String",
        },
    },
};
export const name = {
    parameterPath: ["options", "name"],
    mapper: {
        serializedName: "name",
        type: {
            name: "String",
        },
    },
};
export const itemProperties = {
    parameterPath: "itemProperties",
    mapper: ApplicationInsightsComponentAnalyticsItemMapper,
};
export const overrideItem = {
    parameterPath: ["options", "overrideItem"],
    mapper: {
        serializedName: "overrideItem",
        type: {
            name: "Boolean",
        },
    },
};
export const apiVersion3 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-03-08",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const apiVersion4 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-11-20",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const workbookTemplateProperties = {
    parameterPath: "workbookTemplateProperties",
    mapper: WorkbookTemplateMapper,
};
export const workbookTemplateUpdateParameters = {
    parameterPath: ["options", "workbookTemplateUpdateParameters"],
    mapper: WorkbookTemplateUpdateParametersMapper,
};
export const category = {
    parameterPath: "category",
    mapper: {
        serializedName: "category",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const apiVersion5 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2023-06-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const sourceId = {
    parameterPath: ["options", "sourceId"],
    mapper: {
        serializedName: "sourceId",
        type: {
            name: "String",
        },
    },
};
export const workbookProperties = {
    parameterPath: "workbookProperties",
    mapper: WorkbookMapper,
};
export const workbookUpdateParameters = {
    parameterPath: ["options", "workbookUpdateParameters"],
    mapper: WorkbookUpdateParametersMapper,
};
export const revisionId = {
    parameterPath: "revisionId",
    mapper: {
        serializedName: "revisionId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const resourceUri = {
    parameterPath: "resourceUri",
    mapper: {
        serializedName: "resourceUri",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
export const apiVersion6 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-10-14",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const apiVersion7 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-03-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const storageType = {
    parameterPath: "storageType",
    mapper: {
        serializedName: "storageType",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const linkedStorageAccountsProperties = {
    parameterPath: "linkedStorageAccountsProperties",
    mapper: ComponentLinkedStorageAccountsMapper,
};
export const linkedStorageAccountsProperties1 = {
    parameterPath: "linkedStorageAccountsProperties",
    mapper: ComponentLinkedStorageAccountsPatchMapper,
};
export const category1 = {
    parameterPath: ["options", "category"],
    mapper: {
        serializedName: "category",
        type: {
            name: "String",
        },
    },
};
export const apiVersion8 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-02-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
//# sourceMappingURL=parameters.js.map