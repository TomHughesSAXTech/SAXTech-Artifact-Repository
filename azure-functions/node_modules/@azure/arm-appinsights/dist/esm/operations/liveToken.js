/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
/** Class containing LiveToken operations. */
export class LiveTokenImpl {
    /**
     * Initialize a new instance of the class LiveToken class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * **Gets an access token for live metrics stream data.**
     * @param resourceUri The identifier of the resource.
     * @param options The options parameters.
     */
    get(resourceUri, options) {
        return this.client.sendOperationRequest({ resourceUri, options }, getOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getOperationSpec = {
    path: "/{resourceUri}/providers/Microsoft.Insights/generatelivetoken",
    httpMethod: "POST",
    responses: {
        200: {
            bodyMapper: Mappers.LiveTokenResponse,
        },
        default: {
            bodyMapper: Mappers.ErrorResponseLinkedStorage,
        },
    },
    queryParameters: [Parameters.apiVersion6],
    urlParameters: [Parameters.$host, Parameters.resourceUri],
    headerParameters: [Parameters.accept],
    serializer,
};
//# sourceMappingURL=liveToken.js.map