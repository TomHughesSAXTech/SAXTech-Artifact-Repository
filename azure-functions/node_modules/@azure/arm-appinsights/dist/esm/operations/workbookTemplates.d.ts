import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { WorkbookTemplates } from "../operationsInterfaces/index.js";
import { ApplicationInsightsManagementClient } from "../applicationInsightsManagementClient.js";
import { WorkbookTemplate, WorkbookTemplatesListByResourceGroupOptionalParams, WorkbookTemplatesGetOptionalParams, WorkbookTemplatesGetResponse, WorkbookTemplatesDeleteOptionalParams, WorkbookTemplatesCreateOrUpdateOptionalParams, WorkbookTemplatesCreateOrUpdateResponse, WorkbookTemplatesUpdateOptionalParams, WorkbookTemplatesUpdateResponse } from "../models/index.js";
/** Class containing WorkbookTemplates operations. */
export declare class WorkbookTemplatesImpl implements WorkbookTemplates {
    private readonly client;
    /**
     * Initialize a new instance of the class WorkbookTemplates class.
     * @param client Reference to the service client
     */
    constructor(client: ApplicationInsightsManagementClient);
    /**
     * Get all Workbook templates defined within a specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: WorkbookTemplatesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<WorkbookTemplate>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Get all Workbook templates defined within a specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Get a single workbook template by its resourceName.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: WorkbookTemplatesGetOptionalParams): Promise<WorkbookTemplatesGetResponse>;
    /**
     * Delete a workbook template.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, options?: WorkbookTemplatesDeleteOptionalParams): Promise<void>;
    /**
     * Create a new workbook template.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookTemplateProperties Properties that need to be specified to create a new workbook.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, workbookTemplateProperties: WorkbookTemplate, options?: WorkbookTemplatesCreateOrUpdateOptionalParams): Promise<WorkbookTemplatesCreateOrUpdateResponse>;
    /**
     * Updates a workbook template that has already been added.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, options?: WorkbookTemplatesUpdateOptionalParams): Promise<WorkbookTemplatesUpdateResponse>;
}
//# sourceMappingURL=workbookTemplates.d.ts.map