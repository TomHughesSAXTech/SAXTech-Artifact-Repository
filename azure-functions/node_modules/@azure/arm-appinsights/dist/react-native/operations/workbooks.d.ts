import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Workbooks } from "../operationsInterfaces/index.js";
import { ApplicationInsightsManagementClient } from "../applicationInsightsManagementClient.js";
import { Workbook, CategoryType, WorkbooksListBySubscriptionOptionalParams, WorkbooksListByResourceGroupOptionalParams, WorkbooksRevisionsListOptionalParams, WorkbooksGetOptionalParams, WorkbooksGetResponse, WorkbooksDeleteOptionalParams, WorkbooksCreateOrUpdateOptionalParams, WorkbooksCreateOrUpdateResponse, WorkbooksUpdateOptionalParams, WorkbooksUpdateResponse, WorkbooksRevisionGetOptionalParams, WorkbooksRevisionGetResponse } from "../models/index.js";
/** Class containing Workbooks operations. */
export declare class WorkbooksImpl implements Workbooks {
    private readonly client;
    /**
     * Initialize a new instance of the class Workbooks class.
     * @param client Reference to the service client
     */
    constructor(client: ApplicationInsightsManagementClient);
    /**
     * Get all Workbooks defined within a specified subscription and category.
     * @param category Category of workbook to return.
     * @param options The options parameters.
     */
    listBySubscription(category: CategoryType, options?: WorkbooksListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Workbook>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Get all Workbooks defined within a specified resource group and category.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param category Category of workbook to return.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, category: CategoryType, options?: WorkbooksListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Workbook>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Get the revisions for the workbook defined by its resourceName.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the workbook resource. The value must be an UUID.
     * @param options The options parameters.
     */
    listRevisionsList(resourceGroupName: string, resourceName: string, options?: WorkbooksRevisionsListOptionalParams): PagedAsyncIterableIterator<Workbook>;
    private revisionsListPagingPage;
    private revisionsListPagingAll;
    /**
     * Get all Workbooks defined within a specified subscription and category.
     * @param category Category of workbook to return.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Get all Workbooks defined within a specified resource group and category.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param category Category of workbook to return.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Get a single workbook by its resourceName.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the workbook resource. The value must be an UUID.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: WorkbooksGetOptionalParams): Promise<WorkbooksGetResponse>;
    /**
     * Delete a workbook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the workbook resource. The value must be an UUID.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, options?: WorkbooksDeleteOptionalParams): Promise<void>;
    /**
     * Create a new workbook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the workbook resource. The value must be an UUID.
     * @param workbookProperties Properties that need to be specified to create a new workbook.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Workbook, options?: WorkbooksCreateOrUpdateOptionalParams): Promise<WorkbooksCreateOrUpdateResponse>;
    /**
     * Updates a workbook that has already been added.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the workbook resource. The value must be an UUID.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, options?: WorkbooksUpdateOptionalParams): Promise<WorkbooksUpdateResponse>;
    /**
     * Get the revisions for the workbook defined by its resourceName.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the workbook resource. The value must be an UUID.
     * @param options The options parameters.
     */
    private _revisionsList;
    /**
     * Get a single workbook revision defined by its revisionId.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the workbook resource. The value must be an UUID.
     * @param revisionId The id of the workbook's revision.
     * @param options The options parameters.
     */
    revisionGet(resourceGroupName: string, resourceName: string, revisionId: string, options?: WorkbooksRevisionGetOptionalParams): Promise<WorkbooksRevisionGetResponse>;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * RevisionsListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the workbook resource. The value must be an UUID.
     * @param nextLink The nextLink from the previous successful call to the RevisionsList method.
     * @param options The options parameters.
     */
    private _revisionsListNext;
}
//# sourceMappingURL=workbooks.d.ts.map