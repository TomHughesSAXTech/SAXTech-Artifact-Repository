{"version":3,"file":"exportConfigurations.js","sourceRoot":"","sources":["../../../src/operations/exportConfigurations.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAgBtD,wDAAwD;AACxD,MAAM,OAAO,wBAAwB;IAGnC;;;OAGG;IACH,YAAY,MAA2C;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACH,IAAI,CACF,iBAAyB,EACzB,YAAoB,EACpB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5C,iBAAiB,CAClB,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,MAAM,CACJ,iBAAyB,EACzB,YAAoB,EACpB,gBAA2D,EAC3D,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC9D,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,MAAM,CACJ,iBAAyB,EACzB,YAAoB,EACpB,QAAgB,EAChB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EACtD,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,GAAG,CACD,iBAAyB,EACzB,YAAoB,EACpB,QAAgB,EAChB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EACtD,gBAAgB,CACjB,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,MAAM,CACJ,iBAAyB,EACzB,YAAoB,EACpB,QAAgB,EAChB,gBAA2D,EAC3D,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,EAAE,EACxE,mBAAmB,CACpB,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iDAAiD;yBAC7D;qBACF;iBACF;aACF;SACF;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iDAAiD;yBAC7D;qBACF;iBACF;aACF;SACF;KACF;IACD,WAAW,EAAE,UAAU,CAAC,gBAAgB;IACxC,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,0JAA0J;IAChK,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,+CAA+C;SACpE;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EAAE,0JAA0J;IAChK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,+CAA+C;SACpE;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,0JAA0J;IAChK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,+CAA+C;SACpE;KACF;IACD,WAAW,EAAE,UAAU,CAAC,gBAAgB;IACxC,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ExportConfigurations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ApplicationInsightsManagementClient } from \"../applicationInsightsManagementClient.js\";\nimport {\n  ExportConfigurationsListOptionalParams,\n  ExportConfigurationsListResponse,\n  ApplicationInsightsComponentExportRequest,\n  ExportConfigurationsCreateOptionalParams,\n  ExportConfigurationsCreateResponse,\n  ExportConfigurationsDeleteOptionalParams,\n  ExportConfigurationsDeleteResponse,\n  ExportConfigurationsGetOptionalParams,\n  ExportConfigurationsGetResponse,\n  ExportConfigurationsUpdateOptionalParams,\n  ExportConfigurationsUpdateResponse,\n} from \"../models/index.js\";\n\n/** Class containing ExportConfigurations operations. */\nexport class ExportConfigurationsImpl implements ExportConfigurations {\n  private readonly client: ApplicationInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class ExportConfigurations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ApplicationInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of Continuous Export configuration of an Application Insights component.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the Application Insights component resource.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: ExportConfigurationsListOptionalParams,\n  ): Promise<ExportConfigurationsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * Create a Continuous Export configuration of an Application Insights component.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the Application Insights component resource.\n   * @param exportProperties Properties that need to be specified to create a Continuous Export\n   *                         configuration of a Application Insights component.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    resourceName: string,\n    exportProperties: ApplicationInsightsComponentExportRequest,\n    options?: ExportConfigurationsCreateOptionalParams,\n  ): Promise<ExportConfigurationsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, exportProperties, options },\n      createOperationSpec,\n    );\n  }\n\n  /**\n   * Delete a Continuous Export configuration of an Application Insights component.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the Application Insights component resource.\n   * @param exportId The Continuous Export configuration ID. This is unique within a Application Insights\n   *                 component.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    resourceName: string,\n    exportId: string,\n    options?: ExportConfigurationsDeleteOptionalParams,\n  ): Promise<ExportConfigurationsDeleteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, exportId, options },\n      deleteOperationSpec,\n    );\n  }\n\n  /**\n   * Get the Continuous Export configuration for this export id.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the Application Insights component resource.\n   * @param exportId The Continuous Export configuration ID. This is unique within a Application Insights\n   *                 component.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    exportId: string,\n    options?: ExportConfigurationsGetOptionalParams,\n  ): Promise<ExportConfigurationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, exportId, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Update the Continuous Export configuration for this export id.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the Application Insights component resource.\n   * @param exportId The Continuous Export configuration ID. This is unique within a Application Insights\n   *                 component.\n   * @param exportProperties Properties that need to be specified to update the Continuous Export\n   *                         configuration.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    resourceName: string,\n    exportId: string,\n    exportProperties: ApplicationInsightsComponentExportRequest,\n    options?: ExportConfigurationsUpdateOptionalParams,\n  ): Promise<ExportConfigurationsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, exportId, exportProperties, options },\n      updateOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApplicationInsightsComponentExportConfiguration\",\n            },\n          },\n        },\n      },\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApplicationInsightsComponentExportConfiguration\",\n            },\n          },\n        },\n      },\n    },\n  },\n  requestBody: Parameters.exportProperties,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration/{exportId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationInsightsComponentExportConfiguration,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.exportId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration/{exportId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationInsightsComponentExportConfiguration,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.exportId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration/{exportId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationInsightsComponentExportConfiguration,\n    },\n  },\n  requestBody: Parameters.exportProperties,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.exportId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n"]}