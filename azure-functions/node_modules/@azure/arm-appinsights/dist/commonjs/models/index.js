"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnownStorageType = exports.KnownWorkbookUpdateSharedTypeKind = exports.KnownWorkbookSharedTypeKind = exports.KnownManagedServiceIdentityType = exports.KnownCreatedByType = exports.KnownCategoryType = exports.KnownItemType = exports.KnownItemTypeParameter = exports.KnownItemScope = exports.KnownItemScopePath = exports.KnownFavoriteSourceType = exports.KnownPurgeState = exports.KnownIngestionMode = exports.KnownPublicNetworkAccessType = exports.KnownRequestSource = exports.KnownFlowType = exports.KnownApplicationType = void 0;
/** Known values of {@link ApplicationType} that the service accepts. */
var KnownApplicationType;
(function (KnownApplicationType) {
    /** Web */
    KnownApplicationType["Web"] = "web";
    /** Other */
    KnownApplicationType["Other"] = "other";
})(KnownApplicationType || (exports.KnownApplicationType = KnownApplicationType = {}));
/** Known values of {@link FlowType} that the service accepts. */
var KnownFlowType;
(function (KnownFlowType) {
    /** Bluefield */
    KnownFlowType["Bluefield"] = "Bluefield";
})(KnownFlowType || (exports.KnownFlowType = KnownFlowType = {}));
/** Known values of {@link RequestSource} that the service accepts. */
var KnownRequestSource;
(function (KnownRequestSource) {
    /** Rest */
    KnownRequestSource["Rest"] = "rest";
})(KnownRequestSource || (exports.KnownRequestSource = KnownRequestSource = {}));
/** Known values of {@link PublicNetworkAccessType} that the service accepts. */
var KnownPublicNetworkAccessType;
(function (KnownPublicNetworkAccessType) {
    /** Enables connectivity to Application Insights through public DNS. */
    KnownPublicNetworkAccessType["Enabled"] = "Enabled";
    /** Disables public connectivity to Application Insights through public DNS. */
    KnownPublicNetworkAccessType["Disabled"] = "Disabled";
})(KnownPublicNetworkAccessType || (exports.KnownPublicNetworkAccessType = KnownPublicNetworkAccessType = {}));
/** Known values of {@link IngestionMode} that the service accepts. */
var KnownIngestionMode;
(function (KnownIngestionMode) {
    /** ApplicationInsights */
    KnownIngestionMode["ApplicationInsights"] = "ApplicationInsights";
    /** ApplicationInsightsWithDiagnosticSettings */
    KnownIngestionMode["ApplicationInsightsWithDiagnosticSettings"] = "ApplicationInsightsWithDiagnosticSettings";
    /** LogAnalytics */
    KnownIngestionMode["LogAnalytics"] = "LogAnalytics";
})(KnownIngestionMode || (exports.KnownIngestionMode = KnownIngestionMode = {}));
/** Known values of {@link PurgeState} that the service accepts. */
var KnownPurgeState;
(function (KnownPurgeState) {
    /** Pending */
    KnownPurgeState["Pending"] = "pending";
    /** Completed */
    KnownPurgeState["Completed"] = "completed";
})(KnownPurgeState || (exports.KnownPurgeState = KnownPurgeState = {}));
/** Known values of {@link FavoriteSourceType} that the service accepts. */
var KnownFavoriteSourceType;
(function (KnownFavoriteSourceType) {
    /** Retention */
    KnownFavoriteSourceType["Retention"] = "retention";
    /** Notebook */
    KnownFavoriteSourceType["Notebook"] = "notebook";
    /** Sessions */
    KnownFavoriteSourceType["Sessions"] = "sessions";
    /** Events */
    KnownFavoriteSourceType["Events"] = "events";
    /** Userflows */
    KnownFavoriteSourceType["Userflows"] = "userflows";
    /** Funnel */
    KnownFavoriteSourceType["Funnel"] = "funnel";
    /** Impact */
    KnownFavoriteSourceType["Impact"] = "impact";
    /** Segmentation */
    KnownFavoriteSourceType["Segmentation"] = "segmentation";
})(KnownFavoriteSourceType || (exports.KnownFavoriteSourceType = KnownFavoriteSourceType = {}));
/** Known values of {@link ItemScopePath} that the service accepts. */
var KnownItemScopePath;
(function (KnownItemScopePath) {
    /** AnalyticsItems */
    KnownItemScopePath["AnalyticsItems"] = "analyticsItems";
    /** MyanalyticsItems */
    KnownItemScopePath["MyanalyticsItems"] = "myanalyticsItems";
})(KnownItemScopePath || (exports.KnownItemScopePath = KnownItemScopePath = {}));
/** Known values of {@link ItemScope} that the service accepts. */
var KnownItemScope;
(function (KnownItemScope) {
    /** Shared */
    KnownItemScope["Shared"] = "shared";
    /** User */
    KnownItemScope["User"] = "user";
})(KnownItemScope || (exports.KnownItemScope = KnownItemScope = {}));
/** Known values of {@link ItemTypeParameter} that the service accepts. */
var KnownItemTypeParameter;
(function (KnownItemTypeParameter) {
    /** None */
    KnownItemTypeParameter["None"] = "none";
    /** Query */
    KnownItemTypeParameter["Query"] = "query";
    /** Function */
    KnownItemTypeParameter["Function"] = "function";
    /** Folder */
    KnownItemTypeParameter["Folder"] = "folder";
    /** Recent */
    KnownItemTypeParameter["Recent"] = "recent";
})(KnownItemTypeParameter || (exports.KnownItemTypeParameter = KnownItemTypeParameter = {}));
/** Known values of {@link ItemType} that the service accepts. */
var KnownItemType;
(function (KnownItemType) {
    /** None */
    KnownItemType["None"] = "none";
    /** Query */
    KnownItemType["Query"] = "query";
    /** Recent */
    KnownItemType["Recent"] = "recent";
    /** Function */
    KnownItemType["Function"] = "function";
})(KnownItemType || (exports.KnownItemType = KnownItemType = {}));
/** Known values of {@link CategoryType} that the service accepts. */
var KnownCategoryType;
(function (KnownCategoryType) {
    /** Workbook */
    KnownCategoryType["Workbook"] = "workbook";
    /** TSG */
    KnownCategoryType["TSG"] = "TSG";
    /** Performance */
    KnownCategoryType["Performance"] = "performance";
    /** Retention */
    KnownCategoryType["Retention"] = "retention";
})(KnownCategoryType || (exports.KnownCategoryType = KnownCategoryType = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (exports.KnownCreatedByType = KnownCreatedByType = {}));
/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
var KnownManagedServiceIdentityType;
(function (KnownManagedServiceIdentityType) {
    /** None */
    KnownManagedServiceIdentityType["None"] = "None";
    /** SystemAssigned */
    KnownManagedServiceIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownManagedServiceIdentityType["UserAssigned"] = "UserAssigned";
    /** SystemAssignedUserAssigned */
    KnownManagedServiceIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned,UserAssigned";
})(KnownManagedServiceIdentityType || (exports.KnownManagedServiceIdentityType = KnownManagedServiceIdentityType = {}));
/** Known values of {@link WorkbookSharedTypeKind} that the service accepts. */
var KnownWorkbookSharedTypeKind;
(function (KnownWorkbookSharedTypeKind) {
    /** Shared */
    KnownWorkbookSharedTypeKind["Shared"] = "shared";
})(KnownWorkbookSharedTypeKind || (exports.KnownWorkbookSharedTypeKind = KnownWorkbookSharedTypeKind = {}));
/** Known values of {@link WorkbookUpdateSharedTypeKind} that the service accepts. */
var KnownWorkbookUpdateSharedTypeKind;
(function (KnownWorkbookUpdateSharedTypeKind) {
    /** Shared */
    KnownWorkbookUpdateSharedTypeKind["Shared"] = "shared";
})(KnownWorkbookUpdateSharedTypeKind || (exports.KnownWorkbookUpdateSharedTypeKind = KnownWorkbookUpdateSharedTypeKind = {}));
/** Known values of {@link StorageType} that the service accepts. */
var KnownStorageType;
(function (KnownStorageType) {
    /** ServiceProfiler */
    KnownStorageType["ServiceProfiler"] = "ServiceProfiler";
})(KnownStorageType || (exports.KnownStorageType = KnownStorageType = {}));
//# sourceMappingURL=index.js.map