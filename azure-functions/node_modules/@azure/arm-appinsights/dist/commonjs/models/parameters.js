"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.category = exports.workbookTemplateUpdateParameters = exports.workbookTemplateProperties = exports.apiVersion4 = exports.apiVersion3 = exports.overrideItem = exports.itemProperties = exports.name = exports.id = exports.includeContent = exports.typeParam = exports.scope = exports.scopePath = exports.componentName = exports.webTestTags = exports.webTestDefinition = exports.webTestName = exports.apiVersion2 = exports.favoriteProperties = exports.favoriteId = exports.tags = exports.canFetchContent = exports.sourceType = exports.favoriteType = exports.workItemConfigId = exports.workItemConfigurationProperties = exports.proactiveDetectionProperties = exports.configurationId = exports.billingFeaturesProperties = exports.exportId = exports.exportProperties = exports.keyId = exports.aPIKeyProperties = exports.annotationId = exports.annotationProperties = exports.end = exports.start = exports.apiVersion1 = exports.nextLink = exports.purgeId = exports.body = exports.componentTags = exports.insightProperties = exports.contentType = exports.resourceName = exports.resourceGroupName = exports.subscriptionId = exports.apiVersion = exports.$host = exports.accept = void 0;
exports.apiVersion8 = exports.category1 = exports.linkedStorageAccountsProperties1 = exports.linkedStorageAccountsProperties = exports.storageType = exports.apiVersion7 = exports.apiVersion6 = exports.resourceUri = exports.revisionId = exports.workbookUpdateParameters = exports.workbookProperties = exports.sourceId = exports.apiVersion5 = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.$host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-02-02",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1,
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1,
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.resourceName = {
    parameterPath: "resourceName",
    mapper: {
        serializedName: "resourceName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.insightProperties = {
    parameterPath: "insightProperties",
    mapper: mappers_js_1.ApplicationInsightsComponent,
};
exports.componentTags = {
    parameterPath: "componentTags",
    mapper: mappers_js_1.TagsResource,
};
exports.body = {
    parameterPath: "body",
    mapper: mappers_js_1.ComponentPurgeBody,
};
exports.purgeId = {
    parameterPath: "purgeId",
    mapper: {
        serializedName: "purgeId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2015-05-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.start = {
    parameterPath: "start",
    mapper: {
        serializedName: "start",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.end = {
    parameterPath: "end",
    mapper: {
        serializedName: "end",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.annotationProperties = {
    parameterPath: "annotationProperties",
    mapper: mappers_js_1.Annotation,
};
exports.annotationId = {
    parameterPath: "annotationId",
    mapper: {
        serializedName: "annotationId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.aPIKeyProperties = {
    parameterPath: "aPIKeyProperties",
    mapper: mappers_js_1.APIKeyRequest,
};
exports.keyId = {
    parameterPath: "keyId",
    mapper: {
        serializedName: "keyId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.exportProperties = {
    parameterPath: "exportProperties",
    mapper: mappers_js_1.ApplicationInsightsComponentExportRequest,
};
exports.exportId = {
    parameterPath: "exportId",
    mapper: {
        serializedName: "exportId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.billingFeaturesProperties = {
    parameterPath: "billingFeaturesProperties",
    mapper: mappers_js_1.ApplicationInsightsComponentBillingFeatures,
};
exports.configurationId = {
    parameterPath: "configurationId",
    mapper: {
        serializedName: "ConfigurationId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.proactiveDetectionProperties = {
    parameterPath: "proactiveDetectionProperties",
    mapper: mappers_js_1.ApplicationInsightsComponentProactiveDetectionConfiguration,
};
exports.workItemConfigurationProperties = {
    parameterPath: "workItemConfigurationProperties",
    mapper: mappers_js_1.WorkItemCreateConfiguration,
};
exports.workItemConfigId = {
    parameterPath: "workItemConfigId",
    mapper: {
        serializedName: "workItemConfigId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.favoriteType = {
    parameterPath: ["options", "favoriteType"],
    mapper: {
        serializedName: "favoriteType",
        type: {
            name: "Enum",
            allowedValues: ["shared", "user"],
        },
    },
};
exports.sourceType = {
    parameterPath: ["options", "sourceType"],
    mapper: {
        serializedName: "sourceType",
        type: {
            name: "String",
        },
    },
};
exports.canFetchContent = {
    parameterPath: ["options", "canFetchContent"],
    mapper: {
        serializedName: "canFetchContent",
        type: {
            name: "Boolean",
        },
    },
};
exports.tags = {
    parameterPath: ["options", "tags"],
    mapper: {
        serializedName: "tags",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String",
                },
            },
        },
    },
    collectionFormat: "CSV",
};
exports.favoriteId = {
    parameterPath: "favoriteId",
    mapper: {
        serializedName: "favoriteId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.favoriteProperties = {
    parameterPath: "favoriteProperties",
    mapper: mappers_js_1.ApplicationInsightsComponentFavorite,
};
exports.apiVersion2 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-06-15",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.webTestName = {
    parameterPath: "webTestName",
    mapper: {
        serializedName: "webTestName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.webTestDefinition = {
    parameterPath: "webTestDefinition",
    mapper: mappers_js_1.WebTest,
};
exports.webTestTags = {
    parameterPath: "webTestTags",
    mapper: mappers_js_1.TagsResource,
};
exports.componentName = {
    parameterPath: "componentName",
    mapper: {
        serializedName: "componentName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.scopePath = {
    parameterPath: "scopePath",
    mapper: {
        serializedName: "scopePath",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.scope = {
    parameterPath: ["options", "scope"],
    mapper: {
        serializedName: "scope",
        type: {
            name: "String",
        },
    },
};
exports.typeParam = {
    parameterPath: ["options", "type"],
    mapper: {
        defaultValue: "none",
        serializedName: "type",
        type: {
            name: "String",
        },
    },
};
exports.includeContent = {
    parameterPath: ["options", "includeContent"],
    mapper: {
        serializedName: "includeContent",
        type: {
            name: "Boolean",
        },
    },
};
exports.id = {
    parameterPath: ["options", "id"],
    mapper: {
        serializedName: "id",
        type: {
            name: "String",
        },
    },
};
exports.name = {
    parameterPath: ["options", "name"],
    mapper: {
        serializedName: "name",
        type: {
            name: "String",
        },
    },
};
exports.itemProperties = {
    parameterPath: "itemProperties",
    mapper: mappers_js_1.ApplicationInsightsComponentAnalyticsItem,
};
exports.overrideItem = {
    parameterPath: ["options", "overrideItem"],
    mapper: {
        serializedName: "overrideItem",
        type: {
            name: "Boolean",
        },
    },
};
exports.apiVersion3 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-03-08",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.apiVersion4 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-11-20",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.workbookTemplateProperties = {
    parameterPath: "workbookTemplateProperties",
    mapper: mappers_js_1.WorkbookTemplate,
};
exports.workbookTemplateUpdateParameters = {
    parameterPath: ["options", "workbookTemplateUpdateParameters"],
    mapper: mappers_js_1.WorkbookTemplateUpdateParameters,
};
exports.category = {
    parameterPath: "category",
    mapper: {
        serializedName: "category",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.apiVersion5 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2023-06-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.sourceId = {
    parameterPath: ["options", "sourceId"],
    mapper: {
        serializedName: "sourceId",
        type: {
            name: "String",
        },
    },
};
exports.workbookProperties = {
    parameterPath: "workbookProperties",
    mapper: mappers_js_1.Workbook,
};
exports.workbookUpdateParameters = {
    parameterPath: ["options", "workbookUpdateParameters"],
    mapper: mappers_js_1.WorkbookUpdateParameters,
};
exports.revisionId = {
    parameterPath: "revisionId",
    mapper: {
        serializedName: "revisionId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.resourceUri = {
    parameterPath: "resourceUri",
    mapper: {
        serializedName: "resourceUri",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.apiVersion6 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-10-14",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.apiVersion7 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-03-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.storageType = {
    parameterPath: "storageType",
    mapper: {
        serializedName: "storageType",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.linkedStorageAccountsProperties = {
    parameterPath: "linkedStorageAccountsProperties",
    mapper: mappers_js_1.ComponentLinkedStorageAccounts,
};
exports.linkedStorageAccountsProperties1 = {
    parameterPath: "linkedStorageAccountsProperties",
    mapper: mappers_js_1.ComponentLinkedStorageAccountsPatch,
};
exports.category1 = {
    parameterPath: ["options", "category"],
    mapper: {
        serializedName: "category",
        type: {
            name: "String",
        },
    },
};
exports.apiVersion8 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-02-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
//# sourceMappingURL=parameters.js.map