{"version":3,"file":"componentCurrentBillingFeatures.js","sourceRoot":"","sources":["../../../src/operations/componentCurrentBillingFeatures.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAUtD,mEAAmE;AACnE,MAAM,OAAO,mCAAmC;IAK9C;;;OAGG;IACH,YAAY,MAA2C;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACH,GAAG,CACD,iBAAyB,EACzB,YAAoB,EACpB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5C,gBAAgB,CACjB,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,MAAM,CACJ,iBAAyB,EACzB,YAAoB,EACpB,yBAAsE,EACtE,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,yBAAyB,EAAE,OAAO,EAAE,EACvE,mBAAmB,CACpB,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2CAA2C;SAChE;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2CAA2C;SAChE;KACF;IACD,WAAW,EAAE,UAAU,CAAC,yBAAyB;IACjD,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ComponentCurrentBillingFeatures } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ApplicationInsightsManagementClient } from \"../applicationInsightsManagementClient.js\";\nimport {\n  ComponentCurrentBillingFeaturesGetOptionalParams,\n  ComponentCurrentBillingFeaturesGetResponse,\n  ApplicationInsightsComponentBillingFeatures,\n  ComponentCurrentBillingFeaturesUpdateOptionalParams,\n  ComponentCurrentBillingFeaturesUpdateResponse,\n} from \"../models/index.js\";\n\n/** Class containing ComponentCurrentBillingFeatures operations. */\nexport class ComponentCurrentBillingFeaturesImpl\n  implements ComponentCurrentBillingFeatures\n{\n  private readonly client: ApplicationInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class ComponentCurrentBillingFeatures class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ApplicationInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns current billing features for an Application Insights component.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the Application Insights component resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceName: string,\n    options?: ComponentCurrentBillingFeaturesGetOptionalParams,\n  ): Promise<ComponentCurrentBillingFeaturesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Update current billing features for an Application Insights component.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the Application Insights component resource.\n   * @param billingFeaturesProperties Properties that need to be specified to update billing features for\n   *                                  an Application Insights component.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    resourceName: string,\n    billingFeaturesProperties: ApplicationInsightsComponentBillingFeatures,\n    options?: ComponentCurrentBillingFeaturesUpdateOptionalParams,\n  ): Promise<ComponentCurrentBillingFeaturesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, resourceName, billingFeaturesProperties, options },\n      updateOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/currentbillingfeatures\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationInsightsComponentBillingFeatures,\n    },\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/currentbillingfeatures\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationInsightsComponentBillingFeatures,\n    },\n  },\n  requestBody: Parameters.billingFeaturesProperties,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n"]}