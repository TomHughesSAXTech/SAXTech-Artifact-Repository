{"version":3,"file":"liveToken.js","sourceRoot":"","sources":["../../../src/operations/liveToken.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAItD,6CAA6C;AAC7C,MAAM,OAAO,aAAa;IAGxB;;;OAGG;IACH,YAAY,MAA2C;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,GAAG,CACD,WAAmB,EACnB,OAAoC;QAEpC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,EACxB,gBAAgB,CACjB,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EAAE,+DAA+D;IACrE,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,WAAW,CAAC;IACzD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LiveToken } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ApplicationInsightsManagementClient } from \"../applicationInsightsManagementClient.js\";\nimport { LiveTokenGetOptionalParams, LiveTokenGetResponse } from \"../models/index.js\";\n\n/** Class containing LiveToken operations. */\nexport class LiveTokenImpl implements LiveToken {\n  private readonly client: ApplicationInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class LiveToken class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ApplicationInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * **Gets an access token for live metrics stream data.**\n   * @param resourceUri The identifier of the resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceUri: string,\n    options?: LiveTokenGetOptionalParams,\n  ): Promise<LiveTokenGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      getOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceUri}/providers/Microsoft.Insights/generatelivetoken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LiveTokenResponse,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseLinkedStorage,\n    },\n  },\n  queryParameters: [Parameters.apiVersion6],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}